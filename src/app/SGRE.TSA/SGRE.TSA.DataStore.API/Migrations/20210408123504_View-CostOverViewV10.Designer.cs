// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SGRE.TSA.DataStore.API;
using SGRE.TSA.DataStore.API.Models;

namespace SGRE.TSA.DataStore.API.Migrations
{
    [DbContext(typeof(TsaContext))]
    [Migration("20210408123504_View-CostOverViewV10")]
    partial class ViewCostOverViewV10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ApplicationMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("ApplicationModeNo")
                        .HasColumnType("integer")
                        .HasColumnName("application_mode_no");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("PowerRating")
                        .HasColumnType("numeric")
                        .HasColumnName("power_rating");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_application_modes");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_application_modes_wtg_catalogue_id");

                    b.ToTable("application_modes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationModeNo = 0,
                            PowerRating = 6.2m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApplicationModeNo = 1,
                            PowerRating = 6.1m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 3,
                            ApplicationModeNo = 2,
                            PowerRating = 6m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 4,
                            ApplicationModeNo = 3,
                            PowerRating = 5.9m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 5,
                            ApplicationModeNo = 4,
                            PowerRating = 5.8m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 6,
                            ApplicationModeNo = 5,
                            PowerRating = 5.7m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 7,
                            ApplicationModeNo = 6,
                            PowerRating = 5.6m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 8,
                            ApplicationModeNo = 0,
                            PowerRating = 6.6m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 9,
                            ApplicationModeNo = 1,
                            PowerRating = 6.5m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 10,
                            ApplicationModeNo = 2,
                            PowerRating = 6.4m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 11,
                            ApplicationModeNo = 3,
                            PowerRating = 6.3m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 12,
                            ApplicationModeNo = 4,
                            PowerRating = 6.2m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 13,
                            ApplicationModeNo = 5,
                            PowerRating = 6.1m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 14,
                            ApplicationModeNo = 6,
                            PowerRating = 6m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 15,
                            ApplicationModeNo = 7,
                            PowerRating = 5.8m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 16,
                            ApplicationModeNo = 8,
                            PowerRating = 5.6m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 17,
                            ApplicationModeNo = 0,
                            PowerRating = 5m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 18,
                            ApplicationModeNo = 1,
                            PowerRating = 4.9m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 19,
                            ApplicationModeNo = 2,
                            PowerRating = 4.8m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 20,
                            ApplicationModeNo = 3,
                            PowerRating = 4.7m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 21,
                            ApplicationModeNo = 4,
                            PowerRating = 4.6m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 22,
                            ApplicationModeNo = 5,
                            PowerRating = 4.5m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 23,
                            ApplicationModeNo = 6,
                            PowerRating = 4.2m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 24,
                            ApplicationModeNo = 7,
                            PowerRating = 4m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 25,
                            ApplicationModeNo = 0,
                            PowerRating = 5m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 26,
                            ApplicationModeNo = 1,
                            PowerRating = 4.9m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 27,
                            ApplicationModeNo = 2,
                            PowerRating = 4.8m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 28,
                            ApplicationModeNo = 3,
                            PowerRating = 4.7m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 29,
                            ApplicationModeNo = 4,
                            PowerRating = 4.6m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 30,
                            ApplicationModeNo = 5,
                            PowerRating = 4.5m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 31,
                            ApplicationModeNo = 6,
                            PowerRating = 4.2m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 32,
                            ApplicationModeNo = 7,
                            PowerRating = 4m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 33,
                            ApplicationModeNo = 0,
                            PowerRating = 3.465m,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 34,
                            ApplicationModeNo = 1,
                            PowerRating = 3.6m,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 35,
                            ApplicationModeNo = -1,
                            PowerRating = 3.3m,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 36,
                            ApplicationModeNo = 0,
                            PowerRating = 3.465m,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 37,
                            ApplicationModeNo = 1,
                            PowerRating = 3.55m,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 38,
                            ApplicationModeNo = 2,
                            PowerRating = 3.65m,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 39,
                            ApplicationModeNo = 3,
                            PowerRating = 3.75m,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 40,
                            ApplicationModeNo = 3,
                            PowerRating = 5m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 41,
                            ApplicationModeNo = 2,
                            PowerRating = 4.9m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 42,
                            ApplicationModeNo = 1,
                            PowerRating = 4.8m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 43,
                            ApplicationModeNo = 0,
                            PowerRating = 4.7m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 44,
                            ApplicationModeNo = -1,
                            PowerRating = 4.6m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 45,
                            ApplicationModeNo = -2,
                            PowerRating = 4.5m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 46,
                            ApplicationModeNo = -3,
                            PowerRating = 4.2m,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 47,
                            ApplicationModeNo = -4,
                            PowerRating = 4m,
                            WtgCatalogueId = 7
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ApplicationReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("reason");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_application_reasons");

                    b.ToTable("application_reasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Reason = "New hub height with potential LCoE improvement"
                        },
                        new
                        {
                            Id = 2,
                            Reason = "Tower Cost out larger diameter"
                        },
                        new
                        {
                            Id = 3,
                            Reason = "Tower Cost out by reduction of loads margin"
                        },
                        new
                        {
                            Id = 4,
                            Reason = "Project enabler noise modes"
                        },
                        new
                        {
                            Id = 5,
                            Reason = "Project enabler logistic"
                        },
                        new
                        {
                            Id = 6,
                            Reason = "Lifetime extension (compared to STP/ETP)"
                        },
                        new
                        {
                            Id = 7,
                            Reason = "Other:"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("AepP50HubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_p50hub_height");

                    b.Property<int[]>("ApplicationModes")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("application_modes");

                    b.Property<decimal>("AverageShear")
                        .HasColumnType("numeric")
                        .HasColumnName("average_shear");

                    b.Property<decimal>("ClusterSize")
                        .HasColumnType("numeric")
                        .HasColumnName("cluster_size");

                    b.Property<string>("Features")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("features");

                    b.Property<bool>("HigherHubheightPossibleTrigger")
                        .HasColumnType("boolean")
                        .HasColumnName("higher_hubheight_possible_trigger");

                    b.Property<decimal>("HubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height");

                    b.Property<bool>("IsCostTimelinesRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_cost_timelines_request");

                    b.Property<bool>("IsPredesignLogisticAssessmentRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_predesign_logistic_assessment_request");

                    b.Property<bool>("IsRnaComponentCheck")
                        .HasColumnType("boolean")
                        .HasColumnName("is_rna_component_check");

                    b.Property<bool>("IsSarInputRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sar_input_request");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("LoadsClusterId")
                        .HasColumnType("integer")
                        .HasColumnName("loads_cluster_id");

                    b.Property<decimal>("MaxShear")
                        .HasColumnType("numeric")
                        .HasColumnName("max_shear");

                    b.Property<string>("NoiseModeDocLink")
                        .HasColumnType("text")
                        .HasColumnName("noise_mode_doc_link");

                    b.Property<int[]>("NoiseModes")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("noise_modes");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("RnaLifeTime")
                        .HasColumnType("numeric")
                        .HasColumnName("rna_life_time");

                    b.Property<string>("SarCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sar_code");

                    b.Property<int>("SarInputRequestStages")
                        .HasColumnType("integer")
                        .HasColumnName("sar_input_request_stages");

                    b.Property<int>("ScenarioType")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_type");

                    b.Property<decimal>("TowerLoadsMargin")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_loads_margin");

                    b.Property<bool>("TowerLoadsMarginTrigger")
                        .HasColumnType("boolean")
                        .HasColumnName("tower_loads_margin_trigger");

                    b.Property<int>("TowerTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_type_id");

                    b.Property<int>("TurbineQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("turbine_quantity");

                    b.Property<string>("WindfarmConfigurationId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("windfarm_configuration_id");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_base_tower");

                    b.HasIndex("LoadsClusterId")
                        .HasDatabaseName("ix_base_tower_loads_cluster_id");

                    b.HasIndex("QuoteId")
                        .HasDatabaseName("ix_base_tower_quote_id");

                    b.HasIndex("TowerTypeId")
                        .HasDatabaseName("ix_base_tower_tower_type_id");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_base_tower_wtg_catalogue_id");

                    b.ToTable("base_tower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTowerAepHubheight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<decimal?>("AepBindingOfferNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_binding_offer_net");

                    b.Property<decimal?>("AepHubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_hub_height");

                    b.Property<decimal?>("AepNominationGross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_nomination_gross");

                    b.Property<decimal?>("AepSignatureNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_signature_net");

                    b.Property<int>("BaseTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("base_tower_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_base_tower_aep_hubheight");

                    b.HasIndex("BaseTowerId")
                        .IsUnique()
                        .HasDatabaseName("ix_base_tower_aep_hubheight_base_tower_id");

                    b.ToTable("base_tower_aep_hubheight");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTowerDesignDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("BaseTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("base_tower_id");

                    b.Property<decimal>("ConcretePedestal")
                        .HasColumnType("numeric")
                        .HasColumnName("concrete_pedestal");

                    b.Property<decimal>("FoundationHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("foundation_height");

                    b.Property<decimal>("GroundLevel")
                        .HasColumnType("numeric")
                        .HasColumnName("ground_level");

                    b.Property<decimal>("GroutHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("grout_height");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("TotalFoundationHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("total_foundation_height");

                    b.Property<decimal>("TowerHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_height");

                    b.Property<decimal>("TowerHubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_hub_height");

                    b.Property<decimal>("TowerNacelleDistance")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_nacelle_distance");

                    b.Property<decimal?>("TowerWeight")
                        .IsRequired()
                        .HasColumnType("numeric")
                        .HasColumnName("tower_weight");

                    b.Property<decimal>("UpperTemplate")
                        .HasColumnType("numeric")
                        .HasColumnName("upper_template");

                    b.HasKey("Id")
                        .HasName("pk_base_tower_design_dimension");

                    b.HasIndex("BaseTowerId")
                        .IsUnique()
                        .HasDatabaseName("ix_base_tower_design_dimension_base_tower_id");

                    b.ToTable("base_tower_design_dimension");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("CertificationName")
                        .HasColumnType("text")
                        .HasColumnName("certification_name");

                    b.HasKey("Id")
                        .HasName("pk_certifications");

                    b.ToTable("certifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CertificationName = "Tower component certificate"
                        },
                        new
                        {
                            Id = 2,
                            CertificationName = "Site Suitability Design Assessment (SSDA)"
                        },
                        new
                        {
                            Id = 3,
                            CertificationName = "Tower component certificate & Site Suitability Design Assessment (SSDA)"
                        },
                        new
                        {
                            Id = 4,
                            CertificationName = "none"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ConstructionConstraint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("AdditionalRequirements")
                        .HasColumnType("text")
                        .HasColumnName("additional_requirements");

                    b.Property<decimal>("CraneLiftingHeighMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("crane_lifting_heigh_mtrs");

                    b.Property<decimal>("CraneLiftingWeightTon")
                        .HasColumnType("numeric")
                        .HasColumnName("crane_lifting_weight_ton");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("ProjectConstraintId")
                        .HasColumnType("integer")
                        .HasColumnName("project_constraint_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_construction_constraints");

                    b.HasIndex("ProjectConstraintId")
                        .IsUnique()
                        .HasDatabaseName("ix_construction_constraints_project_constraint_id");

                    b.ToTable("construction_constraints");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsCostFeebackRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_cost_feeback_request");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_id");

                    b.Property<int>("ScenarioType")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_type");

                    b.HasKey("Id")
                        .HasName("pk_cost_feed_back");

                    b.HasIndex("ScenarioId")
                        .IsUnique()
                        .HasDatabaseName("ix_cost_feed_back_scenario_id");

                    b.ToTable("cost_feed_back");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostOverView", b =>
                {
                    b.Property<decimal>("Nomination")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination");

                    b.Property<decimal>("NominationWindfarm")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination_windfarm");

                    b.Property<decimal>("Offer")
                        .HasColumnType("numeric")
                        .HasColumnName("offer");

                    b.Property<decimal>("OfferWindfarm")
                        .HasColumnType("numeric")
                        .HasColumnName("offer_windfarm");

                    b.Property<string>("Position")
                        .HasColumnType("text")
                        .HasColumnName("position");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer")
                        .HasColumnName("position_id");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_id");

                    b.Property<decimal>("Signature")
                        .HasColumnType("numeric")
                        .HasColumnName("signature");

                    b.Property<decimal>("SignatureWindfarm")
                        .HasColumnType("numeric")
                        .HasColumnName("signature_windfarm");

                    b.ToView("cost_overview");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostOverViewMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("SubSectionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sub_section_name");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_cost_over_view_meta");

                    b.ToTable("cost_over_view_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            SubSectionName = "Tower EXW",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            SubSectionName = "Logistics",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 3,
                            IsMandatory = true,
                            SubSectionName = "Construction",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 4,
                            IsMandatory = true,
                            SubSectionName = "Customs",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 5,
                            IsMandatory = true,
                            SubSectionName = "Tower Design",
                            TypeOfTower = 1
                        },
                        new
                        {
                            Id = 6,
                            IsMandatory = true,
                            SubSectionName = "Certification",
                            TypeOfTower = 1
                        },
                        new
                        {
                            Id = 7,
                            IsMandatory = true,
                            SubSectionName = "Total Cost",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 8,
                            IsMandatory = true,
                            SubSectionName = "RNA*",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 9,
                            IsMandatory = true,
                            SubSectionName = "Cost incl. RNA",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostOverViewRNA", b =>
                {
                    b.Property<decimal>("Nomination")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination");

                    b.Property<decimal>("NominationWindfarm")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination_windfarm");

                    b.Property<decimal>("Offer")
                        .HasColumnType("numeric")
                        .HasColumnName("offer");

                    b.Property<decimal>("OfferWindfarm")
                        .HasColumnType("numeric")
                        .HasColumnName("offer_windfarm");

                    b.Property<string>("Position")
                        .HasColumnType("text")
                        .HasColumnName("position");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer")
                        .HasColumnName("position_id");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_id");

                    b.Property<decimal>("Signature")
                        .HasColumnType("numeric")
                        .HasColumnName("signature");

                    b.Property<decimal>("SignatureWindfarm")
                        .HasColumnType("numeric")
                        .HasColumnName("signature_windfarm");

                    b.ToView("cost_overview_rna");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTechnology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("AdditinalComments")
                        .HasColumnType("text")
                        .HasColumnName("additinal_comments");

                    b.Property<int>("CostFeedbackId")
                        .HasColumnType("integer")
                        .HasColumnName("cost_feedback_id");

                    b.Property<int>("CostTowerDevFeedback")
                        .HasColumnType("integer")
                        .HasColumnName("cost_tower_dev_feedback");

                    b.Property<int>("EnvelopStatus")
                        .HasColumnType("integer")
                        .HasColumnName("envelop_status");

                    b.Property<bool>("IsFeedbackRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_feedback_request");

                    b.Property<bool>("IsLeadTimeInputRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_lead_time_input_request");

                    b.Property<bool>("IsPhaseComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_phase_complete");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("LeadTimeTowerNomination")
                        .HasColumnType("numeric")
                        .HasColumnName("lead_time_tower_nomination");

                    b.Property<decimal>("LeadTimeTowerOffer")
                        .HasColumnType("numeric")
                        .HasColumnName("lead_time_tower_offer");

                    b.Property<decimal>("LeadTimeTowerSignature")
                        .HasColumnType("numeric")
                        .HasColumnName("lead_time_tower_signature");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioProgress")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_progress");

                    b.Property<decimal>("TowerComponentCertificateWindfarmClusterNomination")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_component_certificate_windfarm_cluster_nomination");

                    b.Property<decimal>("TowerComponentCertificateWindfarmClusterOffer")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_component_certificate_windfarm_cluster_offer");

                    b.Property<decimal>("TowerComponentCertificateWindfarmClusterSignature")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_component_certificate_windfarm_cluster_signature");

                    b.HasKey("Id")
                        .HasName("pk_costs_technology");

                    b.HasIndex("CostFeedbackId")
                        .IsUnique()
                        .HasDatabaseName("ix_costs_technology_cost_feedback_id");

                    b.ToTable("costs_technology");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerConstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("AdditionalFeeback")
                        .HasColumnType("text")
                        .HasColumnName("additional_feeback");

                    b.Property<int>("AdditionalTimelineWeeksWindfarm")
                        .HasColumnType("integer")
                        .HasColumnName("additional_timeline_weeks_windfarm");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("CostFeedbackId")
                        .HasColumnType("integer")
                        .HasColumnName("cost_feedback_id");

                    b.Property<decimal>("CostNomination")
                        .HasColumnType("numeric")
                        .HasColumnName("cost_nomination");

                    b.Property<decimal>("CostOffer")
                        .HasColumnType("numeric")
                        .HasColumnName("cost_offer");

                    b.Property<decimal>("CostSignature")
                        .HasColumnType("numeric")
                        .HasColumnName("cost_signature");

                    b.Property<int>("CostsTowerConstructionMetaId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_construction_meta_id");

                    b.Property<decimal>("DesignCostWindFarm")
                        .HasColumnType("numeric")
                        .HasColumnName("design_cost_wind_farm");

                    b.Property<bool>("IsPhaseComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_phase_complete");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("LeadTimesNominationWTG")
                        .HasColumnType("integer")
                        .HasColumnName("lead_times_nomination_wtg");

                    b.Property<int>("LeadTimesOfferWTG")
                        .HasColumnType("integer")
                        .HasColumnName("lead_times_offer_wtg");

                    b.Property<int>("LeadTimesSignatureWTG")
                        .HasColumnType("integer")
                        .HasColumnName("lead_times_signature_wtg");

                    b.Property<decimal>("ManufacturingInvestmentCostsWindFarm")
                        .HasColumnType("numeric")
                        .HasColumnName("manufacturing_investment_costs_wind_farm");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioProgress")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_progress");

                    b.Property<int>("ToolKitEvaluation")
                        .HasColumnType("integer")
                        .HasColumnName("tool_kit_evaluation");

                    b.Property<string>("ToolKitEvaluationDocLink")
                        .HasColumnType("text")
                        .HasColumnName("tool_kit_evaluation_doc_link");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_construction");

                    b.HasIndex("CostFeedbackId")
                        .IsUnique()
                        .HasDatabaseName("ix_costs_tower_construction_cost_feedback_id");

                    b.HasIndex("CostsTowerConstructionMetaId")
                        .HasDatabaseName("ix_costs_tower_construction_costs_tower_construction_meta_id");

                    b.ToTable("costs_tower_construction");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerConstructionLeadTimeMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_construction_lead_time_meta");

                    b.ToTable("costs_tower_construction_lead_time_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "Total erection(dys)",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerConstructionMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_construction_meta");

                    b.ToTable("costs_tower_construction_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "Total per WTG",
                            LineItemType = "decimal",
                            TypeOfTower = 1
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            LineItemName = "Total",
                            LineItemType = "decimal",
                            TypeOfTower = 0
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustoms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostFeedbackId")
                        .HasColumnType("integer")
                        .HasColumnName("cost_feedback_id");

                    b.Property<bool>("IsPhaseComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_phase_complete");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioProgress")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_progress");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_customs");

                    b.HasIndex("CostFeedbackId")
                        .HasDatabaseName("ix_costs_tower_customs_cost_feedback_id");

                    b.ToTable("costs_tower_customs");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostsTowerCustomsMetaId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_customs_meta_id");

                    b.Property<int>("CostsTowerCustomsSupplierId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_customs_supplier_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("Nomination")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination");

                    b.Property<decimal>("Offer")
                        .HasColumnType("numeric")
                        .HasColumnName("offer");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("Signature")
                        .HasColumnType("numeric")
                        .HasColumnName("signature");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_customs_line_item");

                    b.HasIndex("CostsTowerCustomsMetaId")
                        .HasDatabaseName("ix_costs_tower_customs_line_item_costs_tower_customs_meta_id");

                    b.HasIndex("CostsTowerCustomsSupplierId")
                        .HasDatabaseName("ix_costs_tower_customs_line_item_costs_tower_customs_supplier_");

                    b.ToTable("costs_tower_customs_line_item");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_customs_meta");

                    b.ToTable("costs_tower_customs_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "Customs rate on Tower EXW and LOG(%)",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            LineItemName = "Customs cost per WTG on Tower EXW and LOG",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("CostsTowerCustomsId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_customs_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_customs_supplier");

                    b.HasIndex("CostsTowerCustomsId")
                        .HasDatabaseName("ix_costs_tower_customs_supplier_costs_tower_customs_id");

                    b.ToTable("costs_tower_customs_supplier");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerExWorks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostFeedbackId")
                        .HasColumnType("integer")
                        .HasColumnName("cost_feedback_id");

                    b.Property<bool>("IsPhaseComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_phase_complete");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioProgress")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_progress");

                    b.Property<string>("TowerFabricationComments")
                        .HasColumnType("text")
                        .HasColumnName("tower_fabrication_comments");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_ex_works");

                    b.HasIndex("CostFeedbackId")
                        .IsUnique()
                        .HasDatabaseName("ix_costs_tower_ex_works_cost_feedback_id");

                    b.ToTable("costs_tower_ex_works");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerExWorksLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostsTowerExWorksId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_ex_works_id");

                    b.Property<int>("CostsTowerExWorksMetaId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_ex_works_meta_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("Nomination")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination");

                    b.Property<decimal>("Offer")
                        .HasColumnType("numeric")
                        .HasColumnName("offer");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("Signature")
                        .HasColumnType("numeric")
                        .HasColumnName("signature");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_ex_works_line_item");

                    b.HasIndex("CostsTowerExWorksId")
                        .HasDatabaseName("ix_costs_tower_ex_works_line_item_costs_tower_ex_works_id");

                    b.HasIndex("CostsTowerExWorksMetaId")
                        .HasDatabaseName("ix_costs_tower_ex_works_line_item_costs_tower_ex_works_meta_id");

                    b.ToTable("costs_tower_ex_works_line_item");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerExWorksMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_ex_works_meta");

                    b.ToTable("costs_tower_ex_works_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "Tower Flanges",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            LineItemName = "Paint",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 3,
                            IsMandatory = true,
                            LineItemName = "Tower Shell",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 4,
                            IsMandatory = true,
                            LineItemName = "Tower Conversion",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 5,
                            IsMandatory = true,
                            LineItemName = "Doorframe",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 6,
                            IsMandatory = true,
                            LineItemName = "Elevator",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 7,
                            IsMandatory = true,
                            LineItemName = "Internals",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 8,
                            IsMandatory = true,
                            LineItemName = "Others",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 9,
                            IsMandatory = true,
                            LineItemName = "Tarps & Plugs",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 10,
                            IsMandatory = true,
                            LineItemName = "Mounting kit",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 11,
                            IsMandatory = true,
                            LineItemName = "Structural Bolt",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 12,
                            IsMandatory = true,
                            LineItemName = "Flanges - anchor cage",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 13,
                            IsMandatory = true,
                            LineItemName = "Anchor Cage System",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 14,
                            IsMandatory = true,
                            LineItemName = "Handling fee",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 15,
                            IsMandatory = false,
                            LineItemName = "Tower Transport(if not EXW)",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 16,
                            IsMandatory = false,
                            LineItemName = "Customs raw material (if in scope)",
                            LineItemType = "decimal ",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("CostFeedbackId")
                        .HasColumnType("integer")
                        .HasColumnName("cost_feedback_id");

                    b.Property<bool>("IsPhaseComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_phase_complete");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioProgress")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_progress");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_logistics");

                    b.HasIndex("CostFeedbackId")
                        .HasDatabaseName("ix_costs_tower_logistics_cost_feedback_id");

                    b.ToTable("costs_tower_logistics");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsLeadTimeLineitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostsTowerLogisticsLeadTimeMetaId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_logistics_lead_time_meta_id");

                    b.Property<int>("CostsTowerLogisticsSuppliersId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_logistics_suppliers_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("Nomination")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination");

                    b.Property<decimal>("Offer")
                        .HasColumnType("numeric")
                        .HasColumnName("offer");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("Signature")
                        .HasColumnType("numeric")
                        .HasColumnName("signature");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_logistics_lead_time");

                    b.HasIndex("CostsTowerLogisticsLeadTimeMetaId")
                        .HasDatabaseName("ix_costs_tower_logistics_lead_time_costs_tower_logistics_lead_");

                    b.HasIndex("CostsTowerLogisticsSuppliersId")
                        .HasDatabaseName("ix_costs_tower_logistics_lead_time_costs_tower_logistics_suppl");

                    b.ToTable("costs_tower_logistics_lead_time");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsLeadTimeMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_logistics_lead_time_meta");

                    b.ToTable("costs_tower_logistics_lead_time_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "Transport at origin",
                            LineItemType = "int",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            LineItemName = "Sea freight",
                            LineItemType = "int",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 3,
                            IsMandatory = true,
                            LineItemName = "Transport at destination to site",
                            LineItemType = "int",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CostsTowerLogisticsMetaId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_logistics_meta_id");

                    b.Property<int>("CostsTowerLogisticsSupplierId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_logistics_supplier_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("Nomination")
                        .HasColumnType("numeric")
                        .HasColumnName("nomination");

                    b.Property<decimal>("Offer")
                        .HasColumnType("numeric")
                        .HasColumnName("offer");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("Signature")
                        .HasColumnType("numeric")
                        .HasColumnName("signature");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_logistics_line_item");

                    b.HasIndex("CostsTowerLogisticsMetaId")
                        .HasDatabaseName("ix_costs_tower_logistics_line_item_costs_tower_logistics_meta_");

                    b.HasIndex("CostsTowerLogisticsSupplierId")
                        .HasDatabaseName("ix_costs_tower_logistics_line_item_costs_tower_logistics_suppl");

                    b.ToTable("costs_tower_logistics_line_item");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_logistics_meta");

                    b.ToTable("costs_tower_logistics_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "1.2.1 - Logistic Costs - Origin",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            LineItemName = "1.2.2 - Logistic Costs - Sea freight",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 3,
                            IsMandatory = true,
                            LineItemName = "1.2.3 - Logistic Costs - Destination",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 4,
                            IsMandatory = true,
                            LineItemName = "1.2.4 - Costs out of EXWss scope",
                            LineItemType = "decimal",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostsTowerLogisticsId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_logistics_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_logistics_supplier");

                    b.HasIndex("CostsTowerLogisticsId")
                        .HasDatabaseName("ix_costs_tower_logistics_supplier_costs_tower_logistics_id");

                    b.ToTable("costs_tower_logistics_supplier");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostFeedbackId")
                        .HasColumnType("integer")
                        .HasColumnName("cost_feedback_id");

                    b.Property<bool>("IsPhaseComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_phase_complete");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioProgress")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_progress");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_supplier");

                    b.HasIndex("CostFeedbackId")
                        .HasDatabaseName("ix_costs_tower_supplier_cost_feedback_id");

                    b.ToTable("costs_tower_supplier");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerSupplierLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CostsTowerSupplierMetaId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_supplier_meta_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Nomination")
                        .HasColumnType("text")
                        .HasColumnName("nomination");

                    b.Property<string>("Offer")
                        .HasColumnType("text")
                        .HasColumnName("offer");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Signature")
                        .HasColumnType("text")
                        .HasColumnName("signature");

                    b.Property<int>("SuppliersId")
                        .HasColumnType("integer")
                        .HasColumnName("suppliers_id");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_supplier_line_item");

                    b.HasIndex("CostsTowerSupplierMetaId")
                        .HasDatabaseName("ix_costs_tower_supplier_line_item_costs_tower_supplier_meta_id");

                    b.HasIndex("SuppliersId")
                        .HasDatabaseName("ix_costs_tower_supplier_line_item_suppliers_id");

                    b.ToTable("costs_tower_supplier_line_item");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerSupplierMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean")
                        .HasColumnName("is_mandatory");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_name");

                    b.Property<string>("LineItemSource")
                        .HasColumnType("text")
                        .HasColumnName("line_item_source");

                    b.Property<string>("LineItemType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_item_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TypeOfTower")
                        .HasColumnType("integer")
                        .HasColumnName("type_of_tower");

                    b.HasKey("Id")
                        .HasName("pk_costs_tower_supplier_meta");

                    b.ToTable("costs_tower_supplier_meta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMandatory = true,
                            LineItemName = "No. of towers",
                            LineItemType = "int",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 2,
                            IsMandatory = true,
                            LineItemName = "Supplier name",
                            LineItemType = "string",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 3,
                            IsMandatory = true,
                            LineItemName = "Supplier region",
                            LineItemSource = "TowerSupplierRegion",
                            LineItemType = "string",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 4,
                            IsMandatory = true,
                            LineItemName = "Country",
                            LineItemSource = "TowerSupplierSource",
                            LineItemType = "string",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 5,
                            IsMandatory = true,
                            LineItemName = "Lead time est. (wks)",
                            LineItemType = "int",
                            TypeOfTower = 2
                        },
                        new
                        {
                            Id = 6,
                            IsMandatory = true,
                            LineItemName = "Lead time (wks)",
                            LineItemType = "int",
                            TypeOfTower = 2
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("country_name");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer")
                        .HasColumnName("currency_id");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("region_id");

                    b.HasKey("Id")
                        .HasName("pk_countries");

                    b.HasIndex("CurrencyId")
                        .HasDatabaseName("ix_countries_currency_id");

                    b.HasIndex("RegionId")
                        .HasDatabaseName("ix_countries_region_id");

                    b.ToTable("countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryName = "China",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CountryName = "Japan",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CountryName = "South Korea",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CountryName = "Australia",
                            CurrencyId = 2,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 5,
                            CountryName = "Vietnam",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 6,
                            CountryName = "New Zealand",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 7,
                            CountryName = "Philippines",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 8,
                            CountryName = "Indonesia",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 9,
                            CountryName = "Taiwan",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 10,
                            CountryName = "Pakistan",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 11,
                            CountryName = "Mongolia",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 12,
                            CountryName = "Thailand",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 13,
                            CountryName = "Myanmar",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 14,
                            CountryName = "New Caledonia",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 15,
                            CountryName = "Cambodia",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 16,
                            CountryName = "Laos",
                            CurrencyId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 17,
                            CountryName = "Brazil",
                            CurrencyId = 3,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 18,
                            CountryName = "India",
                            CurrencyId = 4,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 19,
                            CountryName = "Sri Lanka",
                            CurrencyId = 4,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 20,
                            CountryName = "Bangladesh",
                            CurrencyId = 4,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 21,
                            CountryName = "Brazil",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 22,
                            CountryName = "Mexico",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 23,
                            CountryName = "Peru",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 24,
                            CountryName = "Dominican Rep.",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 25,
                            CountryName = "Argentina",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 26,
                            CountryName = "Panama",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 27,
                            CountryName = "Chile",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 28,
                            CountryName = "Uruguay",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 29,
                            CountryName = "Colombia",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 30,
                            CountryName = "Belize",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 31,
                            CountryName = "Nicaragua",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 32,
                            CountryName = "Jamaica",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 33,
                            CountryName = "Guatemala",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 34,
                            CountryName = "Honduras",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 35,
                            CountryName = "Costa Rica",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 36,
                            CountryName = "El Salvador",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 37,
                            CountryName = "Cuba",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 38,
                            CountryName = "Dominica",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 39,
                            CountryName = "Guyana",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 40,
                            CountryName = "Ecuador",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 41,
                            CountryName = "Guadeloupe",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 42,
                            CountryName = "Puerto Rico",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 43,
                            CountryName = "Trinidad Tobago",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 44,
                            CountryName = "Bahamas",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 45,
                            CountryName = "Bolivia",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 46,
                            CountryName = "Barbados",
                            CurrencyId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 47,
                            CountryName = "Ireland",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 48,
                            CountryName = "Sweden",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 49,
                            CountryName = "Germany",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 50,
                            CountryName = "Romania",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 51,
                            CountryName = "Croatia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 52,
                            CountryName = "Finland",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 53,
                            CountryName = "Belgium",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 54,
                            CountryName = "Uzbekistan",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 55,
                            CountryName = "Serbia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 56,
                            CountryName = "United Kingdom",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 57,
                            CountryName = "Poland",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 58,
                            CountryName = "Saudi Arabia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 59,
                            CountryName = "Denmark",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 60,
                            CountryName = "Utd Arab Emir.",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 61,
                            CountryName = "Ukraine",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 62,
                            CountryName = "Bulgaria",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 63,
                            CountryName = "Azerbaijan",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 64,
                            CountryName = "Turkey",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 65,
                            CountryName = "Norway",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 66,
                            CountryName = "Moldovia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 67,
                            CountryName = "Iran Islamic Republic of",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 68,
                            CountryName = "Russian Fed.",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 69,
                            CountryName = "Bosnia-Herz.",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 70,
                            CountryName = "Israel",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 71,
                            CountryName = "Lebanon",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 72,
                            CountryName = "Kazakhstan",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 73,
                            CountryName = "Slovenia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 74,
                            CountryName = "Netherlands",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 75,
                            CountryName = "Hungary",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 76,
                            CountryName = "Albania",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 77,
                            CountryName = "Austria",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 78,
                            CountryName = "Oman",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 79,
                            CountryName = "Switzerland",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 80,
                            CountryName = "Georgia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 81,
                            CountryName = "Syrian Arab Republic",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 82,
                            CountryName = "Macedonia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 83,
                            CountryName = "Luxembourg",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 84,
                            CountryName = "Kuwait",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 85,
                            CountryName = "Czech Republic",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 86,
                            CountryName = "Yemen",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 87,
                            CountryName = "Belarus",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 88,
                            CountryName = "Lithuania",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 89,
                            CountryName = "Iceland",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 90,
                            CountryName = "Estonia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 91,
                            CountryName = "Latvia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 92,
                            CountryName = "Armenia",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 93,
                            CountryName = "Montenegro",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 94,
                            CountryName = "Faroe Islands",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 95,
                            CountryName = "Bahrain",
                            CurrencyId = 5,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 96,
                            CountryName = "USA",
                            CurrencyId = 2,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 97,
                            CountryName = "Canada",
                            CurrencyId = 2,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 98,
                            CountryName = "France",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 99,
                            CountryName = "Spain",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 100,
                            CountryName = "Greece",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 101,
                            CountryName = "Morocco",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 102,
                            CountryName = "Egypt",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 103,
                            CountryName = "South Africa",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 104,
                            CountryName = "Italy",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 105,
                            CountryName = "Ghana",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 106,
                            CountryName = "Mauritius",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 107,
                            CountryName = "Kenya",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 108,
                            CountryName = "Angola",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 109,
                            CountryName = "Togo",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 110,
                            CountryName = "Jordan",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 111,
                            CountryName = "Zambia",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 112,
                            CountryName = "Senegal",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 113,
                            CountryName = "Ethiopia",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 114,
                            CountryName = "Cyprus",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 115,
                            CountryName = "Namibia",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 116,
                            CountryName = "Gambia",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 117,
                            CountryName = "Portugal",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 118,
                            CountryName = "Djibouti",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 119,
                            CountryName = "Mauritania",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 120,
                            CountryName = "Sudan",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 121,
                            CountryName = "Mozambique",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 122,
                            CountryName = "Algeria",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 123,
                            CountryName = "Tunisia",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 124,
                            CountryName = "Tanzania",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 125,
                            CountryName = "Ivory Coast",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 126,
                            CountryName = "Guinea",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 127,
                            CountryName = "Uganda",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 128,
                            CountryName = "Nigeria",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 129,
                            CountryName = "Libya",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 130,
                            CountryName = "Cabo Verde",
                            CurrencyId = 5,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 131,
                            CountryName = "Lesotho",
                            CurrencyId = 5,
                            RegionId = 7
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_currencies");

                    b.ToTable("currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CNY/RNB",
                            Description = "Chinese Yuan/Renminbi - CNY/RMB (¥)",
                            DisplayName = "CNY/RMB (¥)",
                            Name = "Chinese Yuan/Renminbi"
                        },
                        new
                        {
                            Id = 2,
                            Code = "USD",
                            Description = "US Dollar - USD ($)",
                            DisplayName = "USD ($)",
                            Name = "United States dollar"
                        },
                        new
                        {
                            Id = 3,
                            Code = "BRL",
                            Description = "Brazilian Real - BRL (R$)",
                            DisplayName = "BRL (R$)",
                            Name = "Brazilian Real"
                        },
                        new
                        {
                            Id = 4,
                            Code = "INR",
                            Description = "Indian Rupee - INR (₹)",
                            DisplayName = "INR (₹)",
                            Name = "Indian Rupee"
                        },
                        new
                        {
                            Id = 5,
                            Code = "EUR",
                            Description = "Euro - EUR (€)",
                            DisplayName = "EUR (€)",
                            Name = "Euro"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.EtlJobAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("DestinationSystem")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("destination_system");

                    b.Property<string>("DestinationType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("destination_type");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_time");

                    b.Property<string>("ErrorMsg")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("error_msg");

                    b.Property<string>("ExecutionStatus")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("execution_status");

                    b.Property<string>("Framework")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("framework");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_completed");

                    b.Property<string>("JobDescription")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("job_description");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("job_id");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("job_name");

                    b.Property<JsonDocument>("JobPayload")
                        .HasColumnType("jsonb")
                        .HasColumnName("job_payload");

                    b.Property<Guid>("JobUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("job_uuid");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LoadType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("load_type");

                    b.Property<int>("ProcessCount")
                        .HasColumnType("integer")
                        .HasColumnName("process_count");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("RejectCount")
                        .HasColumnType("integer")
                        .HasColumnName("reject_count");

                    b.Property<string>("SourceSystem")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("source_system");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("source_type");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_time");

                    b.Property<int>("TargetCount")
                        .HasColumnType("integer")
                        .HasColumnName("target_count");

                    b.HasKey("Id")
                        .HasName("pk_etl_job_audit");

                    b.ToTable("etl_job_audit");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.GenericMarketBoundary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("MaxSegmentLengthMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_segment_length_mtrs");

                    b.Property<decimal>("MaxSegmentWeightTon")
                        .HasColumnType("numeric")
                        .HasColumnName("max_segment_weight_ton");

                    b.Property<decimal>("MaxTowerBaseDiameterMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_tower_base_diameter_mtrs");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TransportModeId")
                        .HasColumnType("integer")
                        .HasColumnName("transport_mode_id");

                    b.HasKey("Id")
                        .HasName("pk_generic_market_boundaries");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("ix_generic_market_boundaries_country_id");

                    b.HasIndex("TransportModeId")
                        .HasDatabaseName("ix_generic_market_boundaries_transport_mode_id");

                    b.ToTable("generic_market_boundaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 48,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 49,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.3m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 65,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 74,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.3m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 64,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.8m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 98,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 80m,
                            MaxTowerBaseDiameterMtrs = 4.68m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 99,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.68m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 104,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.68m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 22,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.8m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 27,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 90m,
                            MaxTowerBaseDiameterMtrs = 4.8m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 29,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 90m,
                            MaxTowerBaseDiameterMtrs = 4.7m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 25,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 90m,
                            MaxTowerBaseDiameterMtrs = 4.8m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 21,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 97,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 72.57m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 97,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 72.57m,
                            MaxTowerBaseDiameterMtrs = 4.115m,
                            TransportModeId = 2
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 1,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 18,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 70m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 56,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 47,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 85m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 102,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 80m,
                            MaxTowerBaseDiameterMtrs = 4.7m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 101,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 80m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 103,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 80m,
                            MaxTowerBaseDiameterMtrs = 4.68m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 96,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 72.57m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 96,
                            MaxSegmentLengthMtrs = 36m,
                            MaxSegmentWeightTon = 72.57m,
                            MaxTowerBaseDiameterMtrs = 4.115m,
                            TransportModeId = 2
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 4,
                            MaxSegmentLengthMtrs = 50m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.3m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 2,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 3,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.3m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 5,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.7m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 7,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.5m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 8,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.3m,
                            TransportModeId = 1
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 12,
                            MaxSegmentLengthMtrs = 30m,
                            MaxSegmentWeightTon = 95m,
                            MaxTowerBaseDiameterMtrs = 4.3m,
                            TransportModeId = 1
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.InitialTower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("HubHeightMaxM")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height_max_m");

                    b.Property<decimal>("HubHeightMinM")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height_min_m");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Model")
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Tower")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("tower");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_initial_towers");

                    b.HasIndex("WtgCatalogueId", "Tower")
                        .IsUnique()
                        .HasDatabaseName("ix_initial_towers_wtg_catalogue_id_tower");

                    b.ToTable("initial_towers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HubHeightMaxM = 92.75m,
                            HubHeightMinM = 84m,
                            Model = "MY19",
                            Tower = "T84.32L2",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 2,
                            HubHeightMaxM = 92.75m,
                            HubHeightMinM = 84m,
                            Model = "MY19",
                            Tower = "T84.32L5",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 3,
                            HubHeightMaxM = 107.75m,
                            HubHeightMinM = 92.75m,
                            Model = "MY19",
                            Tower = "T101.5.30L2",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 4,
                            HubHeightMaxM = 120m,
                            HubHeightMinM = 107.75m,
                            Model = "MY19",
                            Tower = "T114.30L2",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 5,
                            HubHeightMaxM = 90.5m,
                            HubHeightMinM = 84m,
                            Model = "MY20",
                            Tower = "T84.36",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 6,
                            HubHeightMaxM = 99.25m,
                            HubHeightMinM = 90.5m,
                            Model = "MY20",
                            Tower = "T97.31",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 7,
                            HubHeightMaxM = 104.75m,
                            HubHeightMinM = 99.25m,
                            Model = "MY20",
                            Tower = "T101.5.31",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 8,
                            HubHeightMaxM = 111m,
                            HubHeightMinM = 104.75m,
                            Model = "MY20",
                            Tower = "T108.30",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 9,
                            HubHeightMaxM = 120m,
                            HubHeightMinM = 111m,
                            Model = "MY20",
                            Tower = "T114.30",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 10,
                            HubHeightMaxM = 84.75m,
                            HubHeightMinM = 79.5m,
                            Model = "MKII",
                            Tower = "T79.5.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 11,
                            HubHeightMaxM = 96.25m,
                            HubHeightMinM = 84.75m,
                            Model = "MKII",
                            Tower = "T90.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 12,
                            HubHeightMaxM = 115m,
                            HubHeightMinM = 96.25m,
                            Model = "MKII",
                            Tower = "T102.5.42",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 13,
                            HubHeightMaxM = 115m,
                            HubHeightMinM = 96.25m,
                            Model = "MKII",
                            Tower = "T102.5.43",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 14,
                            HubHeightMaxM = 142.5m,
                            HubHeightMinM = 115m,
                            Model = "MKII",
                            Tower = "T127.5.40L2",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 15,
                            HubHeightMaxM = 165m,
                            HubHeightMinM = 142.5m,
                            Model = "MKII",
                            Tower = "T157.5.40L2",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 16,
                            HubHeightMaxM = 110m,
                            HubHeightMinM = 77m,
                            Model = "MKII",
                            Tower = "T84.41",
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 17,
                            HubHeightMaxM = 112.25m,
                            HubHeightMinM = 90m,
                            Model = "",
                            Tower = "T102.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 18,
                            HubHeightMaxM = 135m,
                            HubHeightMinM = 112.25m,
                            Model = "",
                            Tower = "T122.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 19,
                            HubHeightMaxM = 125m,
                            HubHeightMinM = 100m,
                            Model = "",
                            Tower = "T115-50A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 20,
                            HubHeightMaxM = 155m,
                            HubHeightMinM = 125m,
                            Model = "",
                            Tower = "T135-50A",
                            WtgCatalogueId = 1
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.InterfaceTools", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("ToolName")
                        .HasColumnType("text")
                        .HasColumnName("tool_name");

                    b.HasKey("Id")
                        .HasName("pk_interface_tools");

                    b.ToTable("interface_tools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Towersite Interface",
                            ToolName = "TowerCubo"
                        },
                        new
                        {
                            Id = 2,
                            Description = "SST Interface",
                            ToolName = "SST"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Towersite Interface",
                            ToolName = "TowerSite"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LoadsCluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("ClusterName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("cluster_name");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_loads_clusters");

                    b.ToTable("loads_clusters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClusterName = "A"
                        },
                        new
                        {
                            Id = 2,
                            ClusterName = "B"
                        },
                        new
                        {
                            Id = 3,
                            ClusterName = "C"
                        },
                        new
                        {
                            Id = 4,
                            ClusterName = "D"
                        },
                        new
                        {
                            Id = 5,
                            ClusterName = "E"
                        },
                        new
                        {
                            Id = 6,
                            ClusterName = "F"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LogisticConstraint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("LogisticStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("logistic_status_id");

                    b.Property<string>("PreliminaryLogisticsDocumentLink")
                        .HasColumnType("text")
                        .HasColumnName("preliminary_logistics_document_link");

                    b.Property<int>("ProjectConstraintId")
                        .HasColumnType("integer")
                        .HasColumnName("project_constraint_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("RoadSurveyDocumentLink")
                        .HasColumnType("text")
                        .HasColumnName("road_survey_document_link");

                    b.Property<int>("TransportModeId")
                        .HasColumnType("integer")
                        .HasColumnName("transport_mode_id");

                    b.Property<bool>("UsingProjectSpecificBoundary")
                        .HasColumnType("boolean")
                        .HasColumnName("using_project_specific_boundary");

                    b.HasKey("Id")
                        .HasName("pk_logistic_constraints");

                    b.HasIndex("LogisticStatusId")
                        .HasDatabaseName("ix_logistic_constraints_logistic_status_id");

                    b.HasIndex("ProjectConstraintId")
                        .IsUnique()
                        .HasDatabaseName("ix_logistic_constraints_project_constraint_id");

                    b.HasIndex("TransportModeId")
                        .HasDatabaseName("ix_logistic_constraints_transport_mode_id");

                    b.ToTable("logistic_constraints");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LogisticProjectBoundary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("LogisticConstraintId")
                        .HasColumnType("integer")
                        .HasColumnName("logistic_constraint_id");

                    b.Property<decimal>("MaxSegmentLengthMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_segment_length_mtrs");

                    b.Property<decimal>("MaxSegmentWeightTon")
                        .HasColumnType("numeric")
                        .HasColumnName("max_segment_weight_ton");

                    b.Property<decimal>("MaxTowerBaseDiameterMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_tower_base_diameter_mtrs");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TransportModeId")
                        .HasColumnType("integer")
                        .HasColumnName("transport_mode_id");

                    b.HasKey("Id")
                        .HasName("pk_logistic_project_boundaries");

                    b.HasIndex("TransportModeId")
                        .HasDatabaseName("ix_logistic_project_boundaries_transport_mode_id");

                    b.HasIndex("LogisticConstraintId", "TransportModeId")
                        .IsUnique()
                        .HasDatabaseName("ix_logistic_project_boundaries_logistic_constraint_id_transpor");

                    b.ToTable("logistic_project_boundaries");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LogisticStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_logistic_statuses");

                    b.ToTable("logistic_statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "not available (use generic market boundaries)"
                        },
                        new
                        {
                            Id = 2,
                            Status = "order received for Preliminary Logistics Assessment"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Preliminary Logistics Assessment available (for project-specific boundaries)"
                        },
                        new
                        {
                            Id = 4,
                            Status = "order received for Road Survey"
                        },
                        new
                        {
                            Id = 5,
                            Status = "Road Survey available"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.MileStone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("MileStoneName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("mile_stone_name");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_mile_stones");

                    b.ToTable("mile_stones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MileStoneName = "PM020 - Bid decision"
                        },
                        new
                        {
                            Id = 2,
                            MileStoneName = "PM040 - Binding offer"
                        },
                        new
                        {
                            Id = 3,
                            MileStoneName = "PM070 - Contract signature"
                        },
                        new
                        {
                            Id = 4,
                            MileStoneName = "PM080 - Notice to proceed"
                        },
                        new
                        {
                            Id = 5,
                            MileStoneName = "Certification Target Date"
                        },
                        new
                        {
                            Id = 6,
                            MileStoneName = "PM650 - Take-over to customer"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.NacelleDistance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("DistanceBottomToCenterHub")
                        .HasColumnType("numeric")
                        .HasColumnName("distance_bottom_to_center_hub");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_nacelle_distances");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_nacelle_distances_wtg_catalogue_id");

                    b.ToTable("nacelle_distances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistanceBottomToCenterHub = 2295.909m,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 2,
                            DistanceBottomToCenterHub = 2265.941m,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 3,
                            DistanceBottomToCenterHub = 2086.56m,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 4,
                            DistanceBottomToCenterHub = 2086.56m,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 5,
                            DistanceBottomToCenterHub = 2010.98m,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 6,
                            DistanceBottomToCenterHub = 2002.61m,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 7,
                            DistanceBottomToCenterHub = 2086.56m,
                            WtgCatalogueId = 7
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.NoiseMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("NoiseLevelDecibels")
                        .HasColumnType("numeric")
                        .HasColumnName("noise_level_decibels");

                    b.Property<decimal>("NoiseModeDescription")
                        .HasColumnType("numeric")
                        .HasColumnName("noise_mode_description");

                    b.Property<string>("NoiseModeNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("noise_mode_no");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("TowerTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_type_id");

                    b.HasKey("Id")
                        .HasName("pk_noise_modes");

                    b.HasIndex("TowerTypeId")
                        .HasDatabaseName("ix_noise_modes_tower_type_id");

                    b.ToTable("noise_modes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "﻿0",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 2,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 3,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 4,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 5,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 6,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 7,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 8,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 9,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 10,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 11,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 12,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 13,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 14,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 15,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 16,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 17,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 18,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 19,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 20,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 21,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 22,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 23,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 24,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 25,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 26,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 27,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 1
                        },
                        new
                        {
                            Id = 28,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 29,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 30,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 31,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 32,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 33,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 34,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 35,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 36,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 17
                        },
                        new
                        {
                            Id = 37,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 38,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 39,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 40,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 41,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 42,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 43,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 44,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 45,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 18
                        },
                        new
                        {
                            Id = 46,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 47,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 48,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 49,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 50,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 51,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 52,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 53,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 54,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 55,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 56,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 57,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 58,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 59,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 60,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 61,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 62,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 63,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 19
                        },
                        new
                        {
                            Id = 64,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 65,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 66,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 67,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 68,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 69,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 70,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 71,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 72,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 73,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 74,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 75,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 76,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 77,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 78,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 79,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 80,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 81,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 82,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 83,
                            NoiseLevelDecibels = 105.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 84,
                            NoiseLevelDecibels = 104.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 85,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 86,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 87,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 88,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 89,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 90,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 22
                        },
                        new
                        {
                            Id = 91,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 92,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 93,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 94,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 95,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 96,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 97,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 98,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 99,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 100,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 101,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 102,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 103,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 104,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 105,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 106,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 107,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 108,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 109,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 110,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 111,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 112,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 113,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 114,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 115,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 116,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 117,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 118,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 119,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 120,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 121,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 122,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 123,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 124,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 125,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 126,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 127,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 128,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 129,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 130,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 131,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 132,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 133,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 134,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 135,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 136,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 137,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 138,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 139,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 140,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 141,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 142,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 143,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 144,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 145,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 146,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 147,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 148,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 149,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 150,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 151,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 152,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 153,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 154,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 155,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 156,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 157,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 158,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 159,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 160,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 161,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 162,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 29
                        },
                        new
                        {
                            Id = 163,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 164,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 165,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 166,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 167,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 168,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 169,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 170,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 171,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 172,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 173,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 174,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 175,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 176,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 177,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 178,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 179,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 180,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 31
                        },
                        new
                        {
                            Id = 181,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 182,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 183,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 184,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 185,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 186,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 187,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 188,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 189,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 32
                        },
                        new
                        {
                            Id = 190,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 191,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 192,
                            NoiseLevelDecibels = 103.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 193,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 194,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 195,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 196,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 197,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 198,
                            NoiseLevelDecibels = 97m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 199,
                            NoiseLevelDecibels = 111.6m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 200,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 201,
                            NoiseLevelDecibels = 102.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 202,
                            NoiseLevelDecibels = 101.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 203,
                            NoiseLevelDecibels = 100.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 204,
                            NoiseLevelDecibels = 109.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 205,
                            NoiseLevelDecibels = 101.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 206,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 207,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 208,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 209,
                            NoiseLevelDecibels = 111.6m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 210,
                            NoiseLevelDecibels = 108m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 211,
                            NoiseLevelDecibels = 107.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 212,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 213,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 214,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 215,
                            NoiseLevelDecibels = 102.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 216,
                            NoiseLevelDecibels = 101.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 217,
                            NoiseLevelDecibels = 100.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 218,
                            NoiseLevelDecibels = 109.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 219,
                            NoiseLevelDecibels = 105.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 220,
                            NoiseLevelDecibels = 105.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 221,
                            NoiseLevelDecibels = 103.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 222,
                            NoiseLevelDecibels = 102.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 223,
                            NoiseLevelDecibels = 101.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 224,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 225,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 226,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 33
                        },
                        new
                        {
                            Id = 227,
                            NoiseLevelDecibels = 111.6m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 228,
                            NoiseLevelDecibels = 108m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 229,
                            NoiseLevelDecibels = 107.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 230,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 231,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 232,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 233,
                            NoiseLevelDecibels = 102.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 234,
                            NoiseLevelDecibels = 101.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 235,
                            NoiseLevelDecibels = 100.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 236,
                            NoiseLevelDecibels = 109.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 237,
                            NoiseLevelDecibels = 105.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 238,
                            NoiseLevelDecibels = 105.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 239,
                            NoiseLevelDecibels = 103.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 240,
                            NoiseLevelDecibels = 102.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 241,
                            NoiseLevelDecibels = 101.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 242,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 243,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 244,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 245,
                            NoiseLevelDecibels = 111.6m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 246,
                            NoiseLevelDecibels = 108m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 247,
                            NoiseLevelDecibels = 107.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 248,
                            NoiseLevelDecibels = 106m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 249,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 250,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 251,
                            NoiseLevelDecibels = 102.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 252,
                            NoiseLevelDecibels = 101.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 253,
                            NoiseLevelDecibels = 100.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 254,
                            NoiseLevelDecibels = 109.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 255,
                            NoiseLevelDecibels = 105.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 256,
                            NoiseLevelDecibels = 105.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 257,
                            NoiseLevelDecibels = 103.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 258,
                            NoiseLevelDecibels = 102.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 259,
                            NoiseLevelDecibels = 101.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 260,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 261,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 262,
                            NoiseLevelDecibels = 98m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 263,
                            NoiseLevelDecibels = 108.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 264,
                            NoiseLevelDecibels = 105.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 265,
                            NoiseLevelDecibels = 105.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 266,
                            NoiseLevelDecibels = 103.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 267,
                            NoiseLevelDecibels = 102.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 268,
                            NoiseLevelDecibels = 101.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 269,
                            NoiseLevelDecibels = 100m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 270,
                            NoiseLevelDecibels = 99m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 271,
                            NoiseLevelDecibels = 98.1m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 272,
                            NoiseLevelDecibels = 106.2m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 273,
                            NoiseLevelDecibels = 103.4m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 274,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 275,
                            NoiseLevelDecibels = 101.4m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 276,
                            NoiseLevelDecibels = 100.4m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 277,
                            NoiseLevelDecibels = 99.4m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 278,
                            NoiseLevelDecibels = 99.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "6",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 279,
                            NoiseLevelDecibels = 96.7m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "7",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 280,
                            NoiseLevelDecibels = 95.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "8",
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 281,
                            NoiseLevelDecibels = 108.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 282,
                            NoiseLevelDecibels = 106.5m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 283,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 284,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 285,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 286,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 287,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 288,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 289,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 290,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 291,
                            NoiseLevelDecibels = 101.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 292,
                            NoiseLevelDecibels = 100.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 293,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 294,
                            NoiseLevelDecibels = 98.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 295,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 296,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 297,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 298,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 299,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 300,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 301,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 302,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 303,
                            NoiseLevelDecibels = 101.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 304,
                            NoiseLevelDecibels = 100.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 305,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 306,
                            NoiseLevelDecibels = 98.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 307,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 308,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 309,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 310,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 311,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 312,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 313,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 314,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 315,
                            NoiseLevelDecibels = 101.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 316,
                            NoiseLevelDecibels = 100.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 317,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 318,
                            NoiseLevelDecibels = 98.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 319,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 320,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 321,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 322,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 323,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 324,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 325,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 326,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 327,
                            NoiseLevelDecibels = 101.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 328,
                            NoiseLevelDecibels = 100.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 329,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 330,
                            NoiseLevelDecibels = 98.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 331,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 332,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 333,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 334,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 335,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 336,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 337,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 338,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 339,
                            NoiseLevelDecibels = 101.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 340,
                            NoiseLevelDecibels = 100.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 341,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 342,
                            NoiseLevelDecibels = 98.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 343,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 344,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 345,
                            NoiseLevelDecibels = 106.3m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 346,
                            NoiseLevelDecibels = 105m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 347,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 348,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 349,
                            NoiseLevelDecibels = 102m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 350,
                            NoiseLevelDecibels = 101m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 351,
                            NoiseLevelDecibels = 104m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "0",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 352,
                            NoiseLevelDecibels = 103m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "1",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 353,
                            NoiseLevelDecibels = 101.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "2",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 354,
                            NoiseLevelDecibels = 100.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "3",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 355,
                            NoiseLevelDecibels = 99.9m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "4",
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 356,
                            NoiseLevelDecibels = 98.8m,
                            NoiseModeDescription = 0m,
                            NoiseModeNo = "5",
                            TowerTypeId = 65
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("PermissionType")
                        .HasColumnType("integer")
                        .HasColumnName("permission_type");

                    b.Property<int>("ProjectModuleId")
                        .HasColumnType("integer")
                        .HasColumnName("project_module_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_permissions");

                    b.HasIndex("ProjectModuleId")
                        .HasDatabaseName("ix_permissions_project_module_id");

                    b.HasIndex("RoleId", "ProjectModuleId")
                        .HasDatabaseName("ix_permissions_role_id_project_module_id");

                    b.ToTable("permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 1,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 1,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 1,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 2,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 2,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 28,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 29,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 30,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 31,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 32,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 2,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 33,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 3,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 34,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 3,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 35,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 36,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 37,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 38,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 39,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 40,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 41,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 42,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 43,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 44,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 45,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 46,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 47,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 48,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 3,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 49,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 4,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 50,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 4,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 51,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 52,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 53,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 54,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 55,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 56,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 57,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 58,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 59,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 60,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 61,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 62,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 63,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 64,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 3,
                            ProjectModuleId = 4,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 65,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 5,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 66,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 5,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 67,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 68,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 69,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 70,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 71,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 72,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 73,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 74,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 75,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 76,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 77,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 78,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 79,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 80,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 5,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 81,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 6,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 82,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 6,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 83,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 84,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 85,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 86,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 87,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 88,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 6,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 89,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 90,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 91,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 92,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 93,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 94,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 95,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 96,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 6,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 97,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 7,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 98,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 7,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 99,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 100,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 101,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 102,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 103,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 104,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 105,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 106,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 7,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 107,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 108,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 109,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 110,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 111,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 112,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 7,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 113,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 8,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 114,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 8,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 115,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 116,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 117,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 118,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 119,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 120,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 121,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 122,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 123,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 124,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 125,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 126,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 127,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 128,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 8,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 129,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 9,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 130,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 9,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 131,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 132,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 133,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 134,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 135,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 136,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 137,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 138,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 139,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 140,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 141,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 142,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 143,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 144,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 9,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 145,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 10,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 146,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 10,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 147,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 148,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 149,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 150,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 151,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 152,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 153,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 154,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 155,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 156,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 157,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 158,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 159,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 160,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 10,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 161,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 11,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 162,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 11,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 163,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 164,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 165,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 166,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 167,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 168,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 169,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 170,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 171,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 172,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 173,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 174,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 175,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 176,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 11,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 177,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 12,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 178,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 12,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 179,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 180,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 12,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 181,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 182,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 183,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 184,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 185,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 186,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 187,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 188,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 189,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 190,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 191,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 192,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 12,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 193,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 13,
                            RoleId = 1,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 194,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 13,
                            RoleId = 2,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 195,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 3,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 196,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 2,
                            ProjectModuleId = 13,
                            RoleId = 4,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 197,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 5,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 198,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 6,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 199,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 7,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 200,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 8,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 201,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 9,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 202,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 10,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 203,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 11,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 204,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 12,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 205,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 13,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 206,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 14,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 207,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 15,
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 208,
                            CreatedBy = "admin@siemensgamesa.com",
                            PermissionType = 1,
                            ProjectModuleId = 13,
                            RoleId = 16,
                            UpdatedBy = "admin@siemensgamesa.com"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.PermitsSalesConstraint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("BuildingPermits")
                        .HasColumnType("integer")
                        .HasColumnName("building_permits");

                    b.Property<bool>("ElevationFoundationStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("elevation_foundation_status");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal?>("MaxElevationFoundationMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_elevation_foundation_mtrs");

                    b.Property<decimal>("MaxGroundClearanceMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_ground_clearance_mtrs");

                    b.Property<int>("MaxGroundClearanceStatus")
                        .HasColumnType("integer")
                        .HasColumnName("max_ground_clearance_status");

                    b.Property<decimal>("MaxHubHeightMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_hub_height_mtrs");

                    b.Property<int>("MaxHubHeightStatus")
                        .HasColumnType("integer")
                        .HasColumnName("max_hub_height_status");

                    b.Property<decimal>("MaxTipHeightMtrs")
                        .HasColumnType("numeric")
                        .HasColumnName("max_tip_height_mtrs");

                    b.Property<int>("MaxTipHeightStatus")
                        .HasColumnType("integer")
                        .HasColumnName("max_tip_height_status");

                    b.Property<int>("ProjectConstraintId")
                        .HasColumnType("integer")
                        .HasColumnName("project_constraint_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_permits_sales_constraints");

                    b.HasIndex("ProjectConstraintId")
                        .IsUnique()
                        .HasDatabaseName("ix_permits_sales_constraints_project_constraint_id");

                    b.ToTable("permits_sales_constraints");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.PresetRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("region_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_preset_roles");

                    b.HasIndex("RegionId")
                        .HasDatabaseName("ix_preset_roles_region_id");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_preset_roles_role_id");

                    b.ToTable("preset_roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RegionId = 5,
                            RoleId = 3,
                            UserName = "georg.bischof@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 2,
                            RegionId = 1,
                            RoleId = 3,
                            UserName = "carlos.sastre@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 3,
                            RegionId = 4,
                            RoleId = 3,
                            UserName = "brenda.rodriguez@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 4,
                            RegionId = 7,
                            RoleId = 3,
                            UserName = "jason.saizar@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 5,
                            RegionId = 6,
                            RoleId = 3,
                            UserName = "luisa.vidal@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 6,
                            RegionId = 2,
                            RoleId = 3,
                            UserName = "renan.venturini@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 7,
                            RegionId = 3,
                            RoleId = 3,
                            UserName = "teddy.chandrakumar@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 8,
                            RegionId = 5,
                            RoleId = 4,
                            UserName = "henning.mentz@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 9,
                            RegionId = 1,
                            RoleId = 4,
                            UserName = "shi.xiujuan@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 10,
                            RegionId = 4,
                            RoleId = 4,
                            UserName = "rene.hernandez@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 11,
                            RegionId = 7,
                            RoleId = 4,
                            UserName = "maged.mostafa@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 12,
                            RegionId = 6,
                            RoleId = 4,
                            UserName = "roberto.lozano@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 13,
                            RegionId = 2,
                            RoleId = 4,
                            UserName = "lucas.oyamada@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 14,
                            RegionId = 3,
                            RoleId = 4,
                            UserName = "teddy.chandrakumar@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 15,
                            RegionId = 5,
                            RoleId = 6,
                            UserName = "ingelise.nielsen@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 16,
                            RegionId = 1,
                            RoleId = 6,
                            UserName = "fernando.vital@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 17,
                            RegionId = 4,
                            RoleId = 6,
                            UserName = "mikel.cenoz@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 18,
                            RegionId = 7,
                            RoleId = 6,
                            UserName = "cristina.valencia.r@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 19,
                            RegionId = 6,
                            RoleId = 6,
                            UserName = "eddie.rijo@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 20,
                            RegionId = 2,
                            RoleId = 6,
                            UserName = "mikel.cenoz@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 21,
                            RegionId = 3,
                            RoleId = 6,
                            UserName = "fernando.vital@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 22,
                            RegionId = 5,
                            RoleId = 7,
                            UserName = "julieelaine.lherbier@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 23,
                            RegionId = 1,
                            RoleId = 7,
                            UserName = "shuofei.cai@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 24,
                            RegionId = 4,
                            RoleId = 7,
                            UserName = "carlos.mendez@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 25,
                            RegionId = 7,
                            RoleId = 7,
                            UserName = "carlos.sanabria@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 26,
                            RegionId = 6,
                            RoleId = 7,
                            UserName = "elizabet.zaharieva@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 27,
                            RegionId = 2,
                            RoleId = 7,
                            UserName = "domenico.barger@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 28,
                            RegionId = 5,
                            RoleId = 14,
                            UserName = "lars.nissen@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 29,
                            RegionId = 1,
                            RoleId = 14,
                            UserName = "tongbo.zhang@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 30,
                            RegionId = 4,
                            RoleId = 14,
                            UserName = "ana.hoyo@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 31,
                            RegionId = 7,
                            RoleId = 14,
                            UserName = "maria.iturralde@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 32,
                            RegionId = 6,
                            RoleId = 14,
                            UserName = "justo.tirado@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 33,
                            RegionId = 2,
                            RoleId = 14,
                            UserName = "justo.tirado@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 34,
                            RegionId = 3,
                            RoleId = 14,
                            UserName = "shanmuga.palanisamy@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 35,
                            RegionId = 5,
                            RoleId = 8,
                            UserName = "tanja.stahmer@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 36,
                            RegionId = 1,
                            RoleId = 8,
                            UserName = "liqiang.xu@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 37,
                            RegionId = 4,
                            RoleId = 8,
                            UserName = "juliana.diniz@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 38,
                            RegionId = 7,
                            RoleId = 8,
                            UserName = "carlos.vildosola@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 39,
                            RegionId = 6,
                            RoleId = 8,
                            UserName = "charles.keyser@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 40,
                            RegionId = 2,
                            RoleId = 8,
                            UserName = "rodrigo.xambre@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 41,
                            RegionId = 3,
                            RoleId = 8,
                            UserName = "velmurugan.sundaram@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 42,
                            RegionId = 5,
                            RoleId = 9,
                            UserName = "oliver.kohn@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 43,
                            RegionId = 4,
                            RoleId = 9,
                            UserName = "urko.sarasola@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 44,
                            RegionId = 7,
                            RoleId = 9,
                            UserName = "miguel.diaz@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 45,
                            RegionId = 6,
                            RoleId = 9,
                            UserName = "charles.keyser@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 46,
                            RegionId = 2,
                            RoleId = 9,
                            UserName = "rodrigo.xambre@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 47,
                            RegionId = 3,
                            RoleId = 9,
                            UserName = "karthik.arumugam@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 48,
                            RegionId = 5,
                            RoleId = 10,
                            UserName = "oliver.kohn@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 49,
                            RegionId = 1,
                            RoleId = 10,
                            UserName = "waqar.hussain@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 50,
                            RegionId = 4,
                            RoleId = 10,
                            UserName = "enrique.carballo@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 51,
                            RegionId = 7,
                            RoleId = 10,
                            UserName = "ines.zalacain@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 52,
                            RegionId = 6,
                            RoleId = 10,
                            UserName = "paul.smith@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 53,
                            RegionId = 2,
                            RoleId = 10,
                            UserName = "sandro.patella@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 54,
                            RegionId = 3,
                            RoleId = 10,
                            UserName = "manikandan.gurumoorthy@siemensgamesa.com"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("ActiveRecordIndicator")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("active_record_indicator");

                    b.Property<string>("ContractStatus")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("contract_status");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("created_by");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer")
                        .HasColumnName("currency_id");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("customer_name");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("OpportunityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("opportunity_id");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("project_name");

                    b.Property<DateTimeOffset?>("RecordEndDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_end_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("SSTRequestSimilarProjects")
                        .HasColumnType("text")
                        .HasColumnName("sst_request_similar_projects");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_projects");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("ix_projects_country_id");

                    b.HasIndex("CurrencyId")
                        .HasDatabaseName("ix_projects_currency_id");

                    b.HasIndex("OpportunityId")
                        .IsUnique()
                        .HasDatabaseName("ix_projects_opportunity_id");

                    b.HasIndex("ProjectName")
                        .IsUnique()
                        .HasDatabaseName("ix_projects_project_name");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectConstraint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_project_constraints");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasDatabaseName("ix_project_constraints_project_id");

                    b.HasIndex("Id", "ProjectId")
                        .IsUnique()
                        .HasDatabaseName("ix_project_constraints_id_project_id");

                    b.ToTable("project_constraints");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectMileStones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("MileStoneDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("mile_stone_date");

                    b.Property<int>("MileStoneId")
                        .HasColumnType("integer")
                        .HasColumnName("mile_stone_id");

                    b.Property<string>("MileStoneOfferStatus")
                        .HasColumnType("text")
                        .HasColumnName("mile_stone_offer_status");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.HasKey("Id")
                        .HasName("pk_project_mile_stones");

                    b.HasIndex("MileStoneId")
                        .HasDatabaseName("ix_project_mile_stones_mile_stone_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_project_mile_stones_project_id");

                    b.ToTable("project_mile_stones");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("module_name");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_project_modules");

                    b.ToTable("project_modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModuleName = "Create new opportunity"
                        },
                        new
                        {
                            Id = 2,
                            ModuleName = "Opporutinty information"
                        },
                        new
                        {
                            Id = 3,
                            ModuleName = "Opportunity key milestones"
                        },
                        new
                        {
                            Id = 4,
                            ModuleName = "Roles & Responsiblities"
                        },
                        new
                        {
                            Id = 5,
                            ModuleName = "Project Constraints"
                        },
                        new
                        {
                            Id = 6,
                            ModuleName = "Logistics constraints"
                        },
                        new
                        {
                            Id = 7,
                            ModuleName = "Construction constraints"
                        },
                        new
                        {
                            Id = 8,
                            ModuleName = "Scope & Responsibility"
                        },
                        new
                        {
                            Id = 9,
                            ModuleName = "Certification"
                        },
                        new
                        {
                            Id = 10,
                            ModuleName = "Quote"
                        },
                        new
                        {
                            Id = 11,
                            ModuleName = "Add turbine type"
                        },
                        new
                        {
                            Id = 12,
                            ModuleName = "Add baseline scenario"
                        },
                        new
                        {
                            Id = 13,
                            ModuleName = "Add SST scenario"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("userId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_project_roles");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_project_roles_project_id");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_project_roles_role_id");

                    b.ToTable("project_roles");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("ActiveRecordIndicator")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("active_record_indicator");

                    b.Property<DateTime?>("CertificationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("certification_date");

                    b.Property<int>("CertificationId")
                        .HasColumnType("integer")
                        .HasColumnName("certification_id");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("is_main");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<string>("ProposalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("proposal_id");

                    b.Property<DateTime?>("RecordEndDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("record_end_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_proposals");

                    b.HasIndex("CertificationId")
                        .HasDatabaseName("ix_proposals_certification_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_proposals_project_id");

                    b.HasIndex("ProposalId")
                        .IsUnique()
                        .HasDatabaseName("ix_proposals_proposal_id");

                    b.ToTable("proposals");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProposalTasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("boolean")
                        .HasColumnName("is_customer");

                    b.Property<int>("ProposalId")
                        .HasColumnType("integer")
                        .HasColumnName("proposal_id");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer")
                        .HasColumnName("task_id");

                    b.HasKey("Id")
                        .HasName("pk_proposal_tasks");

                    b.HasIndex("ProposalId")
                        .HasDatabaseName("ix_proposal_tasks_proposal_id");

                    b.HasIndex("TaskId")
                        .HasDatabaseName("ix_proposal_tasks_task_id");

                    b.ToTable("proposal_tasks");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("OfferSubmissionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("offer_submission_date");

                    b.Property<string>("OfferType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("offer_type");

                    b.Property<int>("ProposalId")
                        .HasColumnType("integer")
                        .HasColumnName("proposal_id");

                    b.Property<string>("QuotationId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("quotation_id");

                    b.Property<string>("QuotationName")
                        .HasColumnType("text")
                        .HasColumnName("quotation_name");

                    b.Property<bool>("QuotationType")
                        .HasColumnType("boolean")
                        .HasColumnName("quotation_type");

                    b.Property<string>("QuoteStatus")
                        .HasColumnType("text")
                        .HasColumnName("quote_status");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("SarCode")
                        .HasColumnType("text")
                        .HasColumnName("sar_code");

                    b.HasKey("Id")
                        .HasName("pk_quotes");

                    b.HasIndex("ProposalId", "QuotationId")
                        .IsUnique()
                        .HasDatabaseName("ix_quotes_proposal_id_quotation_id");

                    b.ToTable("quotes");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.QuoteLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<bool>("QuantityTrigger")
                        .HasColumnType("boolean")
                        .HasColumnName("quantity_trigger");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("WindfarmSize")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("windfarm_size");

                    b.Property<bool>("WindfarmSizeTrigger")
                        .HasColumnType("boolean")
                        .HasColumnName("windfarm_size_trigger");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_quote_lines");

                    b.HasIndex("QuoteId")
                        .HasDatabaseName("ix_quote_lines_quote_id");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_quote_lines_wtg_catalogue_id");

                    b.ToTable("quote_lines");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("region_name");

                    b.HasKey("Id")
                        .HasName("pk_regions");

                    b.ToTable("regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RegionName = "APAC"
                        },
                        new
                        {
                            Id = 2,
                            RegionName = "BRAZIL"
                        },
                        new
                        {
                            Id = 3,
                            RegionName = "INDIA"
                        },
                        new
                        {
                            Id = 4,
                            RegionName = "LATAM"
                        },
                        new
                        {
                            Id = 5,
                            RegionName = "NE&ME"
                        },
                        new
                        {
                            Id = 6,
                            RegionName = "NORTH AMERICA"
                        },
                        new
                        {
                            Id = 7,
                            RegionName = "SE&A"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.RnaCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric")
                        .HasColumnName("cost");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer")
                        .HasColumnName("currency_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_rna_costs");

                    b.HasIndex("CurrencyId")
                        .HasDatabaseName("ix_rna_costs_currency_id");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_rna_costs_wtg_catalogue_id");

                    b.ToTable("rna_costs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 2120m,
                            CurrencyId = 5,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cost = 2019m,
                            CurrencyId = 5,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 3,
                            Cost = 1363m,
                            CurrencyId = 5,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 4,
                            Cost = 1419m,
                            CurrencyId = 5,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 5,
                            Cost = 1531m,
                            CurrencyId = 5,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 6,
                            Cost = 1206m,
                            CurrencyId = 5,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 7,
                            Cost = 1150m,
                            CurrencyId = 5,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 8,
                            Cost = 2570m,
                            CurrencyId = 2,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 9,
                            Cost = 2445m,
                            CurrencyId = 2,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 10,
                            Cost = 1650m,
                            CurrencyId = 2,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 11,
                            Cost = 1718m,
                            CurrencyId = 2,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 12,
                            Cost = 1854m,
                            CurrencyId = 2,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 13,
                            Cost = 1460m,
                            CurrencyId = 2,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 14,
                            Cost = 1392m,
                            CurrencyId = 2,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 15,
                            Cost = 16487m,
                            CurrencyId = 1,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 16,
                            Cost = 15701m,
                            CurrencyId = 1,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 17,
                            Cost = 10600m,
                            CurrencyId = 1,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 18,
                            Cost = 11035m,
                            CurrencyId = 1,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 19,
                            Cost = 11906m,
                            CurrencyId = 1,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 20,
                            Cost = 9379m,
                            CurrencyId = 1,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 21,
                            Cost = 8943m,
                            CurrencyId = 1,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 22,
                            Cost = 13909m,
                            CurrencyId = 3,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 23,
                            Cost = 13246m,
                            CurrencyId = 3,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 24,
                            Cost = 8942m,
                            CurrencyId = 3,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 25,
                            Cost = 9310m,
                            CurrencyId = 3,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 26,
                            Cost = 10044m,
                            CurrencyId = 3,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 27,
                            Cost = 7912m,
                            CurrencyId = 3,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 28,
                            Cost = 7545m,
                            CurrencyId = 3,
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 29,
                            Cost = 183501m,
                            CurrencyId = 4,
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 30,
                            Cost = 174759m,
                            CurrencyId = 4,
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 31,
                            Cost = 117978m,
                            CurrencyId = 4,
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 32,
                            Cost = 122825m,
                            CurrencyId = 4,
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 33,
                            Cost = 132519m,
                            CurrencyId = 4,
                            WtgCatalogueId = 7
                        },
                        new
                        {
                            Id = 34,
                            Cost = 104388m,
                            CurrencyId = 4,
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 35,
                            Cost = 99541m,
                            CurrencyId = 4,
                            WtgCatalogueId = 6
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("ActiveRecordIndicator")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("active_record_indicator");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("role_description");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("role_name");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Sales Manager",
                            RoleName = "Opportunity Owner",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Proposal Manager",
                            RoleName = "Proposal Manager",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Siting Engineer",
                            RoleName = "Siting Engineer",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Technical Project Manager",
                            RoleName = "Technical Project Manager",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Global Project Engineering",
                            RoleName = "Global Project Engineering",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Planning Towers",
                            RoleName = "Planning Towers",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Procurement Manager",
                            RoleName = "Procurement Manager",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Logistic Pre Sales Road Engineer",
                            RoleName = "Logistic Pre Sales Road Engineer",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "PR Pre-Sales Logistic",
                            RoleName = "PR Pre-Sales Logistic",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "PR Pre-Sales Construction",
                            RoleName = "PR Pre-Sales Construction",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Construction Technical Office",
                            RoleName = "Construction Technical Office",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Tower Development",
                            RoleName = "Tower Development Structure",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "",
                            RoleName = "Tower Development Internals / Drawings/BOM",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "",
                            RoleName = "Customs Tower",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "Certification Engineering",
                            RoleName = "Certification Tower Component Certificate",
                            UpdatedBy = "admin@siemensgamesa.com"
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "admin@siemensgamesa.com",
                            RoleDescription = "",
                            RoleName = "Certification  SSA",
                            UpdatedBy = "admin@siemensgamesa.com"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SSTAepLookupGross", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<Guid>("AepLookupUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("aep_lookup_uuid");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<IEnumerable<AepInputJson>>("aepInputFile")
                        .HasColumnType("jsonb")
                        .HasColumnName("aep_input_file");

                    b.Property<decimal>("aepNominationGross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_nomination_gross");

                    b.Property<string>("estimationType")
                        .HasColumnType("text")
                        .HasColumnName("estimation_type");

                    b.Property<bool>("isProposedHubHeightFound")
                        .HasColumnType("boolean")
                        .HasColumnName("is_proposed_hub_height_found");

                    b.HasKey("Id")
                        .HasName("pk_sst_aep_lookup_gross");

                    b.ToTable("sst_aep_lookup_gross");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SarStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("LastUpdateDTM")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_update_dtm");

                    b.Property<DateTime>("RecordInsertDTM")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("record_insert_dtm");

                    b.HasKey("Id")
                        .HasName("pk_sar_studies");

                    b.ToTable("sar_studies");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("Options")
                        .HasColumnType("integer")
                        .HasColumnName("options");

                    b.Property<int>("Progress")
                        .HasColumnType("integer")
                        .HasColumnName("progress");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("ScenarioNo")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_no");

                    b.Property<int>("ScenarioType")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_type");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<bool>("StepProgress")
                        .HasColumnType("boolean")
                        .HasColumnName("step_progress");

                    b.Property<string>("WindfarmConfigurationId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("windfarm_configuration_id");

                    b.HasKey("Id")
                        .HasName("pk_scenarios");

                    b.HasIndex("QuoteId")
                        .HasDatabaseName("ix_scenarios_quote_id");

                    b.HasIndex("ScenarioType", "ItemId")
                        .HasDatabaseName("ix_scenarios_scenario_type_item_id");

                    b.ToTable("scenarios");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ScenarioCostsKpi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("AepP50BindingOfferNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_p50binding_offer_net");

                    b.Property<decimal>("AepP50Gross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_p50gross");

                    b.Property<decimal>("AepP50Net")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_p50net");

                    b.Property<decimal>("AepP50NominationGross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_p50nomination_gross");

                    b.Property<decimal>("AepP50SignatureNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_p50signature_net");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Risks")
                        .HasColumnType("text")
                        .HasColumnName("risks");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_id");

                    b.Property<decimal>("TotalCostNomination")
                        .HasColumnType("numeric")
                        .HasColumnName("total_cost_nomination");

                    b.Property<decimal>("TotalCostOffer")
                        .HasColumnType("numeric")
                        .HasColumnName("total_cost_offer");

                    b.Property<decimal>("TotalCostSignature")
                        .HasColumnType("numeric")
                        .HasColumnName("total_cost_signature");

                    b.Property<decimal>("TotalTowerExwCostNomination")
                        .HasColumnType("numeric")
                        .HasColumnName("total_tower_exw_cost_nomination");

                    b.Property<decimal>("TotalTowerExwCostOffer")
                        .HasColumnType("numeric")
                        .HasColumnName("total_tower_exw_cost_offer");

                    b.Property<decimal>("TotalTowerExwCostSignature")
                        .HasColumnType("numeric")
                        .HasColumnName("total_tower_exw_cost_signature");

                    b.HasKey("Id")
                        .HasName("pk_scenario_costs_kpis");

                    b.HasIndex("ScenarioId")
                        .HasDatabaseName("ix_scenario_costs_kpis_scenario_id");

                    b.ToTable("scenario_costs_kpis");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ScenarioDesign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("DesignEvaluation")
                        .HasColumnType("boolean")
                        .HasColumnName("design_evaluation");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Risks")
                        .HasColumnType("text")
                        .HasColumnName("risks");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_id");

                    b.HasKey("Id")
                        .HasName("pk_scenario_designs");

                    b.HasIndex("ScenarioId")
                        .HasDatabaseName("ix_scenario_designs_scenario_id");

                    b.ToTable("scenario_designs");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ScenarioOverView", b =>
                {
                    b.Property<decimal>("AepNominationGross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_nomination_gross");

                    b.Property<decimal>("AepOfferNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_offer_net");

                    b.Property<decimal>("AepSignatureNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_signature_net");

                    b.Property<string>("DesignEvaluationRisk")
                        .HasColumnType("text")
                        .HasColumnName("design_evaluation_risk");

                    b.Property<decimal>("HubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<decimal>("LifeTime")
                        .HasColumnType("numeric")
                        .HasColumnName("life_time");

                    b.Property<int>("LoadsClusterId")
                        .HasColumnType("integer")
                        .HasColumnName("loads_cluster_id");

                    b.Property<int>("Options")
                        .HasColumnType("integer")
                        .HasColumnName("options");

                    b.Property<int>("Progress")
                        .HasColumnType("integer")
                        .HasColumnName("progress");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.Property<int>("ScenarioCostKpiId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_cost_kpi_id");

                    b.Property<int>("ScenarioDesignId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_design_id");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_id");

                    b.Property<int>("ScenarioNo")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_no");

                    b.Property<int>("ScenarioType")
                        .HasColumnType("integer")
                        .HasColumnName("scenario_type");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<bool>("StepProgress")
                        .HasColumnType("boolean")
                        .HasColumnName("step_progress");

                    b.Property<int>("TowerId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_id");

                    b.Property<int>("TowerTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_type_id");

                    b.Property<decimal>("TowerWeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_weight");

                    b.Property<string>("WindfarmConfigurationId")
                        .HasColumnType("text")
                        .HasColumnName("windfarm_configuration_id");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasIndex("LoadsClusterId")
                        .HasDatabaseName("ix_scenario_over_view_loads_cluster_id");

                    b.HasIndex("ScenarioCostKpiId")
                        .HasDatabaseName("ix_scenario_over_view_scenario_cost_kpi_id");

                    b.HasIndex("ScenarioDesignId")
                        .HasDatabaseName("ix_scenario_over_view_scenario_design_id");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_scenario_over_view_wtg_catalogue_id");

                    b.ToView("scenario_overview");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SegmentDimensionsSummaryDetailView", b =>
                {
                    b.Property<decimal>("MaxPlateThickness")
                        .HasColumnType("numeric")
                        .HasColumnName("max_plate_thickness");

                    b.Property<int>("OuterDiameterBottom")
                        .HasColumnType("integer")
                        .HasColumnName("outer_diameter_bottom");

                    b.Property<int>("OuterDiameterTop")
                        .HasColumnType("integer")
                        .HasColumnName("outer_diameter_top");

                    b.Property<decimal>("SectionLength")
                        .HasColumnType("numeric")
                        .HasColumnName("section_length");

                    b.Property<int>("SectionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("section_number");

                    b.Property<string>("SectionType")
                        .HasColumnType("text")
                        .HasColumnName("section_type");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal>("TransportWeight")
                        .HasColumnType("numeric")
                        .HasColumnName("transport_weight");

                    b.Property<int>("WeightFlangesBottom")
                        .HasColumnType("integer")
                        .HasColumnName("weight_flanges_bottom");

                    b.Property<int>("WeightFlangesTop")
                        .HasColumnType("integer")
                        .HasColumnName("weight_flanges_top");

                    b.Property<decimal>("WeightPlates")
                        .HasColumnType("numeric")
                        .HasColumnName("weight_plates");

                    b.ToView("segment_dimensions_summary_detail_view");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SegmentDimensionsSummaryView", b =>
                {
                    b.Property<decimal>("HubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height");

                    b.Property<int>("NumberOfSections")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_sections");

                    b.Property<int>("SstTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_tower_id");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal>("TowerHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_height");

                    b.ToView("segment_dimensions_summary_view");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SpecialRequirementsSalesConstraint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("AdditionalRequirements")
                        .HasColumnType("text")
                        .HasColumnName("additional_requirements");

                    b.Property<string[]>("ExtremeWindConditions")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("extreme_wind_conditions");

                    b.Property<string>("ExtremeWindConditionsOtherDescription")
                        .HasColumnType("text")
                        .HasColumnName("extreme_wind_conditions_other_description");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<bool>("Nearshore")
                        .HasColumnType("boolean")
                        .HasColumnName("nearshore");

                    b.Property<string[]>("ProjReqLimitSupplierSelection")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("proj_req_limit_supplier_selection");

                    b.Property<int>("ProjectConstraintId")
                        .HasColumnType("integer")
                        .HasColumnName("project_constraint_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<bool>("SesimicRequirements")
                        .HasColumnType("boolean")
                        .HasColumnName("sesimic_requirements");

                    b.Property<string>("SesimicRequirementsCountryCode")
                        .HasColumnType("text")
                        .HasColumnName("sesimic_requirements_country_code");

                    b.Property<string>("SupplierRequirements")
                        .HasColumnType("text")
                        .HasColumnName("supplier_requirements");

                    b.HasKey("Id")
                        .HasName("pk_special_requirements_sales_constraints");

                    b.HasIndex("ProjectConstraintId")
                        .IsUnique()
                        .HasDatabaseName("ix_special_requirements_sales_constraints_project_constraint_id");

                    b.ToTable("special_requirements_sales_constraints");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstDesignEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("DesignLifeTime")
                        .HasColumnType("integer")
                        .HasColumnName("design_life_time");

                    b.Property<string>("DesignLifetimeStatus")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("design_lifetime_status");

                    b.Property<decimal>("HubHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height_m");

                    b.Property<bool>("IsCostsTimelineFeedbackRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_costs_timeline_feedback_request");

                    b.Property<bool>("IsDesignSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("is_design_success");

                    b.Property<bool>("IsPauseScenario")
                        .HasColumnType("boolean")
                        .HasColumnName("is_pause_scenario");

                    b.Property<bool>("IsPreliminaryLogisticAssessmentRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_preliminary_logistic_assessment_request");

                    b.Property<bool>("IsRetireScenario")
                        .HasColumnType("boolean")
                        .HasColumnName("is_retire_scenario");

                    b.Property<bool>("IsSeismicConstraint")
                        .HasColumnType("boolean")
                        .HasColumnName("is_seismic_constraint");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LoadsAssessmentStatus")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("loads_assessment_status");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Risks")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("risks");

                    b.Property<string>("TowerDesignStatus")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("tower_design_status");

                    b.Property<decimal>("TowerHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_height_m");

                    b.Property<decimal>("TowerWeightT")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_weight_t");

                    b.Property<int>("sstTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_tower_id");

                    b.HasKey("Id")
                        .HasName("pk_sst_design_evaluation");

                    b.HasIndex("sstTowerId")
                        .IsUnique()
                        .HasDatabaseName("ix_sst_design_evaluation_sst_tower_id");

                    b.ToTable("sst_design_evaluation");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstDesignSeismicAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("FirstLevelAssessmentDocLink")
                        .HasColumnType("text")
                        .HasColumnName("first_level_assessment_doc_link");

                    b.Property<bool>("IsFirstLevelAssessmentRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_first_level_assessment_request");

                    b.Property<bool>("IsSecondLevelAssessmentRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_second_level_assessment_request");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("SecondLevelAssessmentDocLink")
                        .HasColumnType("text")
                        .HasColumnName("second_level_assessment_doc_link");

                    b.Property<int>("SeismicAssessmentResultTypes")
                        .HasColumnType("integer")
                        .HasColumnName("seismic_assessment_result_types");

                    b.Property<int>("SeismicAssessmentStatusTypes")
                        .HasColumnType("integer")
                        .HasColumnName("seismic_assessment_status_types");

                    b.Property<int>("SstDesignEvaluationId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_design_evaluation_id");

                    b.HasKey("Id")
                        .HasName("pk_sst_design_seismic_assessment");

                    b.HasIndex("SstDesignEvaluationId")
                        .IsUnique()
                        .HasDatabaseName("ix_sst_design_seismic_assessment_sst_design_evaluation_id");

                    b.ToTable("sst_design_seismic_assessment");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstPredesignDimesions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("ConcretePedestal")
                        .HasColumnType("numeric")
                        .HasColumnName("concrete_pedestal");

                    b.Property<decimal>("GroundLevel")
                        .HasColumnType("numeric")
                        .HasColumnName("ground_level");

                    b.Property<decimal>("GroutHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("grout_height");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("MaxSectionLength")
                        .HasColumnType("numeric")
                        .HasColumnName("max_section_length");

                    b.Property<decimal>("MaxSectionWeight")
                        .HasColumnType("numeric")
                        .HasColumnName("max_section_weight");

                    b.Property<decimal>("MaxTowerBaseDiameter")
                        .HasColumnType("numeric")
                        .HasColumnName("max_tower_base_diameter");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SstTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_tower_id");

                    b.Property<decimal>("TotalFoundationHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("total_foundation_height");

                    b.Property<decimal>("TowerFoundationHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_foundation_height");

                    b.Property<decimal>("TowerHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_height");

                    b.Property<decimal>("TowerNacelleDistance")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_nacelle_distance");

                    b.Property<decimal>("UpperTemplate")
                        .HasColumnType("numeric")
                        .HasColumnName("upper_template");

                    b.HasKey("Id")
                        .HasName("pk_sst_predesign_dimesions");

                    b.HasIndex("SstTowerId")
                        .IsUnique()
                        .HasDatabaseName("ix_sst_predesign_dimesions_sst_tower_id");

                    b.ToTable("sst_predesign_dimesions");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstPredesignExistingHubHeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("AepBindingOfferNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_binding_offer_net");

                    b.Property<decimal?>("AepNominationGross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_nomination_gross");

                    b.Property<decimal?>("AepSignatureNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_signature_net");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SstTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_tower_id");

                    b.HasKey("Id")
                        .HasName("pk_sst_predesign_existing_hub_heights");

                    b.HasIndex("SstTowerId")
                        .IsUnique()
                        .HasDatabaseName("ix_sst_predesign_existing_hub_heights_sst_tower_id");

                    b.ToTable("sst_predesign_existing_hub_heights");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstPredesignProposedHubHeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("AepBindingOfferNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_binding_offer_net");

                    b.Property<decimal>("AepNominationGross")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_nomination_gross");

                    b.Property<decimal>("AepSignatureNet")
                        .HasColumnType("numeric")
                        .HasColumnName("aep_signature_net");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SstTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_tower_id");

                    b.Property<bool>("isAepLookupDone")
                        .HasColumnType("boolean")
                        .HasColumnName("is_aep_lookup_done");

                    b.HasKey("Id")
                        .HasName("pk_sst_predesign_proposed_hub_heights");

                    b.HasIndex("SstTowerId")
                        .IsUnique()
                        .HasDatabaseName("ix_sst_predesign_proposed_hub_heights_sst_tower_id");

                    b.ToTable("sst_predesign_proposed_hub_heights");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstTower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<Guid>("AepLookupUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("aep_lookup_uuid");

                    b.Property<int[]>("ApplicationModes")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("application_modes");

                    b.Property<int[]>("ApplicationReasons")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("application_reasons");

                    b.Property<string>("ApplicationReasonsOtherDescription")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("application_reasons_other_description");

                    b.Property<decimal>("AverageShear")
                        .HasColumnType("numeric")
                        .HasColumnName("average_shear");

                    b.Property<decimal>("ClusterSize")
                        .HasColumnType("numeric")
                        .HasColumnName("cluster_size");

                    b.Property<string>("ElsaLoadEnvelopLink")
                        .HasColumnType("text")
                        .HasColumnName("elsa_load_envelop_link");

                    b.Property<decimal?>("ExistingHubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("existing_hub_height");

                    b.Property<string>("Features")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("features");

                    b.Property<string>("HigherHubHeightPossible")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("higher_hub_height_possible");

                    b.Property<int?>("InitialTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("initial_tower_id");

                    b.Property<bool>("IsDesignEvaluationComplete")
                        .HasColumnType("boolean")
                        .HasColumnName("is_design_evaluation_complete");

                    b.Property<bool>("IsDesignEvaluationRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_design_evaluation_request");

                    b.Property<bool>("IsDuplicateScenario")
                        .HasColumnType("boolean")
                        .HasColumnName("is_duplicate_scenario");

                    b.Property<bool>("IsInitialTowerFound")
                        .HasColumnType("boolean")
                        .HasColumnName("is_initial_tower_found");

                    b.Property<bool>("IsProposeHubHeight")
                        .HasColumnType("boolean")
                        .HasColumnName("is_propose_hub_height");

                    b.Property<bool>("IsSarInputRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sar_input_request");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("LoadsClusterId")
                        .HasColumnType("integer")
                        .HasColumnName("loads_cluster_id");

                    b.Property<decimal>("LoadsetHubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("loadset_hub_height");

                    b.Property<decimal>("MaxShear")
                        .HasColumnType("numeric")
                        .HasColumnName("max_shear");

                    b.Property<string>("NoiseModeDocLink")
                        .HasColumnType("text")
                        .HasColumnName("noise_mode_doc_link");

                    b.Property<int[]>("NoiseModes")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("noise_modes");

                    b.Property<decimal?>("ProposedHubHeight")
                        .HasColumnType("numeric")
                        .HasColumnName("proposed_hub_height");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<DateTimeOffset?>("RequestDesignEvaluationEndDatetime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("request_design_evaluation_end_datetime");

                    b.Property<DateTimeOffset?>("RequestDesignEvaluationStartDatetime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("request_design_evaluation_start_datetime");

                    b.Property<string>("SafalLoadEnvelopLink")
                        .HasColumnType("text")
                        .HasColumnName("safal_load_envelop_link");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal>("TargetLifeTime")
                        .HasColumnType("numeric")
                        .HasColumnName("target_life_time");

                    b.Property<int>("TowerTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_type_id");

                    b.Property<decimal>("TowerWeight")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_weight");

                    b.Property<string>("TowersiteDesignOutputFileLink")
                        .HasColumnType("text")
                        .HasColumnName("towersite_design_output_file_link");

                    b.Property<int>("TowersiteDesignOutputFileSizeBytes")
                        .HasColumnType("integer")
                        .HasColumnName("towersite_design_output_file_size_bytes");

                    b.Property<int>("TurbineQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("turbine_quantity");

                    b.Property<bool>("TurbineQuantityTrigger")
                        .HasColumnType("boolean")
                        .HasColumnName("turbine_quantity_trigger");

                    b.Property<string>("WindfarmConfigurationId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("windfarm_configuration_id");

                    b.Property<bool>("WindfarmSizeTrigger")
                        .HasColumnType("boolean")
                        .HasColumnName("windfarm_size_trigger");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_sst_tower");

                    b.HasIndex("InitialTowerId")
                        .HasDatabaseName("ix_sst_tower_initial_tower_id");

                    b.HasIndex("LoadsClusterId")
                        .HasDatabaseName("ix_sst_tower_loads_cluster_id");

                    b.HasIndex("QuoteId")
                        .HasDatabaseName("ix_sst_tower_quote_id");

                    b.HasIndex("TowerTypeId")
                        .HasDatabaseName("ix_sst_tower_tower_type_id");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_sst_tower_wtg_catalogue_id");

                    b.ToTable("sst_tower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Summary", b =>
                {
                    b.Property<string>("ClusterName")
                        .HasColumnType("text")
                        .HasColumnName("cluster_name");

                    b.Property<decimal?>("DesignLifetime")
                        .HasColumnType("numeric")
                        .HasColumnName("design_lifetime");

                    b.Property<decimal>("FileSize")
                        .HasColumnType("numeric")
                        .HasColumnName("file_size");

                    b.Property<string>("InitialTower")
                        .HasColumnType("text")
                        .HasColumnName("initial_tower");

                    b.Property<bool>("IsTowerDesignStatusSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("is_tower_design_status_success");

                    b.Property<string>("QuotationId")
                        .HasColumnType("text")
                        .HasColumnName("quotation_id");

                    b.Property<decimal>("RnaLoadMargin")
                        .HasColumnType("numeric")
                        .HasColumnName("rna_load_margin");

                    b.Property<int>("SstTowerId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_tower_id");

                    b.Property<string>("TowersiteDesignOutputFileLink")
                        .HasColumnType("text")
                        .HasColumnName("towersite_design_output_file_link");

                    b.Property<int>("TurbineQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("turbine_quantity");

                    b.Property<string>("WtgType")
                        .HasColumnType("text")
                        .HasColumnName("wtg_type");

                    b.Property<decimal>("sstTargetLifetime")
                        .HasColumnType("numeric")
                        .HasColumnName("sst_target_lifetime");

                    b.ToView("design_confirmation_summary_view");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Suppliers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("CostsTowerSupplierId")
                        .HasColumnType("integer")
                        .HasColumnName("costs_tower_supplier_id");

                    b.Property<bool>("IsApprovalsApplicable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_approvals_applicable");

                    b.Property<bool>("IsOfferApproval")
                        .HasColumnType("boolean")
                        .HasColumnName("is_offer_approval");

                    b.Property<bool>("IsOfferCapability")
                        .HasColumnType("boolean")
                        .HasColumnName("is_offer_capability");

                    b.Property<bool>("IsOfferCapacity")
                        .HasColumnType("boolean")
                        .HasColumnName("is_offer_capacity");

                    b.Property<bool>("IsSignatureApproval")
                        .HasColumnType("boolean")
                        .HasColumnName("is_signature_approval");

                    b.Property<bool>("IsSignatureCapability")
                        .HasColumnType("boolean")
                        .HasColumnName("is_signature_capability");

                    b.Property<bool>("IsSignatureCapacity")
                        .HasColumnType("boolean")
                        .HasColumnName("is_signature_capacity");

                    b.Property<string>("TowerPlanningComments")
                        .HasColumnType("text")
                        .HasColumnName("tower_planning_comments");

                    b.HasKey("Id")
                        .HasName("pk_suppliers");

                    b.HasIndex("CostsTowerSupplierId")
                        .HasDatabaseName("ix_suppliers_costs_tower_supplier_id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SwatLoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<bool>("Acs2xEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("acs2x_enabled");

                    b.Property<decimal[]>("AepGrossInGwh")
                        .IsRequired()
                        .HasColumnType("numeric[]")
                        .HasColumnName("aep_gross_in_gwh");

                    b.Property<decimal[]>("AepGrossInPercent")
                        .IsRequired()
                        .HasColumnType("numeric[]")
                        .HasColumnName("aep_gross_in_percent");

                    b.Property<decimal[]>("AepNetInGwh")
                        .HasColumnType("numeric[]")
                        .HasColumnName("aep_net_in_gwh");

                    b.Property<decimal[]>("AepNetInPercent")
                        .HasColumnType("numeric[]")
                        .HasColumnName("aep_net_in_percent");

                    b.Property<decimal[]>("AepStepsInM")
                        .IsRequired()
                        .HasColumnType("numeric[]")
                        .HasColumnName("aep_steps_in_m");

                    b.Property<int[]>("ApplicationModes")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("application_modes");

                    b.Property<decimal>("AvgShear")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shear");

                    b.Property<string>("CloeTowerId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("cloe_tower_id");

                    b.Property<string>("ConfigurationId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("configuration_id");

                    b.Property<string>("ElsaFileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("elsa_file_name");

                    b.Property<decimal>("ElsaFilesize")
                        .HasColumnType("numeric")
                        .HasColumnName("elsa_filesize");

                    b.Property<JsonDocument>("JsonPayload")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("json_payload");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("LinkToElsaFile")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link_to_elsa_file");

                    b.Property<string>("LinkToSafalFile")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link_to_safal_file");

                    b.Property<string>("LoadClusterId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("load_cluster_id");

                    b.Property<decimal>("LoadsetHubHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("loadset_hub_height_m");

                    b.Property<decimal>("MaxShear")
                        .HasColumnType("numeric")
                        .HasColumnName("max_shear");

                    b.Property<decimal>("PedestalHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("pedestal_height_m");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("RnaLifetime")
                        .HasColumnType("numeric")
                        .HasColumnName("rna_lifetime");

                    b.Property<decimal>("RnaLoadsMargin")
                        .HasColumnType("numeric")
                        .HasColumnName("rna_loads_margin");

                    b.Property<string>("RnaSuitability")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("rna_suitability");

                    b.Property<string>("SafalFileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("safal_file_name");

                    b.Property<decimal>("SafalFilesize")
                        .HasColumnType("numeric")
                        .HasColumnName("safal_filesize");

                    b.Property<string>("SarCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("sar_code");

                    b.Property<decimal>("SiteLatitude")
                        .HasColumnType("numeric")
                        .HasColumnName("site_latitude");

                    b.Property<decimal>("SiteLongitude")
                        .HasColumnType("numeric")
                        .HasColumnName("site_longitude");

                    b.Property<decimal>("TowerHubHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_hub_height_m");

                    b.Property<decimal>("TowerLoadsMargin")
                        .HasColumnType("numeric")
                        .HasColumnName("tower_loads_margin");

                    b.Property<string>("TowerTypeSwat")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("tower_type_swat");

                    b.Property<int>("TurbineQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("turbine_quantity");

                    b.Property<string>("TurbineTypeLoadsConfig")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("turbine_type_loads_config");

                    b.Property<string>("TurbineTypeSmkMain")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("turbine_type_smk_main");

                    b.Property<string>("TurbineTypeSmkVariant")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("turbine_type_smk_variant");

                    b.HasKey("Id")
                        .HasName("pk_swat_loads");

                    b.ToTable("swat_loads");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("task_name");

                    b.HasKey("Id")
                        .HasName("pk_tasks");

                    b.ToTable("tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TaskName = "Tower design"
                        },
                        new
                        {
                            Id = 2,
                            TaskName = "Foundation design"
                        },
                        new
                        {
                            Id = 3,
                            TaskName = "Anchor Cage design"
                        },
                        new
                        {
                            Id = 4,
                            TaskName = "Preliminary Logistic Assessment"
                        },
                        new
                        {
                            Id = 5,
                            TaskName = "Road Survey"
                        },
                        new
                        {
                            Id = 6,
                            TaskName = "Transport oversea"
                        },
                        new
                        {
                            Id = 7,
                            TaskName = "Transport inland"
                        },
                        new
                        {
                            Id = 8,
                            TaskName = "Anchor cage delivery"
                        },
                        new
                        {
                            Id = 9,
                            TaskName = "Foundation construction"
                        },
                        new
                        {
                            Id = 10,
                            TaskName = "Tower installation"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerDesignCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("CostKilo")
                        .HasColumnType("numeric")
                        .HasColumnName("cost_kilo");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer")
                        .HasColumnName("currency_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.HasKey("Id")
                        .HasName("pk_tower_design_costs");

                    b.HasIndex("CurrencyId")
                        .HasDatabaseName("ix_tower_design_costs_currency_id");

                    b.ToTable("tower_design_costs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostKilo = 25m,
                            CurrencyId = 5
                        },
                        new
                        {
                            Id = 2,
                            CostKilo = 29.31m,
                            CurrencyId = 2
                        },
                        new
                        {
                            Id = 3,
                            CostKilo = 192.44m,
                            CurrencyId = 1
                        },
                        new
                        {
                            Id = 4,
                            CostKilo = 165.12m,
                            CurrencyId = 3
                        },
                        new
                        {
                            Id = 5,
                            CostKilo = 2147.35m,
                            CurrencyId = 4
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("ExternalDiameterLowerFlangeM")
                        .HasColumnType("numeric")
                        .HasColumnName("external_diameter_lower_flange_m");

                    b.Property<decimal>("ExternalDiameterUpperFlangeM")
                        .HasColumnType("numeric")
                        .HasColumnName("external_diameter_upper_flange_m");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("SectionHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("section_height_m");

                    b.Property<int>("SectionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("section_number");

                    b.Property<string>("SectionType")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("section_type");

                    b.Property<decimal>("TotalWeightKg")
                        .HasColumnType("numeric")
                        .HasColumnName("total_weight_kg");

                    b.Property<int>("TowerTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_type_id");

                    b.HasKey("Id")
                        .HasName("pk_tower_sections");

                    b.HasIndex("TowerTypeId", "SectionNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_tower_sections_tower_type_id_section_number");

                    b.ToTable("tower_sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExternalDiameterLowerFlangeM = 6m,
                            ExternalDiameterUpperFlangeM = 5.682m,
                            SectionHeightM = 15m,
                            SectionNumber = 1,
                            TotalWeightKg = 91066.31003m,
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            ExternalDiameterLowerFlangeM = 5.682m,
                            ExternalDiameterUpperFlangeM = 5.678m,
                            SectionHeightM = 18.2m,
                            SectionNumber = 2,
                            TotalWeightKg = 84192.47139m,
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExternalDiameterLowerFlangeM = 5.678m,
                            ExternalDiameterUpperFlangeM = 4.8285m,
                            SectionHeightM = 21.28m,
                            SectionNumber = 3,
                            TotalWeightKg = 84470.30459m,
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            ExternalDiameterLowerFlangeM = 4.8285m,
                            ExternalDiameterUpperFlangeM = 4.4245m,
                            SectionHeightM = 24.92m,
                            SectionNumber = 4,
                            TotalWeightKg = 81538.36398m,
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            ExternalDiameterLowerFlangeM = 4.4245m,
                            ExternalDiameterUpperFlangeM = 4.42m,
                            SectionHeightM = 26.88m,
                            SectionNumber = 5,
                            TotalWeightKg = 68370.72276m,
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            ExternalDiameterLowerFlangeM = 4.42m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 26.134m,
                            SectionNumber = 6,
                            TotalWeightKg = 58393.18125m,
                            TowerTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            ExternalDiameterLowerFlangeM = 4.7m,
                            ExternalDiameterUpperFlangeM = 4.433m,
                            SectionHeightM = 16.464m,
                            SectionNumber = 1,
                            TotalWeightKg = 79354.88909m,
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            ExternalDiameterLowerFlangeM = 4.433m,
                            ExternalDiameterUpperFlangeM = 4.427m,
                            SectionHeightM = 22.68m,
                            SectionNumber = 2,
                            TotalWeightKg = 76299.29637m,
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            ExternalDiameterLowerFlangeM = 4.427m,
                            ExternalDiameterUpperFlangeM = 3.5566m,
                            SectionHeightM = 27.16m,
                            SectionNumber = 3,
                            TotalWeightKg = 68693.00946m,
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            ExternalDiameterLowerFlangeM = 3.5566m,
                            ExternalDiameterUpperFlangeM = 3.574m,
                            SectionHeightM = 33.61m,
                            SectionNumber = 4,
                            TotalWeightKg = 66933.01056m,
                            TowerTypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.8m,
                            SectionHeightM = 14.342m,
                            SectionNumber = 1,
                            TotalWeightKg = 84512.97202m,
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 12,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.8m,
                            SectionHeightM = 19.368m,
                            SectionNumber = 2,
                            TotalWeightKg = 81456.61957m,
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 13,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.7925m,
                            SectionHeightM = 26.832m,
                            SectionNumber = 3,
                            TotalWeightKg = 84754.19322m,
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 14,
                            ExternalDiameterLowerFlangeM = 4.7925m,
                            ExternalDiameterUpperFlangeM = 4.099m,
                            SectionHeightM = 29.977m,
                            SectionNumber = 4,
                            TotalWeightKg = 70462.43551m,
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 15,
                            ExternalDiameterLowerFlangeM = 4.099m,
                            ExternalDiameterUpperFlangeM = 3.574m,
                            SectionHeightM = 30m,
                            SectionNumber = 5,
                            TotalWeightKg = 56744.14819m,
                            TowerTypeId = 4
                        },
                        new
                        {
                            Id = 16,
                            ExternalDiameterLowerFlangeM = 4.115m,
                            ExternalDiameterUpperFlangeM = 4.1065m,
                            SectionHeightM = 16.18m,
                            SectionNumber = 1,
                            TotalWeightKg = 60050.07041m,
                            TowerTypeId = 6
                        },
                        new
                        {
                            Id = 17,
                            ExternalDiameterLowerFlangeM = 4.1065m,
                            ExternalDiameterUpperFlangeM = 4.1m,
                            SectionHeightM = 23.3m,
                            SectionNumber = 2,
                            TotalWeightKg = 57553.45592m,
                            TowerTypeId = 6
                        },
                        new
                        {
                            Id = 18,
                            ExternalDiameterLowerFlangeM = 4.1m,
                            ExternalDiameterUpperFlangeM = 4.0167m,
                            SectionHeightM = 23.52m,
                            SectionNumber = 3,
                            TotalWeightKg = 44807.6526m,
                            TowerTypeId = 6
                        },
                        new
                        {
                            Id = 19,
                            ExternalDiameterLowerFlangeM = 4.0167m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 25m,
                            SectionNumber = 4,
                            TotalWeightKg = 41491.56669m,
                            TowerTypeId = 6
                        },
                        new
                        {
                            Id = 20,
                            ExternalDiameterLowerFlangeM = 4.678m,
                            ExternalDiameterUpperFlangeM = 4.43m,
                            SectionHeightM = 19.7m,
                            SectionNumber = 1,
                            TotalWeightKg = 79730.43613m,
                            TowerTypeId = 7
                        },
                        new
                        {
                            Id = 21,
                            ExternalDiameterLowerFlangeM = 4.43m,
                            ExternalDiameterUpperFlangeM = 4.422m,
                            SectionHeightM = 25.2999292m,
                            SectionNumber = 2,
                            TotalWeightKg = 71971.73324m,
                            TowerTypeId = 7
                        },
                        new
                        {
                            Id = 22,
                            ExternalDiameterLowerFlangeM = 4.422m,
                            ExternalDiameterUpperFlangeM = 4.017m,
                            SectionHeightM = 28.1m,
                            SectionNumber = 3,
                            TotalWeightKg = 59627.713m,
                            TowerTypeId = 7
                        },
                        new
                        {
                            Id = 23,
                            ExternalDiameterLowerFlangeM = 4.017m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27.336m,
                            SectionNumber = 4,
                            TotalWeightKg = 47562.59894m,
                            TowerTypeId = 7
                        },
                        new
                        {
                            Id = 24,
                            ExternalDiameterLowerFlangeM = 4.481m,
                            ExternalDiameterUpperFlangeM = 4.431m,
                            SectionHeightM = 14.1m,
                            SectionNumber = 1,
                            TotalWeightKg = 62627.49387m,
                            TowerTypeId = 8
                        },
                        new
                        {
                            Id = 25,
                            ExternalDiameterLowerFlangeM = 4.431m,
                            ExternalDiameterUpperFlangeM = 4.424m,
                            SectionHeightM = 16.9m,
                            SectionNumber = 2,
                            TotalWeightKg = 55264.09491m,
                            TowerTypeId = 8
                        },
                        new
                        {
                            Id = 26,
                            ExternalDiameterLowerFlangeM = 4.424m,
                            ExternalDiameterUpperFlangeM = 4.419m,
                            SectionHeightM = 19.7m,
                            SectionNumber = 3,
                            TotalWeightKg = 49732.77538m,
                            TowerTypeId = 8
                        },
                        new
                        {
                            Id = 27,
                            ExternalDiameterLowerFlangeM = 4.419m,
                            ExternalDiameterUpperFlangeM = 4.416m,
                            SectionHeightM = 25.3m,
                            SectionNumber = 4,
                            TotalWeightKg = 50217.58859m,
                            TowerTypeId = 8
                        },
                        new
                        {
                            Id = 28,
                            ExternalDiameterLowerFlangeM = 4.416m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 24.434m,
                            SectionNumber = 5,
                            TotalWeightKg = 43464.47028m,
                            TowerTypeId = 8
                        },
                        new
                        {
                            Id = 29,
                            ExternalDiameterLowerFlangeM = 4.67m,
                            ExternalDiameterUpperFlangeM = 4.67m,
                            SectionHeightM = 16.265m,
                            SectionNumber = 1,
                            TotalWeightKg = 75128.60571m,
                            TowerTypeId = 9
                        },
                        new
                        {
                            Id = 30,
                            ExternalDiameterLowerFlangeM = 4.67m,
                            ExternalDiameterUpperFlangeM = 4.433m,
                            SectionHeightM = 18.18m,
                            SectionNumber = 2,
                            TotalWeightKg = 68793.4201m,
                            TowerTypeId = 9
                        },
                        new
                        {
                            Id = 31,
                            ExternalDiameterLowerFlangeM = 4.433m,
                            ExternalDiameterUpperFlangeM = 4.423m,
                            SectionHeightM = 18.185m,
                            SectionNumber = 3,
                            TotalWeightKg = 57775.07995m,
                            TowerTypeId = 9
                        },
                        new
                        {
                            Id = 32,
                            ExternalDiameterLowerFlangeM = 4.423m,
                            ExternalDiameterUpperFlangeM = 4.121m,
                            SectionHeightM = 22.88m,
                            SectionNumber = 4,
                            TotalWeightKg = 56262.89418m,
                            TowerTypeId = 9
                        },
                        new
                        {
                            Id = 33,
                            ExternalDiameterLowerFlangeM = 4.121m,
                            ExternalDiameterUpperFlangeM = 3.817m,
                            SectionHeightM = 22.99m,
                            SectionNumber = 5,
                            TotalWeightKg = 43088.56415m,
                            TowerTypeId = 9
                        },
                        new
                        {
                            Id = 34,
                            ExternalDiameterLowerFlangeM = 3.817m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 6,
                            TotalWeightKg = 47394.32028m,
                            TowerTypeId = 9
                        },
                        new
                        {
                            Id = 35,
                            ExternalDiameterLowerFlangeM = 4.278m,
                            ExternalDiameterUpperFlangeM = 4.0305m,
                            SectionHeightM = 16.62m,
                            SectionNumber = 1,
                            TotalWeightKg = 64903.80646m,
                            TowerTypeId = 11
                        },
                        new
                        {
                            Id = 36,
                            ExternalDiameterLowerFlangeM = 4.0305m,
                            ExternalDiameterUpperFlangeM = 4.0221m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 2,
                            TotalWeightKg = 56614.98997m,
                            TowerTypeId = 11
                        },
                        new
                        {
                            Id = 37,
                            ExternalDiameterLowerFlangeM = 4.0221m,
                            ExternalDiameterUpperFlangeM = 3.6174m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 3,
                            TotalWeightKg = 40944.29283m,
                            TowerTypeId = 11
                        },
                        new
                        {
                            Id = 38,
                            ExternalDiameterLowerFlangeM = 3.6174m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 23.74m,
                            SectionNumber = 4,
                            TotalWeightKg = 39526.45656m,
                            TowerTypeId = 11
                        },
                        new
                        {
                            Id = 39,
                            ExternalDiameterLowerFlangeM = 4.25m,
                            ExternalDiameterUpperFlangeM = 4.023m,
                            SectionHeightM = 23m,
                            SectionNumber = 1,
                            TotalWeightKg = 69271.09199m,
                            TowerTypeId = 12
                        },
                        new
                        {
                            Id = 40,
                            ExternalDiameterLowerFlangeM = 4.023m,
                            ExternalDiameterUpperFlangeM = 3.369m,
                            SectionHeightM = 29.5m,
                            SectionNumber = 2,
                            TotalWeightKg = 55748.72839m,
                            TowerTypeId = 12
                        },
                        new
                        {
                            Id = 41,
                            ExternalDiameterLowerFlangeM = 3.369m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 29.5m,
                            SectionNumber = 3,
                            TotalWeightKg = 44269.27435m,
                            TowerTypeId = 12
                        },
                        new
                        {
                            Id = 42,
                            ExternalDiameterLowerFlangeM = 4.27m,
                            ExternalDiameterUpperFlangeM = 4.0285m,
                            SectionHeightM = 19.715m,
                            SectionNumber = 1,
                            TotalWeightKg = 71264.2093m,
                            TowerTypeId = 13
                        },
                        new
                        {
                            Id = 43,
                            ExternalDiameterLowerFlangeM = 4.0285m,
                            ExternalDiameterUpperFlangeM = 4.02m,
                            SectionHeightM = 25.035m,
                            SectionNumber = 2,
                            TotalWeightKg = 62142.32845m,
                            TowerTypeId = 13
                        },
                        new
                        {
                            Id = 44,
                            ExternalDiameterLowerFlangeM = 4.02m,
                            ExternalDiameterUpperFlangeM = 3.7155m,
                            SectionHeightM = 23.62m,
                            SectionNumber = 3,
                            TotalWeightKg = 43041.61827m,
                            TowerTypeId = 13
                        },
                        new
                        {
                            Id = 45,
                            ExternalDiameterLowerFlangeM = 3.7155m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 26.66m,
                            SectionNumber = 4,
                            TotalWeightKg = 41138.54661m,
                            TowerTypeId = 13
                        },
                        new
                        {
                            Id = 46,
                            ExternalDiameterLowerFlangeM = 4.262m,
                            ExternalDiameterUpperFlangeM = 4.199m,
                            SectionHeightM = 18.5m,
                            SectionNumber = 1,
                            TotalWeightKg = 70160.09637m,
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 47,
                            ExternalDiameterLowerFlangeM = 4.199m,
                            ExternalDiameterUpperFlangeM = 4.021m,
                            SectionHeightM = 25.5m,
                            SectionNumber = 2,
                            TotalWeightKg = 65000.03823m,
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 48,
                            ExternalDiameterLowerFlangeM = 4.021m,
                            ExternalDiameterUpperFlangeM = 3.617m,
                            SectionHeightM = 26m,
                            SectionNumber = 3,
                            TotalWeightKg = 48034.30023m,
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 49,
                            ExternalDiameterLowerFlangeM = 3.617m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 29.5m,
                            SectionNumber = 4,
                            TotalWeightKg = 44546.9183m,
                            TowerTypeId = 14
                        },
                        new
                        {
                            Id = 50,
                            ExternalDiameterLowerFlangeM = 4.7m,
                            ExternalDiameterUpperFlangeM = 4.7m,
                            SectionHeightM = 14.3m,
                            SectionNumber = 1,
                            TotalWeightKg = 84033.49479m,
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 51,
                            ExternalDiameterLowerFlangeM = 4.7m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 21.56m,
                            SectionNumber = 2,
                            TotalWeightKg = 79745.69923m,
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 52,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 26.88m,
                            SectionNumber = 3,
                            TotalWeightKg = 76060.20806m,
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 53,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 34.45m,
                            SectionNumber = 4,
                            TotalWeightKg = 75793.06763m,
                            TowerTypeId = 15
                        },
                        new
                        {
                            Id = 54,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.2966m,
                            SectionHeightM = 8.464m,
                            SectionNumber = 1,
                            TotalWeightKg = 61269.31384m,
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 55,
                            ExternalDiameterLowerFlangeM = 4.2958m,
                            ExternalDiameterUpperFlangeM = 4.5m,
                            SectionHeightM = 14.84m,
                            SectionNumber = 2,
                            TotalWeightKg = 69796.97648m,
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 56,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.495m,
                            SectionHeightM = 15.12m,
                            SectionNumber = 3,
                            TotalWeightKg = 57634.6887m,
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 57,
                            ExternalDiameterLowerFlangeM = 4.495m,
                            ExternalDiameterUpperFlangeM = 4.495m,
                            SectionHeightM = 17.64m,
                            SectionNumber = 4,
                            TotalWeightKg = 53453.98555m,
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 58,
                            ExternalDiameterLowerFlangeM = 4.495m,
                            ExternalDiameterUpperFlangeM = 4.1m,
                            SectionHeightM = 21m,
                            SectionNumber = 5,
                            TotalWeightKg = 48049.17395m,
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 59,
                            ExternalDiameterLowerFlangeM = 4.1m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 21.85m,
                            SectionNumber = 6,
                            TotalWeightKg = 49717.40663m,
                            TowerTypeId = 16
                        },
                        new
                        {
                            Id = 60,
                            ExternalDiameterLowerFlangeM = 6.4m,
                            ExternalDiameterUpperFlangeM = 6.4m,
                            SectionHeightM = 12.32m,
                            SectionNumber = 1,
                            TotalWeightKg = 83350m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 61,
                            ExternalDiameterLowerFlangeM = 6.4m,
                            ExternalDiameterUpperFlangeM = 6.4m,
                            SectionHeightM = 14m,
                            SectionNumber = 2,
                            TotalWeightKg = 82480m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 62,
                            ExternalDiameterLowerFlangeM = 6.4m,
                            ExternalDiameterUpperFlangeM = 6.4m,
                            SectionHeightM = 15.68m,
                            SectionNumber = 3,
                            TotalWeightKg = 83110m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 63,
                            ExternalDiameterLowerFlangeM = 6.4m,
                            ExternalDiameterUpperFlangeM = 6.4m,
                            SectionHeightM = 18.2m,
                            SectionNumber = 4,
                            TotalWeightKg = 83910m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 64,
                            ExternalDiameterLowerFlangeM = 6.4m,
                            ExternalDiameterUpperFlangeM = 5.75m,
                            SectionHeightM = 18.48m,
                            SectionNumber = 5,
                            TotalWeightKg = 73260m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 65,
                            ExternalDiameterLowerFlangeM = 5.75m,
                            ExternalDiameterUpperFlangeM = 5.1m,
                            SectionHeightM = 18.48m,
                            SectionNumber = 6,
                            TotalWeightKg = 62220m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 66,
                            ExternalDiameterLowerFlangeM = 5.1m,
                            ExternalDiameterUpperFlangeM = 4.45m,
                            SectionHeightM = 18.48m,
                            SectionNumber = 7,
                            TotalWeightKg = 50400m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 67,
                            ExternalDiameterLowerFlangeM = 4.45m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 26.89m,
                            SectionNumber = 8,
                            TotalWeightKg = 64480m,
                            TowerTypeId = 20
                        },
                        new
                        {
                            Id = 68,
                            ExternalDiameterLowerFlangeM = 6.6m,
                            ExternalDiameterUpperFlangeM = 6.575m,
                            SectionHeightM = 12.32m,
                            SectionNumber = 1,
                            TotalWeightKg = 83980m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 69,
                            ExternalDiameterLowerFlangeM = 6.575m,
                            ExternalDiameterUpperFlangeM = 6.575m,
                            SectionHeightM = 13.44m,
                            SectionNumber = 2,
                            TotalWeightKg = 82320m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 70,
                            ExternalDiameterLowerFlangeM = 6.575m,
                            ExternalDiameterUpperFlangeM = 6.575m,
                            SectionHeightM = 14.56m,
                            SectionNumber = 3,
                            TotalWeightKg = 82350m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 71,
                            ExternalDiameterLowerFlangeM = 6.575m,
                            ExternalDiameterUpperFlangeM = 6.575m,
                            SectionHeightM = 16.24m,
                            SectionNumber = 4,
                            TotalWeightKg = 82980m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 72,
                            ExternalDiameterLowerFlangeM = 6.575m,
                            ExternalDiameterUpperFlangeM = 6.575m,
                            SectionHeightM = 18.48m,
                            SectionNumber = 5,
                            TotalWeightKg = 80910m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 73,
                            ExternalDiameterLowerFlangeM = 5.975m,
                            ExternalDiameterUpperFlangeM = 5.376m,
                            SectionHeightM = 18.48m,
                            SectionNumber = 6,
                            TotalWeightKg = 70170m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 74,
                            ExternalDiameterLowerFlangeM = 5.376m,
                            ExternalDiameterUpperFlangeM = 4.44m,
                            SectionHeightM = 28.84m,
                            SectionNumber = 7,
                            TotalWeightKg = 83270m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 75,
                            ExternalDiameterLowerFlangeM = 4.44m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 29.97m,
                            SectionNumber = 8,
                            TotalWeightKg = 70760m,
                            TowerTypeId = 21
                        },
                        new
                        {
                            Id = 76,
                            ExternalDiameterLowerFlangeM = 4.7m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 14.86m,
                            SectionNumber = 1,
                            TotalWeightKg = 70416.81865m,
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 77,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 22.68m,
                            SectionNumber = 2,
                            TotalWeightKg = 69556.99301m,
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 78,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 24.08m,
                            SectionNumber = 3,
                            TotalWeightKg = 54286.49734m,
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 79,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 25.77m,
                            SectionNumber = 4,
                            TotalWeightKg = 56143.28781m,
                            TowerTypeId = 23
                        },
                        new
                        {
                            Id = 80,
                            ExternalDiameterLowerFlangeM = 4.3691m,
                            ExternalDiameterUpperFlangeM = 4.355m,
                            SectionHeightM = 13.18m,
                            SectionNumber = 1,
                            TotalWeightKg = 82880.30389m,
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 81,
                            ExternalDiameterLowerFlangeM = 4.355m,
                            ExternalDiameterUpperFlangeM = 4.3m,
                            SectionHeightM = 20.72m,
                            SectionNumber = 2,
                            TotalWeightKg = 79695.70112m,
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 82,
                            ExternalDiameterLowerFlangeM = 4.3m,
                            ExternalDiameterUpperFlangeM = 4.3m,
                            SectionHeightM = 29.96m,
                            SectionNumber = 3,
                            TotalWeightKg = 81066.70883m,
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 83,
                            ExternalDiameterLowerFlangeM = 4.3m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 35.85m,
                            SectionNumber = 4,
                            TotalWeightKg = 72484.84805m,
                            TowerTypeId = 24
                        },
                        new
                        {
                            Id = 84,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.8m,
                            SectionHeightM = 16.24m,
                            SectionNumber = 1,
                            TotalWeightKg = 80488.94645m,
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 85,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.8m,
                            SectionHeightM = 22.4m,
                            SectionNumber = 2,
                            TotalWeightKg = 78524.49403m,
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 86,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.5m,
                            SectionHeightM = 30.24m,
                            SectionNumber = 3,
                            TotalWeightKg = 79213.5242m,
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 87,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 35.85m,
                            SectionNumber = 4,
                            TotalWeightKg = 74744.20523m,
                            TowerTypeId = 25
                        },
                        new
                        {
                            Id = 88,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.8m,
                            SectionHeightM = 14.039m,
                            SectionNumber = 1,
                            TotalWeightKg = 80500.94002m,
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 89,
                            ExternalDiameterLowerFlangeM = 4.8m,
                            ExternalDiameterUpperFlangeM = 4.798m,
                            SectionHeightM = 19.88m,
                            SectionNumber = 2,
                            TotalWeightKg = 80331.59808m,
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 90,
                            ExternalDiameterLowerFlangeM = 4.798m,
                            ExternalDiameterUpperFlangeM = 4.792m,
                            SectionHeightM = 24.36m,
                            SectionNumber = 3,
                            TotalWeightKg = 75953.01047m,
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 91,
                            ExternalDiameterLowerFlangeM = 4.792m,
                            ExternalDiameterUpperFlangeM = 4.418m,
                            SectionHeightM = 26.6m,
                            SectionNumber = 4,
                            TotalWeightKg = 64534.22405m,
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 92,
                            ExternalDiameterLowerFlangeM = 4.418m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 26.035m,
                            SectionNumber = 5,
                            TotalWeightKg = 52302.76342m,
                            TowerTypeId = 26
                        },
                        new
                        {
                            Id = 93,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.3075m,
                            SectionHeightM = 12.91m,
                            SectionNumber = 1,
                            TotalWeightKg = 79517.06165m,
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 94,
                            ExternalDiameterLowerFlangeM = 4.3005m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 18.48m,
                            SectionNumber = 2,
                            TotalWeightKg = 80482.3936m,
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 95,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 4.493m,
                            SectionHeightM = 23.52m,
                            SectionNumber = 3,
                            TotalWeightKg = 81159.19328m,
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 96,
                            ExternalDiameterLowerFlangeM = 4.493m,
                            ExternalDiameterUpperFlangeM = 4.3m,
                            SectionHeightM = 29.96m,
                            SectionNumber = 4,
                            TotalWeightKg = 73543.0482m,
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 97,
                            ExternalDiameterLowerFlangeM = 4.3m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 29.97m,
                            SectionNumber = 5,
                            TotalWeightKg = 60725.34469m,
                            TowerTypeId = 27
                        },
                        new
                        {
                            Id = 98,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.5m,
                            SectionHeightM = 13.18m,
                            SectionNumber = 1,
                            TotalWeightKg = 89293.03473m,
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 99,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.5m,
                            SectionHeightM = 19.04m,
                            SectionNumber = 2,
                            TotalWeightKg = 90738.24186m,
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 100,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.4m,
                            SectionHeightM = 23.8m,
                            SectionNumber = 3,
                            TotalWeightKg = 89933.23436m,
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 101,
                            ExternalDiameterLowerFlangeM = 4.4m,
                            ExternalDiameterUpperFlangeM = 4.4m,
                            SectionHeightM = 29.96m,
                            SectionNumber = 4,
                            TotalWeightKg = 79262.15784m,
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 102,
                            ExternalDiameterLowerFlangeM = 4.4m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 32.21m,
                            SectionNumber = 5,
                            TotalWeightKg = 65218.85933m,
                            TowerTypeId = 28
                        },
                        new
                        {
                            Id = 103,
                            ExternalDiameterLowerFlangeM = 4.6999m,
                            ExternalDiameterUpperFlangeM = 4.4912m,
                            SectionHeightM = 13.18m,
                            SectionNumber = 1,
                            TotalWeightKg = 83703.42767m,
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 104,
                            ExternalDiameterLowerFlangeM = 4.4912m,
                            ExternalDiameterUpperFlangeM = 4.69m,
                            SectionHeightM = 20.72m,
                            SectionNumber = 2,
                            TotalWeightKg = 89339.65084m,
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 105,
                            ExternalDiameterLowerFlangeM = 4.69m,
                            ExternalDiameterUpperFlangeM = 4.691m,
                            SectionHeightM = 26.04m,
                            SectionNumber = 3,
                            TotalWeightKg = 88386.75044m,
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 106,
                            ExternalDiameterLowerFlangeM = 4.691m,
                            ExternalDiameterUpperFlangeM = 4.691m,
                            SectionHeightM = 29.96m,
                            SectionNumber = 4,
                            TotalWeightKg = 73648.12205m,
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 107,
                            ExternalDiameterLowerFlangeM = 4.691m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 29.97m,
                            SectionNumber = 5,
                            TotalWeightKg = 63505.11301m,
                            TowerTypeId = 30
                        },
                        new
                        {
                            Id = 108,
                            ExternalDiameterLowerFlangeM = 4.47m,
                            ExternalDiameterUpperFlangeM = 4.224m,
                            SectionHeightM = 25.072m,
                            SectionNumber = 1,
                            TotalWeightKg = 79335.33756m,
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 109,
                            ExternalDiameterLowerFlangeM = 4.224m,
                            ExternalDiameterUpperFlangeM = 3.481m,
                            SectionHeightM = 29.26m,
                            SectionNumber = 2,
                            TotalWeightKg = 65774.31345m,
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 110,
                            ExternalDiameterLowerFlangeM = 3.481m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 34.5m,
                            SectionNumber = 3,
                            TotalWeightKg = 58854.62959m,
                            TowerTypeId = 34
                        },
                        new
                        {
                            Id = 111,
                            ExternalDiameterLowerFlangeM = 4.47m,
                            ExternalDiameterUpperFlangeM = 4.2235m,
                            SectionHeightM = 25.073m,
                            SectionNumber = 1,
                            TotalWeightKg = 78556.7m,
                            TowerTypeId = 35
                        },
                        new
                        {
                            Id = 112,
                            ExternalDiameterLowerFlangeM = 4.2235m,
                            ExternalDiameterUpperFlangeM = 3.4805m,
                            SectionHeightM = 29.26m,
                            SectionNumber = 2,
                            TotalWeightKg = 62966.5m,
                            TowerTypeId = 35
                        },
                        new
                        {
                            Id = 113,
                            ExternalDiameterLowerFlangeM = 3.4805m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 34.5m,
                            SectionNumber = 3,
                            TotalWeightKg = 57133.5m,
                            TowerTypeId = 35
                        },
                        new
                        {
                            Id = 114,
                            ExternalDiameterLowerFlangeM = 4.488m,
                            ExternalDiameterUpperFlangeM = 4.499m,
                            SectionHeightM = 18.075m,
                            SectionNumber = 1,
                            TotalWeightKg = 64128.96002m,
                            TowerTypeId = 36
                        },
                        new
                        {
                            Id = 115,
                            ExternalDiameterLowerFlangeM = 4.499m,
                            ExternalDiameterUpperFlangeM = 4.494m,
                            SectionHeightM = 24.465m,
                            SectionNumber = 2,
                            TotalWeightKg = 61419.53434m,
                            TowerTypeId = 36
                        },
                        new
                        {
                            Id = 116,
                            ExternalDiameterLowerFlangeM = 4.494m,
                            ExternalDiameterUpperFlangeM = 3.9607m,
                            SectionHeightM = 25.897m,
                            SectionNumber = 3,
                            TotalWeightKg = 49500.9413m,
                            TowerTypeId = 36
                        },
                        new
                        {
                            Id = 117,
                            ExternalDiameterLowerFlangeM = 3.9607m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 25.08m,
                            SectionNumber = 4,
                            TotalWeightKg = 42970.7592m,
                            TowerTypeId = 36
                        },
                        new
                        {
                            Id = 118,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.4987m,
                            SectionHeightM = 17.94m,
                            SectionNumber = 1,
                            TotalWeightKg = 63177.67835m,
                            TowerTypeId = 37
                        },
                        new
                        {
                            Id = 119,
                            ExternalDiameterLowerFlangeM = 4.4987m,
                            ExternalDiameterUpperFlangeM = 4.4933m,
                            SectionHeightM = 24.535m,
                            SectionNumber = 2,
                            TotalWeightKg = 60834.11439m,
                            TowerTypeId = 37
                        },
                        new
                        {
                            Id = 120,
                            ExternalDiameterLowerFlangeM = 4.4933m,
                            ExternalDiameterUpperFlangeM = 3.9677m,
                            SectionHeightM = 25.897m,
                            SectionNumber = 3,
                            TotalWeightKg = 48339.37474m,
                            TowerTypeId = 37
                        },
                        new
                        {
                            Id = 121,
                            ExternalDiameterLowerFlangeM = 3.9677m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 25.12m,
                            SectionNumber = 4,
                            TotalWeightKg = 42060.18971m,
                            TowerTypeId = 37
                        },
                        new
                        {
                            Id = 122,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.4265m,
                            SectionHeightM = 19.245m,
                            SectionNumber = 1,
                            TotalWeightKg = 72204.09538m,
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 123,
                            ExternalDiameterLowerFlangeM = 4.4265m,
                            ExternalDiameterUpperFlangeM = 4.422m,
                            SectionHeightM = 21.115m,
                            SectionNumber = 2,
                            TotalWeightKg = 56613.2646m,
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 124,
                            ExternalDiameterLowerFlangeM = 4.422m,
                            ExternalDiameterUpperFlangeM = 4.017m,
                            SectionHeightM = 26.29m,
                            SectionNumber = 3,
                            TotalWeightKg = 53955.87303m,
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 125,
                            ExternalDiameterLowerFlangeM = 4.017m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 28.85m,
                            SectionNumber = 4,
                            TotalWeightKg = 49483.72412m,
                            TowerTypeId = 38
                        },
                        new
                        {
                            Id = 126,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.4243m,
                            SectionHeightM = 19.22m,
                            SectionNumber = 1,
                            TotalWeightKg = 66305.38244m,
                            TowerTypeId = 39
                        },
                        new
                        {
                            Id = 127,
                            ExternalDiameterLowerFlangeM = 4.4243m,
                            ExternalDiameterUpperFlangeM = 4.4195m,
                            SectionHeightM = 21.09m,
                            SectionNumber = 2,
                            TotalWeightKg = 53794.85m,
                            TowerTypeId = 39
                        },
                        new
                        {
                            Id = 128,
                            ExternalDiameterLowerFlangeM = 4.4195m,
                            ExternalDiameterUpperFlangeM = 4.0159m,
                            SectionHeightM = 26.29m,
                            SectionNumber = 3,
                            TotalWeightKg = 51346.75m,
                            TowerTypeId = 39
                        },
                        new
                        {
                            Id = 129,
                            ExternalDiameterLowerFlangeM = 4.0159m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 28.9m,
                            SectionNumber = 4,
                            TotalWeightKg = 47361.9m,
                            TowerTypeId = 39
                        },
                        new
                        {
                            Id = 130,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.605m,
                            SectionHeightM = 13.51m,
                            SectionNumber = 1,
                            TotalWeightKg = 78578.24817m,
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 131,
                            ExternalDiameterLowerFlangeM = 4.605m,
                            ExternalDiameterUpperFlangeM = 4.4325m,
                            SectionHeightM = 17.595m,
                            SectionNumber = 2,
                            TotalWeightKg = 75005.04416m,
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 132,
                            ExternalDiameterLowerFlangeM = 4.4325m,
                            ExternalDiameterUpperFlangeM = 4.429m,
                            SectionHeightM = 19.975m,
                            SectionNumber = 3,
                            TotalWeightKg = 70675.24599m,
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 133,
                            ExternalDiameterLowerFlangeM = 4.429m,
                            ExternalDiameterUpperFlangeM = 4.125m,
                            SectionHeightM = 22.98m,
                            SectionNumber = 4,
                            TotalWeightKg = 66182.01807m,
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 134,
                            ExternalDiameterLowerFlangeM = 4.125m,
                            ExternalDiameterUpperFlangeM = 3.819m,
                            SectionHeightM = 24.44m,
                            SectionNumber = 5,
                            TotalWeightKg = 53371.02196m,
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 135,
                            ExternalDiameterLowerFlangeM = 3.819m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 6,
                            TotalWeightKg = 47561.01111m,
                            TowerTypeId = 40
                        },
                        new
                        {
                            Id = 136,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.586m,
                            SectionHeightM = 13.515m,
                            SectionNumber = 1,
                            TotalWeightKg = 74860.92633m,
                            TowerTypeId = 41
                        },
                        new
                        {
                            Id = 137,
                            ExternalDiameterLowerFlangeM = 4.586m,
                            ExternalDiameterUpperFlangeM = 4.43m,
                            SectionHeightM = 17.595m,
                            SectionNumber = 2,
                            TotalWeightKg = 69161.63496m,
                            TowerTypeId = 41
                        },
                        new
                        {
                            Id = 138,
                            ExternalDiameterLowerFlangeM = 4.43m,
                            ExternalDiameterUpperFlangeM = 4.4255m,
                            SectionHeightM = 19.97m,
                            SectionNumber = 3,
                            TotalWeightKg = 65240.65623m,
                            TowerTypeId = 41
                        },
                        new
                        {
                            Id = 139,
                            ExternalDiameterLowerFlangeM = 4.4255m,
                            ExternalDiameterUpperFlangeM = 4.1235m,
                            SectionHeightM = 22.98m,
                            SectionNumber = 4,
                            TotalWeightKg = 62727.63006m,
                            TowerTypeId = 41
                        },
                        new
                        {
                            Id = 140,
                            ExternalDiameterLowerFlangeM = 4.1235m,
                            ExternalDiameterUpperFlangeM = 3.819m,
                            SectionHeightM = 24.44m,
                            SectionNumber = 5,
                            TotalWeightKg = 53089.93662m,
                            TowerTypeId = 41
                        },
                        new
                        {
                            Id = 141,
                            ExternalDiameterLowerFlangeM = 3.819m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 6,
                            TotalWeightKg = 47561.01111m,
                            TowerTypeId = 41
                        },
                        new
                        {
                            Id = 142,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.494m,
                            SectionHeightM = 10.005m,
                            SectionNumber = 1,
                            TotalWeightKg = 64431.91099m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 143,
                            ExternalDiameterLowerFlangeM = 4.494m,
                            ExternalDiameterUpperFlangeM = 4.491m,
                            SectionHeightM = 11.845m,
                            SectionNumber = 2,
                            TotalWeightKg = 60849.19624m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 144,
                            ExternalDiameterLowerFlangeM = 4.491m,
                            ExternalDiameterUpperFlangeM = 4.48m,
                            SectionHeightM = 15.095m,
                            SectionNumber = 3,
                            TotalWeightKg = 59554.11701m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 145,
                            ExternalDiameterLowerFlangeM = 4.48m,
                            ExternalDiameterUpperFlangeM = 4.4735m,
                            SectionHeightM = 18.55m,
                            SectionNumber = 4,
                            TotalWeightKg = 58358.59391m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 146,
                            ExternalDiameterLowerFlangeM = 4.4735m,
                            ExternalDiameterUpperFlangeM = 4.0915m,
                            SectionHeightM = 22.205m,
                            SectionNumber = 5,
                            TotalWeightKg = 56851.21807m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 147,
                            ExternalDiameterLowerFlangeM = 4.0915m,
                            ExternalDiameterUpperFlangeM = 3.8175m,
                            SectionHeightM = 24.8m,
                            SectionNumber = 6,
                            TotalWeightKg = 49843.74797m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 148,
                            ExternalDiameterLowerFlangeM = 3.8175m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 23m,
                            SectionNumber = 7,
                            TotalWeightKg = 38853.98782m,
                            TowerTypeId = 42
                        },
                        new
                        {
                            Id = 149,
                            ExternalDiameterLowerFlangeM = 4.78m,
                            ExternalDiameterUpperFlangeM = 4.732m,
                            SectionHeightM = 17m,
                            SectionNumber = 1,
                            TotalWeightKg = 78186.1698m,
                            TowerTypeId = 43
                        },
                        new
                        {
                            Id = 150,
                            ExternalDiameterLowerFlangeM = 4.732m,
                            ExternalDiameterUpperFlangeM = 4.725m,
                            SectionHeightM = 22.505m,
                            SectionNumber = 2,
                            TotalWeightKg = 76918.725m,
                            TowerTypeId = 43
                        },
                        new
                        {
                            Id = 151,
                            ExternalDiameterLowerFlangeM = 4.725m,
                            ExternalDiameterUpperFlangeM = 4.422m,
                            SectionHeightM = 25.995m,
                            SectionNumber = 3,
                            TotalWeightKg = 70815.575m,
                            TowerTypeId = 43
                        },
                        new
                        {
                            Id = 152,
                            ExternalDiameterLowerFlangeM = 4.422m,
                            ExternalDiameterUpperFlangeM = 3.917m,
                            SectionHeightM = 30m,
                            SectionNumber = 4,
                            TotalWeightKg = 63615.5m,
                            TowerTypeId = 43
                        },
                        new
                        {
                            Id = 153,
                            ExternalDiameterLowerFlangeM = 3.917m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 30m,
                            SectionNumber = 5,
                            TotalWeightKg = 49962.7m,
                            TowerTypeId = 43
                        },
                        new
                        {
                            Id = 154,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.655m,
                            SectionHeightM = 13.51m,
                            SectionNumber = 1,
                            TotalWeightKg = 68164.20629m,
                            TowerTypeId = 44
                        },
                        new
                        {
                            Id = 155,
                            ExternalDiameterLowerFlangeM = 4.655m,
                            ExternalDiameterUpperFlangeM = 4.49m,
                            SectionHeightM = 17.62m,
                            SectionNumber = 2,
                            TotalWeightKg = 65570.8144m,
                            TowerTypeId = 44
                        },
                        new
                        {
                            Id = 156,
                            ExternalDiameterLowerFlangeM = 4.49m,
                            ExternalDiameterUpperFlangeM = 4.4838m,
                            SectionHeightM = 19.955m,
                            SectionNumber = 3,
                            TotalWeightKg = 63115.49312m,
                            TowerTypeId = 44
                        },
                        new
                        {
                            Id = 157,
                            ExternalDiameterLowerFlangeM = 4.4838m,
                            ExternalDiameterUpperFlangeM = 4.2698m,
                            SectionHeightM = 22.98m,
                            SectionNumber = 4,
                            TotalWeightKg = 57992.59446m,
                            TowerTypeId = 44
                        },
                        new
                        {
                            Id = 158,
                            ExternalDiameterLowerFlangeM = 4.2698m,
                            ExternalDiameterUpperFlangeM = 3.9167m,
                            SectionHeightM = 24.4353m,
                            SectionNumber = 5,
                            TotalWeightKg = 47252.24584m,
                            TowerTypeId = 44
                        },
                        new
                        {
                            Id = 159,
                            ExternalDiameterLowerFlangeM = 3.9167m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 6,
                            TotalWeightKg = 44796.22285m,
                            TowerTypeId = 44
                        },
                        new
                        {
                            Id = 160,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.485m,
                            SectionHeightM = 10.005m,
                            SectionNumber = 1,
                            TotalWeightKg = 57739.07487m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 161,
                            ExternalDiameterLowerFlangeM = 4.485m,
                            ExternalDiameterUpperFlangeM = 4.486m,
                            SectionHeightM = 11.785m,
                            SectionNumber = 2,
                            TotalWeightKg = 52478.72825m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 162,
                            ExternalDiameterLowerFlangeM = 4.486m,
                            ExternalDiameterUpperFlangeM = 4.477m,
                            SectionHeightM = 15.095m,
                            SectionNumber = 3,
                            TotalWeightKg = 55293.63163m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 163,
                            ExternalDiameterLowerFlangeM = 4.477m,
                            ExternalDiameterUpperFlangeM = 4.4728m,
                            SectionHeightM = 18.568m,
                            SectionNumber = 4,
                            TotalWeightKg = 55508.35701m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 164,
                            ExternalDiameterLowerFlangeM = 4.4728m,
                            ExternalDiameterUpperFlangeM = 4.09m,
                            SectionHeightM = 22.205m,
                            SectionNumber = 5,
                            TotalWeightKg = 53404.64679m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 165,
                            ExternalDiameterLowerFlangeM = 4.09m,
                            ExternalDiameterUpperFlangeM = 3.8167m,
                            SectionHeightM = 24.845m,
                            SectionNumber = 6,
                            TotalWeightKg = 46081.92967m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 166,
                            ExternalDiameterLowerFlangeM = 3.8167m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 23m,
                            SectionNumber = 7,
                            TotalWeightKg = 37803.13065m,
                            TowerTypeId = 45
                        },
                        new
                        {
                            Id = 167,
                            ExternalDiameterLowerFlangeM = 4.67m,
                            ExternalDiameterUpperFlangeM = 4.424m,
                            SectionHeightM = 19.245m,
                            SectionNumber = 1,
                            TotalWeightKg = 66396.13345m,
                            TowerTypeId = 49
                        },
                        new
                        {
                            Id = 168,
                            ExternalDiameterLowerFlangeM = 4.424m,
                            ExternalDiameterUpperFlangeM = 4.42m,
                            SectionHeightM = 21.115m,
                            SectionNumber = 2,
                            TotalWeightKg = 53232.97105m,
                            TowerTypeId = 49
                        },
                        new
                        {
                            Id = 169,
                            ExternalDiameterLowerFlangeM = 4.42m,
                            ExternalDiameterUpperFlangeM = 4.017m,
                            SectionHeightM = 26.29m,
                            SectionNumber = 3,
                            TotalWeightKg = 50124.89976m,
                            TowerTypeId = 49
                        },
                        new
                        {
                            Id = 170,
                            ExternalDiameterLowerFlangeM = 4.017m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 28.85m,
                            SectionNumber = 4,
                            TotalWeightKg = 50785.57918m,
                            TowerTypeId = 49
                        },
                        new
                        {
                            Id = 171,
                            ExternalDiameterLowerFlangeM = 4.678m,
                            ExternalDiameterUpperFlangeM = 4.4365m,
                            SectionHeightM = 13.325m,
                            SectionNumber = 1,
                            TotalWeightKg = 70694.81269m,
                            TowerTypeId = 50
                        },
                        new
                        {
                            Id = 172,
                            ExternalDiameterLowerFlangeM = 4.4365m,
                            ExternalDiameterUpperFlangeM = 4.429m,
                            SectionHeightM = 18.18m,
                            SectionNumber = 2,
                            TotalWeightKg = 69609.4845m,
                            TowerTypeId = 50
                        },
                        new
                        {
                            Id = 173,
                            ExternalDiameterLowerFlangeM = 4.429m,
                            ExternalDiameterUpperFlangeM = 4.4215m,
                            SectionHeightM = 19.995m,
                            SectionNumber = 3,
                            TotalWeightKg = 57496.57436m,
                            TowerTypeId = 50
                        },
                        new
                        {
                            Id = 174,
                            ExternalDiameterLowerFlangeM = 4.4215m,
                            ExternalDiameterUpperFlangeM = 4.417m,
                            SectionHeightM = 27m,
                            SectionNumber = 4,
                            TotalWeightKg = 57571.48979m,
                            TowerTypeId = 50
                        },
                        new
                        {
                            Id = 175,
                            ExternalDiameterLowerFlangeM = 4.417m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 5,
                            TotalWeightKg = 49413.11914m,
                            TowerTypeId = 50
                        },
                        new
                        {
                            Id = 176,
                            ExternalDiameterLowerFlangeM = 5.275m,
                            ExternalDiameterUpperFlangeM = 5.03m,
                            SectionHeightM = 16.14m,
                            SectionNumber = 1,
                            TotalWeightKg = 70308.64683m,
                            TowerTypeId = 51
                        },
                        new
                        {
                            Id = 177,
                            ExternalDiameterLowerFlangeM = 5.03m,
                            ExternalDiameterUpperFlangeM = 4.7265m,
                            SectionHeightM = 17.47m,
                            SectionNumber = 2,
                            TotalWeightKg = 60646.93779m,
                            TowerTypeId = 51
                        },
                        new
                        {
                            Id = 178,
                            ExternalDiameterLowerFlangeM = 4.7265m,
                            ExternalDiameterUpperFlangeM = 4.423m,
                            SectionHeightM = 20.39m,
                            SectionNumber = 3,
                            TotalWeightKg = 56451.07113m,
                            TowerTypeId = 51
                        },
                        new
                        {
                            Id = 179,
                            ExternalDiameterLowerFlangeM = 4.423m,
                            ExternalDiameterUpperFlangeM = 4.0185m,
                            SectionHeightM = 24.5m,
                            SectionNumber = 4,
                            TotalWeightKg = 52302.8453m,
                            TowerTypeId = 51
                        },
                        new
                        {
                            Id = 180,
                            ExternalDiameterLowerFlangeM = 4.0185m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 5,
                            TotalWeightKg = 47416.38408m,
                            TowerTypeId = 51
                        },
                        new
                        {
                            Id = 181,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.4985m,
                            SectionHeightM = 10.77m,
                            SectionNumber = 1,
                            TotalWeightKg = 60904.05083m,
                            TowerTypeId = 52
                        },
                        new
                        {
                            Id = 182,
                            ExternalDiameterLowerFlangeM = 4.4985m,
                            ExternalDiameterUpperFlangeM = 4.4915m,
                            SectionHeightM = 14.805m,
                            SectionNumber = 2,
                            TotalWeightKg = 61914.27679m,
                            TowerTypeId = 52
                        },
                        new
                        {
                            Id = 183,
                            ExternalDiameterLowerFlangeM = 4.4915m,
                            ExternalDiameterUpperFlangeM = 4.4845m,
                            SectionHeightM = 15.165m,
                            SectionNumber = 3,
                            TotalWeightKg = 50659.15097m,
                            TowerTypeId = 52
                        },
                        new
                        {
                            Id = 184,
                            ExternalDiameterLowerFlangeM = 4.4845m,
                            ExternalDiameterUpperFlangeM = 4.22m,
                            SectionHeightM = 19.83m,
                            SectionNumber = 4,
                            TotalWeightKg = 49490.79417m,
                            TowerTypeId = 52
                        },
                        new
                        {
                            Id = 185,
                            ExternalDiameterLowerFlangeM = 4.22m,
                            ExternalDiameterUpperFlangeM = 4.217m,
                            SectionHeightM = 20.52m,
                            SectionNumber = 5,
                            TotalWeightKg = 41821.37454m,
                            TowerTypeId = 52
                        },
                        new
                        {
                            Id = 186,
                            ExternalDiameterLowerFlangeM = 4.217m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 24.41m,
                            SectionNumber = 6,
                            TotalWeightKg = 43525.62314m,
                            TowerTypeId = 52
                        },
                        new
                        {
                            Id = 187,
                            ExternalDiameterLowerFlangeM = 4.37m,
                            ExternalDiameterUpperFlangeM = 4.137m,
                            SectionHeightM = 16.26m,
                            SectionNumber = 1,
                            TotalWeightKg = 73532.60208m,
                            TowerTypeId = 53
                        },
                        new
                        {
                            Id = 188,
                            ExternalDiameterLowerFlangeM = 4.137m,
                            ExternalDiameterUpperFlangeM = 4.13m,
                            SectionHeightM = 19.255m,
                            SectionNumber = 2,
                            TotalWeightKg = 66685.47842m,
                            TowerTypeId = 53
                        },
                        new
                        {
                            Id = 189,
                            ExternalDiameterLowerFlangeM = 4.13m,
                            ExternalDiameterUpperFlangeM = 4.122m,
                            SectionHeightM = 24.095m,
                            SectionNumber = 3,
                            TotalWeightKg = 65523.30707m,
                            TowerTypeId = 53
                        },
                        new
                        {
                            Id = 190,
                            ExternalDiameterLowerFlangeM = 4.122m,
                            ExternalDiameterUpperFlangeM = 4.017m,
                            SectionHeightM = 26.8m,
                            SectionNumber = 4,
                            TotalWeightKg = 52699.58362m,
                            TowerTypeId = 53
                        },
                        new
                        {
                            Id = 191,
                            ExternalDiameterLowerFlangeM = 4.017m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 29.09m,
                            SectionNumber = 5,
                            TotalWeightKg = 51164.78652m,
                            TowerTypeId = 53
                        },
                        new
                        {
                            Id = 192,
                            ExternalDiameterLowerFlangeM = 4.3m,
                            ExternalDiameterUpperFlangeM = 4.296m,
                            SectionHeightM = 15.77m,
                            SectionNumber = 1,
                            TotalWeightKg = 54828.26892m,
                            TowerTypeId = 54
                        },
                        new
                        {
                            Id = 193,
                            ExternalDiameterLowerFlangeM = 4.296m,
                            ExternalDiameterUpperFlangeM = 4.287m,
                            SectionHeightM = 28.82m,
                            SectionNumber = 2,
                            TotalWeightKg = 71675.36935m,
                            TowerTypeId = 54
                        },
                        new
                        {
                            Id = 194,
                            ExternalDiameterLowerFlangeM = 4.287m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 32.42m,
                            SectionNumber = 3,
                            TotalWeightKg = 59248.25671m,
                            TowerTypeId = 54
                        },
                        new
                        {
                            Id = 195,
                            ExternalDiameterLowerFlangeM = 4.424m,
                            ExternalDiameterUpperFlangeM = 3.918m,
                            SectionHeightM = 27m,
                            SectionNumber = 1,
                            TotalWeightKg = 58359.71859m,
                            TowerTypeId = 55
                        },
                        new
                        {
                            Id = 196,
                            ExternalDiameterLowerFlangeM = 3.918m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 27m,
                            SectionNumber = 2,
                            TotalWeightKg = 45195.8603m,
                            TowerTypeId = 55
                        },
                        new
                        {
                            Id = 197,
                            ExternalDiameterLowerFlangeM = 4.278m,
                            ExternalDiameterUpperFlangeM = 4.032m,
                            SectionHeightM = 16.62m,
                            SectionNumber = 1,
                            TotalWeightKg = 68538.15272m,
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 198,
                            ExternalDiameterLowerFlangeM = 4.032m,
                            ExternalDiameterUpperFlangeM = 4.023m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 2,
                            TotalWeightKg = 59192.00487m,
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 199,
                            ExternalDiameterLowerFlangeM = 4.023m,
                            ExternalDiameterUpperFlangeM = 3.617m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 3,
                            TotalWeightKg = 42107.85517m,
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 200,
                            ExternalDiameterLowerFlangeM = 3.617m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 23.74m,
                            SectionNumber = 4,
                            TotalWeightKg = 41590.64545m,
                            TowerTypeId = 56
                        },
                        new
                        {
                            Id = 201,
                            ExternalDiameterLowerFlangeM = 4.278m,
                            ExternalDiameterUpperFlangeM = 4.0302m,
                            SectionHeightM = 16.62m,
                            SectionNumber = 1,
                            TotalWeightKg = 64077.2m,
                            TowerTypeId = 57
                        },
                        new
                        {
                            Id = 202,
                            ExternalDiameterLowerFlangeM = 4.0302m,
                            ExternalDiameterUpperFlangeM = 4.0215m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 2,
                            TotalWeightKg = 54284.1m,
                            TowerTypeId = 57
                        },
                        new
                        {
                            Id = 203,
                            ExternalDiameterLowerFlangeM = 4.0215m,
                            ExternalDiameterUpperFlangeM = 3.6174m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 3,
                            TotalWeightKg = 39652.4m,
                            TowerTypeId = 57
                        },
                        new
                        {
                            Id = 204,
                            ExternalDiameterLowerFlangeM = 3.6174m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 23.74m,
                            SectionNumber = 4,
                            TotalWeightKg = 39427.1m,
                            TowerTypeId = 57
                        },
                        new
                        {
                            Id = 205,
                            ExternalDiameterLowerFlangeM = 4.678m,
                            ExternalDiameterUpperFlangeM = 4.645m,
                            SectionHeightM = 16.62m,
                            SectionNumber = 1,
                            TotalWeightKg = 77484.48261m,
                            TowerTypeId = 59
                        },
                        new
                        {
                            Id = 206,
                            ExternalDiameterLowerFlangeM = 4.645m,
                            ExternalDiameterUpperFlangeM = 4.427m,
                            SectionHeightM = 20.54m,
                            SectionNumber = 2,
                            TotalWeightKg = 71489.07045m,
                            TowerTypeId = 59
                        },
                        new
                        {
                            Id = 207,
                            ExternalDiameterLowerFlangeM = 4.427m,
                            ExternalDiameterUpperFlangeM = 4.4205m,
                            SectionHeightM = 20.82m,
                            SectionNumber = 3,
                            TotalWeightKg = 56712.35986m,
                            TowerTypeId = 59
                        },
                        new
                        {
                            Id = 208,
                            ExternalDiameterLowerFlangeM = 4.4205m,
                            ExternalDiameterUpperFlangeM = 4.015m,
                            SectionHeightM = 22.78m,
                            SectionNumber = 4,
                            TotalWeightKg = 45698.19196m,
                            TowerTypeId = 59
                        },
                        new
                        {
                            Id = 209,
                            ExternalDiameterLowerFlangeM = 4.015m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 23.74m,
                            SectionNumber = 5,
                            TotalWeightKg = 40953.09284m,
                            TowerTypeId = 59
                        },
                        new
                        {
                            Id = 210,
                            ExternalDiameterLowerFlangeM = 4.25m,
                            ExternalDiameterUpperFlangeM = 4.02m,
                            SectionHeightM = 23.1m,
                            SectionNumber = 1,
                            TotalWeightKg = 61411.14495m,
                            TowerTypeId = 60
                        },
                        new
                        {
                            Id = 211,
                            ExternalDiameterLowerFlangeM = 4.02m,
                            ExternalDiameterUpperFlangeM = 3.3665m,
                            SectionHeightM = 29.4m,
                            SectionNumber = 2,
                            TotalWeightKg = 51510.28599m,
                            TowerTypeId = 60
                        },
                        new
                        {
                            Id = 212,
                            ExternalDiameterLowerFlangeM = 3.3665m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 29.5m,
                            SectionNumber = 3,
                            TotalWeightKg = 43501.53589m,
                            TowerTypeId = 60
                        },
                        new
                        {
                            Id = 213,
                            ExternalDiameterLowerFlangeM = 4.49m,
                            ExternalDiameterUpperFlangeM = 4.2425m,
                            SectionHeightM = 20.12m,
                            SectionNumber = 1,
                            TotalWeightKg = 59540.33194m,
                            TowerTypeId = 61
                        },
                        new
                        {
                            Id = 214,
                            ExternalDiameterLowerFlangeM = 4.2425m,
                            ExternalDiameterUpperFlangeM = 3.599m,
                            SectionHeightM = 26.88m,
                            SectionNumber = 2,
                            TotalWeightKg = 53858.94948m,
                            TowerTypeId = 61
                        },
                        new
                        {
                            Id = 215,
                            ExternalDiameterLowerFlangeM = 3.599m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 35m,
                            SectionNumber = 3,
                            TotalWeightKg = 54381.29081m,
                            TowerTypeId = 61
                        },
                        new
                        {
                            Id = 216,
                            ExternalDiameterLowerFlangeM = 4.678m,
                            ExternalDiameterUpperFlangeM = 4.43m,
                            SectionHeightM = 16.26m,
                            SectionNumber = 1,
                            TotalWeightKg = 67400.6562m,
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 217,
                            ExternalDiameterLowerFlangeM = 4.43m,
                            ExternalDiameterUpperFlangeM = 4.422m,
                            SectionHeightM = 18.155m,
                            SectionNumber = 2,
                            TotalWeightKg = 54725.375m,
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 218,
                            ExternalDiameterLowerFlangeM = 4.422m,
                            ExternalDiameterUpperFlangeM = 4.4185m,
                            SectionHeightM = 21.1m,
                            SectionNumber = 3,
                            TotalWeightKg = 49666.6m,
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 219,
                            ExternalDiameterLowerFlangeM = 4.4185m,
                            ExternalDiameterUpperFlangeM = 3.928m,
                            SectionHeightM = 23.14m,
                            SectionNumber = 4,
                            TotalWeightKg = 44320.3m,
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 220,
                            ExternalDiameterLowerFlangeM = 3.928m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 27.345m,
                            SectionNumber = 5,
                            TotalWeightKg = 44460.825m,
                            TowerTypeId = 62
                        },
                        new
                        {
                            Id = 221,
                            ExternalDiameterLowerFlangeM = 4.678m,
                            ExternalDiameterUpperFlangeM = 4.436m,
                            SectionHeightM = 16.945m,
                            SectionNumber = 1,
                            TotalWeightKg = 83749.99945m,
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 222,
                            ExternalDiameterLowerFlangeM = 4.436m,
                            ExternalDiameterUpperFlangeM = 4.427m,
                            SectionHeightM = 20.94m,
                            SectionNumber = 2,
                            TotalWeightKg = 76993.39156m,
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 223,
                            ExternalDiameterLowerFlangeM = 4.427m,
                            ExternalDiameterUpperFlangeM = 4.422m,
                            SectionHeightM = 21.115m,
                            SectionNumber = 3,
                            TotalWeightKg = 58383.45318m,
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 224,
                            ExternalDiameterLowerFlangeM = 4.422m,
                            ExternalDiameterUpperFlangeM = 3.928m,
                            SectionHeightM = 24m,
                            SectionNumber = 4,
                            TotalWeightKg = 50004.9526m,
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 225,
                            ExternalDiameterLowerFlangeM = 3.928m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 29m,
                            SectionNumber = 5,
                            TotalWeightKg = 48491.1258m,
                            TowerTypeId = 63
                        },
                        new
                        {
                            Id = 226,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.675m,
                            SectionHeightM = 14.685m,
                            SectionNumber = 1,
                            TotalWeightKg = 79873.20659m,
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 227,
                            ExternalDiameterLowerFlangeM = 4.675m,
                            ExternalDiameterUpperFlangeM = 4.4335m,
                            SectionHeightM = 18.805m,
                            SectionNumber = 2,
                            TotalWeightKg = 75629.55202m,
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 228,
                            ExternalDiameterLowerFlangeM = 4.4335m,
                            ExternalDiameterUpperFlangeM = 4.131m,
                            SectionHeightM = 20.33m,
                            SectionNumber = 3,
                            TotalWeightKg = 71395.49988m,
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 229,
                            ExternalDiameterLowerFlangeM = 4.131m,
                            ExternalDiameterUpperFlangeM = 3.712m,
                            SectionHeightM = 22.86m,
                            SectionNumber = 4,
                            TotalWeightKg = 69970.78626m,
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 230,
                            ExternalDiameterLowerFlangeM = 3.712m,
                            ExternalDiameterUpperFlangeM = 3.3725m,
                            SectionHeightM = 25.82m,
                            SectionNumber = 5,
                            TotalWeightKg = 69651.0651m,
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 231,
                            ExternalDiameterLowerFlangeM = 3.3725m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 29.5m,
                            SectionNumber = 6,
                            TotalWeightKg = 48927.54285m,
                            TowerTypeId = 64
                        },
                        new
                        {
                            Id = 232,
                            ExternalDiameterLowerFlangeM = 4.278m,
                            ExternalDiameterUpperFlangeM = 4.031m,
                            SectionHeightM = 16.615m,
                            SectionNumber = 1,
                            TotalWeightKg = 66996.79879m,
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 233,
                            ExternalDiameterLowerFlangeM = 4.031m,
                            ExternalDiameterUpperFlangeM = 4.024m,
                            SectionHeightM = 20.92m,
                            SectionNumber = 2,
                            TotalWeightKg = 58746.20803m,
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 234,
                            ExternalDiameterLowerFlangeM = 4.024m,
                            ExternalDiameterUpperFlangeM = 4.017m,
                            SectionHeightM = 20.935m,
                            SectionNumber = 3,
                            TotalWeightKg = 43002.44479m,
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 235,
                            ExternalDiameterLowerFlangeM = 4.017m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 23.53m,
                            SectionNumber = 4,
                            TotalWeightKg = 42467.52242m,
                            TowerTypeId = 65
                        },
                        new
                        {
                            Id = 236,
                            ExternalDiameterLowerFlangeM = 4.27m,
                            ExternalDiameterUpperFlangeM = 4.0225m,
                            SectionHeightM = 29.75m,
                            SectionNumber = 1,
                            TotalWeightKg = 84879m,
                            TowerTypeId = 66
                        },
                        new
                        {
                            Id = 237,
                            ExternalDiameterLowerFlangeM = 4.0225m,
                            ExternalDiameterUpperFlangeM = 3.598m,
                            SectionHeightM = 30m,
                            SectionNumber = 2,
                            TotalWeightKg = 58971m,
                            TowerTypeId = 66
                        },
                        new
                        {
                            Id = 238,
                            ExternalDiameterLowerFlangeM = 3.598m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 32.25m,
                            SectionNumber = 3,
                            TotalWeightKg = 48381.3m,
                            TowerTypeId = 66
                        },
                        new
                        {
                            Id = 239,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.435m,
                            SectionHeightM = 20m,
                            SectionNumber = 1,
                            TotalWeightKg = 70751.6173m,
                            TowerTypeId = 67
                        },
                        new
                        {
                            Id = 240,
                            ExternalDiameterLowerFlangeM = 4.435m,
                            ExternalDiameterUpperFlangeM = 4.25m,
                            SectionHeightM = 20m,
                            SectionNumber = 2,
                            TotalWeightKg = 52473.66552m,
                            TowerTypeId = 67
                        },
                        new
                        {
                            Id = 241,
                            ExternalDiameterLowerFlangeM = 4.25m,
                            ExternalDiameterUpperFlangeM = 3.598m,
                            SectionHeightM = 27m,
                            SectionNumber = 3,
                            TotalWeightKg = 49109.34244m,
                            TowerTypeId = 67
                        },
                        new
                        {
                            Id = 242,
                            ExternalDiameterLowerFlangeM = 3.598m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 31.383m,
                            SectionNumber = 4,
                            TotalWeightKg = 47074.99878m,
                            TowerTypeId = 67
                        },
                        new
                        {
                            Id = 243,
                            ExternalDiameterLowerFlangeM = 4.5m,
                            ExternalDiameterUpperFlangeM = 4.281m,
                            SectionHeightM = 18.58m,
                            SectionNumber = 1,
                            TotalWeightKg = 80926.8656m,
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 244,
                            ExternalDiameterLowerFlangeM = 4.281m,
                            ExternalDiameterUpperFlangeM = 4.275m,
                            SectionHeightM = 24.18m,
                            SectionNumber = 2,
                            TotalWeightKg = 76535.21842m,
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 245,
                            ExternalDiameterLowerFlangeM = 4.275m,
                            ExternalDiameterUpperFlangeM = 4.27m,
                            SectionHeightM = 26.42m,
                            SectionNumber = 3,
                            TotalWeightKg = 64327.8424m,
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 246,
                            ExternalDiameterLowerFlangeM = 4.27m,
                            ExternalDiameterUpperFlangeM = 4.267m,
                            SectionHeightM = 26.98m,
                            SectionNumber = 4,
                            TotalWeightKg = 50409.55414m,
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 247,
                            ExternalDiameterLowerFlangeM = 4.267m,
                            ExternalDiameterUpperFlangeM = 3.395m,
                            SectionHeightM = 29.34m,
                            SectionNumber = 5,
                            TotalWeightKg = 48333.66421m,
                            TowerTypeId = 68
                        },
                        new
                        {
                            Id = 248,
                            ExternalDiameterLowerFlangeM = 4.68m,
                            ExternalDiameterUpperFlangeM = 4.4297m,
                            SectionHeightM = 19.465m,
                            SectionNumber = 1,
                            TotalWeightKg = 79304.22078m,
                            TowerTypeId = 69
                        },
                        new
                        {
                            Id = 249,
                            ExternalDiameterLowerFlangeM = 4.4297m,
                            ExternalDiameterUpperFlangeM = 4.4222m,
                            SectionHeightM = 24.09m,
                            SectionNumber = 2,
                            TotalWeightKg = 70365.09743m,
                            TowerTypeId = 69
                        },
                        new
                        {
                            Id = 250,
                            ExternalDiameterLowerFlangeM = 4.4222m,
                            ExternalDiameterUpperFlangeM = 4.0182m,
                            SectionHeightM = 27.46m,
                            SectionNumber = 3,
                            TotalWeightKg = 59567.71121m,
                            TowerTypeId = 69
                        },
                        new
                        {
                            Id = 251,
                            ExternalDiameterLowerFlangeM = 4.0182m,
                            ExternalDiameterUpperFlangeM = 3.503m,
                            SectionHeightM = 29.485m,
                            SectionNumber = 4,
                            TotalWeightKg = 52736.5238m,
                            TowerTypeId = 69
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSupplierRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("InterfaceToolsId")
                        .HasColumnType("integer")
                        .HasColumnName("interface_tools_id");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("region_id");

                    b.Property<string>("RegionName")
                        .HasColumnType("text")
                        .HasColumnName("region_name");

                    b.HasKey("Id")
                        .HasName("pk_tower_supplier_regions");

                    b.HasIndex("InterfaceToolsId")
                        .HasDatabaseName("ix_tower_supplier_regions_interface_tools_id");

                    b.HasIndex("RegionId")
                        .HasDatabaseName("ix_tower_supplier_regions_region_id");

                    b.ToTable("tower_supplier_regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterfaceToolsId = 1,
                            RegionId = 1,
                            RegionName = "APAC"
                        },
                        new
                        {
                            Id = 2,
                            InterfaceToolsId = 1,
                            RegionId = 2,
                            RegionName = "BRA"
                        },
                        new
                        {
                            Id = 3,
                            InterfaceToolsId = 1,
                            RegionId = 3,
                            RegionName = "IN"
                        },
                        new
                        {
                            Id = 4,
                            InterfaceToolsId = 1,
                            RegionId = 4,
                            RegionName = "LATAM"
                        },
                        new
                        {
                            Id = 5,
                            InterfaceToolsId = 1,
                            RegionId = 6,
                            RegionName = "NA"
                        },
                        new
                        {
                            Id = 6,
                            InterfaceToolsId = 1,
                            RegionId = 5,
                            RegionName = "NEME"
                        },
                        new
                        {
                            Id = 7,
                            InterfaceToolsId = 1,
                            RegionId = 7,
                            RegionName = "SEA"
                        },
                        new
                        {
                            Id = 8,
                            InterfaceToolsId = 2,
                            RegionId = 5,
                            RegionName = "EUROPE"
                        },
                        new
                        {
                            Id = 9,
                            InterfaceToolsId = 2,
                            RegionId = 1,
                            RegionName = "APAC"
                        },
                        new
                        {
                            Id = 10,
                            InterfaceToolsId = 3,
                            RegionId = 1,
                            RegionName = "China"
                        },
                        new
                        {
                            Id = 11,
                            InterfaceToolsId = 3,
                            RegionId = 2,
                            RegionName = "BRAZIL"
                        },
                        new
                        {
                            Id = 12,
                            InterfaceToolsId = 3,
                            RegionId = 3,
                            RegionName = "INDIA"
                        },
                        new
                        {
                            Id = 13,
                            InterfaceToolsId = 3,
                            RegionId = 4,
                            RegionName = "LATAM"
                        },
                        new
                        {
                            Id = 14,
                            InterfaceToolsId = 3,
                            RegionId = 6,
                            RegionName = "NA"
                        },
                        new
                        {
                            Id = 15,
                            InterfaceToolsId = 3,
                            RegionId = 5,
                            RegionName = "NEME"
                        },
                        new
                        {
                            Id = 16,
                            InterfaceToolsId = 3,
                            RegionId = 7,
                            RegionName = "SE&A"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSupplierSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("SourcingName")
                        .HasColumnType("text")
                        .HasColumnName("sourcing_name");

                    b.Property<int>("TowerSupplierRegionId")
                        .HasColumnType("integer")
                        .HasColumnName("tower_supplier_region_id");

                    b.HasKey("Id")
                        .HasName("pk_tower_supplier_sources");

                    b.HasIndex("TowerSupplierRegionId")
                        .HasDatabaseName("ix_tower_supplier_sources_tower_supplier_region_id");

                    b.ToTable("tower_supplier_sources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SourcingName = "China",
                            TowerSupplierRegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            SourcingName = "Indonesia (Kenertec)",
                            TowerSupplierRegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            SourcingName = "Vietnam (CS WIND)",
                            TowerSupplierRegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            SourcingName = "Brazil",
                            TowerSupplierRegionId = 2
                        },
                        new
                        {
                            Id = 5,
                            SourcingName = "India - GJ",
                            TowerSupplierRegionId = 3
                        },
                        new
                        {
                            Id = 6,
                            SourcingName = "India - MH",
                            TowerSupplierRegionId = 3
                        },
                        new
                        {
                            Id = 7,
                            SourcingName = "India - TN",
                            TowerSupplierRegionId = 3
                        },
                        new
                        {
                            Id = 8,
                            SourcingName = "Mexico - East",
                            TowerSupplierRegionId = 4
                        },
                        new
                        {
                            Id = 9,
                            SourcingName = "Mexico - North",
                            TowerSupplierRegionId = 4
                        },
                        new
                        {
                            Id = 10,
                            SourcingName = "USA - North",
                            TowerSupplierRegionId = 5
                        },
                        new
                        {
                            Id = 11,
                            SourcingName = "USA - South",
                            TowerSupplierRegionId = 5
                        },
                        new
                        {
                            Id = 12,
                            SourcingName = "Denmark (Valmont SM)",
                            TowerSupplierRegionId = 6
                        },
                        new
                        {
                            Id = 13,
                            SourcingName = "Poland (GSG)",
                            TowerSupplierRegionId = 6
                        },
                        new
                        {
                            Id = 14,
                            SourcingName = "Turkey",
                            TowerSupplierRegionId = 6
                        },
                        new
                        {
                            Id = 15,
                            SourcingName = "Egypt (NSF)",
                            TowerSupplierRegionId = 7
                        },
                        new
                        {
                            Id = 16,
                            SourcingName = "Egypt (SIAG)",
                            TowerSupplierRegionId = 7
                        },
                        new
                        {
                            Id = 17,
                            SourcingName = "Greece (EMEK)",
                            TowerSupplierRegionId = 7
                        },
                        new
                        {
                            Id = 18,
                            SourcingName = "Italy (Pugliese)",
                            TowerSupplierRegionId = 7
                        },
                        new
                        {
                            Id = 19,
                            SourcingName = "Spain/Portugal",
                            TowerSupplierRegionId = 7
                        },
                        new
                        {
                            Id = 20,
                            SourcingName = "SPAIN",
                            TowerSupplierRegionId = 8
                        },
                        new
                        {
                            Id = 21,
                            SourcingName = "DENMARK",
                            TowerSupplierRegionId = 8
                        },
                        new
                        {
                            Id = 22,
                            SourcingName = "ITALY",
                            TowerSupplierRegionId = 8
                        },
                        new
                        {
                            Id = 23,
                            SourcingName = "CHINA",
                            TowerSupplierRegionId = 9
                        },
                        new
                        {
                            Id = 24,
                            SourcingName = "VIETNAM",
                            TowerSupplierRegionId = 9
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("HubHeightM")
                        .HasColumnType("numeric")
                        .HasColumnName("hub_height_m");

                    b.Property<string>("Tower")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("tower");

                    b.Property<int>("WtgCatalogueId")
                        .HasColumnType("integer")
                        .HasColumnName("wtg_catalogue_id");

                    b.HasKey("Id")
                        .HasName("pk_tower_types");

                    b.HasIndex("WtgCatalogueId")
                        .HasDatabaseName("ix_tower_types_wtg_catalogue_id");

                    b.ToTable("tower_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HubHeightM = 115m,
                            Tower = "T115-50A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 2,
                            HubHeightM = 135m,
                            Tower = "T135-50A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 3,
                            HubHeightM = 102.5m,
                            Tower = "T102.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 4,
                            HubHeightM = 122.5m,
                            Tower = "T122.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 5,
                            HubHeightM = 79.5m,
                            Tower = "T79.5.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 6,
                            HubHeightM = 90m,
                            Tower = "T90.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 7,
                            HubHeightM = 102.5m,
                            Tower = "T102.5.42",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 8,
                            HubHeightM = 102.5m,
                            Tower = "T102.5.43",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 9,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.40L2",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 10,
                            HubHeightM = 157.5m,
                            Tower = "T157.5.40L2",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 11,
                            HubHeightM = 84m,
                            Tower = "T84.41",
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 12,
                            HubHeightM = 84m,
                            Tower = "T84.36",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 13,
                            HubHeightM = 97m,
                            Tower = "T97.31",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 14,
                            HubHeightM = 101.5m,
                            Tower = "T101.5.31",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 15,
                            HubHeightM = 100m,
                            Tower = "T100-51A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 16,
                            HubHeightM = 101.5m,
                            Tower = "T101.5-50A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 17,
                            HubHeightM = 115m,
                            Tower = "T115-51A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 18,
                            HubHeightM = 115m,
                            Tower = "T115-52A-WTC",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 19,
                            HubHeightM = 135m,
                            Tower = "T135-51A-WTC",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 20,
                            HubHeightM = 145m,
                            Tower = "T145-50A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 21,
                            HubHeightM = 155m,
                            Tower = "T155-50A",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 22,
                            HubHeightM = 165m,
                            Tower = "T165-51A-MB",
                            WtgCatalogueId = 1
                        },
                        new
                        {
                            Id = 23,
                            HubHeightM = 90m,
                            Tower = "T90-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 24,
                            HubHeightM = 102.5m,
                            Tower = "T102.5-51A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 25,
                            HubHeightM = 107.5m,
                            Tower = "T107.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 26,
                            HubHeightM = 113.5m,
                            Tower = "T113.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 27,
                            HubHeightM = 117.5m,
                            Tower = "T117.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 28,
                            HubHeightM = 120.5m,
                            Tower = "T120.5-50A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 29,
                            HubHeightM = 122.5m,
                            Tower = "T122.5-51A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 30,
                            HubHeightM = 122.5m,
                            Tower = "T122.5-52A",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 31,
                            HubHeightM = 122.5m,
                            Tower = "T122.5-53A-WTC",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 32,
                            HubHeightM = 165m,
                            Tower = "T165-50A-MB",
                            WtgCatalogueId = 2
                        },
                        new
                        {
                            Id = 33,
                            HubHeightM = 90m,
                            Tower = "T90.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 34,
                            HubHeightM = 91m,
                            Tower = "T91.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 35,
                            HubHeightM = 91m,
                            Tower = "T91.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 36,
                            HubHeightM = 95.5m,
                            Tower = "T95.5.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 37,
                            HubHeightM = 95.5m,
                            Tower = "T95.5.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 38,
                            HubHeightM = 97.5m,
                            Tower = "T97.5.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 39,
                            HubHeightM = 97.5m,
                            Tower = "T97.5.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 40,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 41,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 42,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.43",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 43,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.44",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 44,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.45",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 45,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.46",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 46,
                            HubHeightM = 86m,
                            Tower = "T86.40L1",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 47,
                            HubHeightM = 90m,
                            Tower = "T90.40L1",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 48,
                            HubHeightM = 90m,
                            Tower = "T90.40L2",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 49,
                            HubHeightM = 97.5m,
                            Tower = "T97.5.40L2",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 50,
                            HubHeightM = 107.5m,
                            Tower = "T107.5.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 51,
                            HubHeightM = 107.5m,
                            Tower = "T107.5.41",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 52,
                            HubHeightM = 107.5m,
                            Tower = "T107.5.42",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 53,
                            HubHeightM = 117.5m,
                            Tower = "T117.5.40L1",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 54,
                            HubHeightM = 144m,
                            Tower = "T144.41-MB",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 55,
                            HubHeightM = 165m,
                            Tower = "T165.40",
                            WtgCatalogueId = 3
                        },
                        new
                        {
                            Id = 56,
                            HubHeightM = 84m,
                            Tower = "T84.40",
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 57,
                            HubHeightM = 84m,
                            Tower = "T84.43",
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 58,
                            HubHeightM = 79m,
                            Tower = "T79.40",
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 59,
                            HubHeightM = 106.5m,
                            Tower = "T106.5.40",
                            WtgCatalogueId = 4
                        },
                        new
                        {
                            Id = 60,
                            HubHeightM = 84m,
                            Tower = "T84.39",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 61,
                            HubHeightM = 84m,
                            Tower = "T84.310",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 62,
                            HubHeightM = 108m,
                            Tower = "T108.30",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 63,
                            HubHeightM = 114m,
                            Tower = "T114.30",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 64,
                            HubHeightM = 134m,
                            Tower = "T134.30",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 65,
                            HubHeightM = 84m,
                            Tower = "T84.38",
                            WtgCatalogueId = 6
                        },
                        new
                        {
                            Id = 66,
                            HubHeightM = 94m,
                            Tower = "T94.31",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 67,
                            HubHeightM = 100.5m,
                            Tower = "T100.5.31",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 68,
                            HubHeightM = 127.5m,
                            Tower = "T127.5.31",
                            WtgCatalogueId = 5
                        },
                        new
                        {
                            Id = 69,
                            HubHeightM = 102.5m,
                            Tower = "T102.5.44",
                            WtgCatalogueId = 7
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteBevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("B1De")
                        .HasColumnType("numeric")
                        .HasColumnName("b1_de");

                    b.Property<string>("B1Detail")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("b1_detail");

                    b.Property<decimal?>("B1Di")
                        .HasColumnType("numeric")
                        .HasColumnName("b1_di");

                    b.Property<decimal?>("B1a")
                        .HasColumnType("numeric")
                        .HasColumnName("b1_a");

                    b.Property<decimal?>("B1r")
                        .HasColumnType("numeric")
                        .HasColumnName("b1_r");

                    b.Property<decimal?>("B2De")
                        .HasColumnType("numeric")
                        .HasColumnName("b2_de");

                    b.Property<string>("B2Detail")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("b2_detail");

                    b.Property<decimal?>("B2Di")
                        .HasColumnType("numeric")
                        .HasColumnName("b2_di");

                    b.Property<decimal?>("B2a")
                        .HasColumnType("numeric")
                        .HasColumnName("b2_a");

                    b.Property<decimal?>("B2r")
                        .HasColumnType("numeric")
                        .HasColumnName("b2_r");

                    b.Property<decimal?>("B3De")
                        .HasColumnType("numeric")
                        .HasColumnName("b3_de");

                    b.Property<string>("B3Detail")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("b3_detail");

                    b.Property<decimal?>("B3Di")
                        .HasColumnType("numeric")
                        .HasColumnName("b3_di");

                    b.Property<decimal?>("B3a")
                        .HasColumnType("numeric")
                        .HasColumnName("b3_a");

                    b.Property<decimal?>("B3r")
                        .HasColumnType("numeric")
                        .HasColumnName("b3_r");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Mat")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("mat");

                    b.Property<string>("Pos")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("pos");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SectionNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_nr");

                    b.Property<string>("SectionType")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("section_type");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("T")
                        .HasColumnType("numeric")
                        .HasColumnName("t");

                    b.HasKey("Id")
                        .HasName("pk_towersite_bevel");

                    b.ToTable("towersite_bevel");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteCloeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int>("LifetimeYears")
                        .HasColumnType("integer")
                        .HasColumnName("lifetime_years");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("RnaLoadMargin")
                        .HasColumnType("numeric")
                        .HasColumnName("rna_load_margin");

                    b.Property<string>("RnaStatus")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("rna_status");

                    b.Property<string>("RnaStatusSimplified")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("rna_status_simplified");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<string>("WarningMessage")
                        .HasColumnType("text")
                        .HasColumnName("warning_message");

                    b.HasKey("Id")
                        .HasName("pk_towersite_cloe_report");

                    b.ToTable("towersite_cloe_report");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteFlange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("Db")
                        .HasColumnType("numeric")
                        .HasColumnName("db_mm");

                    b.Property<decimal?>("Dbco")
                        .HasColumnType("numeric")
                        .HasColumnName("dbco_mm");

                    b.Property<decimal?>("Dbei")
                        .HasColumnType("numeric")
                        .HasColumnName("dbei_mm");

                    b.Property<decimal?>("Dbeo")
                        .HasColumnType("numeric")
                        .HasColumnName("dbeo_mm");

                    b.Property<decimal?>("Dcb")
                        .HasColumnType("numeric")
                        .HasColumnName("dcb_mm");

                    b.Property<decimal?>("Dfo")
                        .HasColumnType("numeric")
                        .HasColumnName("dfo_mm");

                    b.Property<decimal?>("Dh")
                        .HasColumnType("numeric")
                        .HasColumnName("dh_mm");

                    b.Property<decimal?>("Dso")
                        .HasColumnType("numeric")
                        .HasColumnName("dso_mm");

                    b.Property<decimal?>("FbPtNom")
                        .HasColumnType("numeric")
                        .HasColumnName("fb_pt_nom_kn");

                    b.Property<int>("FlangeNrBottomToTop")
                        .HasColumnType("integer")
                        .HasColumnName("flange_nr_bottom_to_top");

                    b.Property<int>("FlangeNrTopToBottom")
                        .HasColumnType("integer")
                        .HasColumnName("flange_nr_top_to_bottom");

                    b.Property<decimal?>("FlangeType")
                        .HasColumnType("numeric")
                        .HasColumnName("flange_type");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal?>("Lb")
                        .HasColumnType("numeric")
                        .HasColumnName("lb_mm");

                    b.Property<decimal?>("Lbe")
                        .HasColumnType("numeric")
                        .HasColumnName("lbe_mm");

                    b.Property<decimal?>("Mass")
                        .HasColumnType("numeric")
                        .HasColumnName("mass_kg");

                    b.Property<decimal?>("Nb")
                        .HasColumnType("numeric")
                        .HasColumnName("nb");

                    b.Property<decimal?>("Nh")
                        .HasColumnType("numeric")
                        .HasColumnName("nh_mm");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("PriceCurrency")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("price_currency");

                    b.Property<decimal?>("Rc")
                        .HasColumnType("numeric")
                        .HasColumnName("rc_mm");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SectionNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_nr");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("Tbp")
                        .HasColumnType("numeric")
                        .HasColumnName("tbp_mm");

                    b.Property<decimal?>("Tf")
                        .HasColumnType("numeric")
                        .HasColumnName("tf_mm");

                    b.Property<decimal?>("TfType")
                        .HasColumnType("numeric")
                        .HasColumnName("tf_type");

                    b.Property<decimal?>("Tfa")
                        .HasColumnType("numeric")
                        .HasColumnName("tfa_mm");

                    b.Property<decimal?>("Totalmass")
                        .HasColumnType("numeric")
                        .HasColumnName("totalmass_kg");

                    b.Property<decimal?>("TsUpper")
                        .HasColumnType("numeric")
                        .HasColumnName("ts_mm");

                    b.Property<decimal?>("Wbp")
                        .HasColumnType("numeric")
                        .HasColumnName("wbp_mm");

                    b.Property<decimal?>("Wf")
                        .HasColumnType("numeric")
                        .HasColumnName("wf_mm");

                    b.Property<decimal?>("Wfa")
                        .HasColumnType("numeric")
                        .HasColumnName("wfa_mm");

                    b.Property<decimal?>("Z")
                        .HasColumnType("numeric")
                        .HasColumnName("z_mm");

                    b.HasKey("Id")
                        .HasName("pk_towersite_flanges");

                    b.ToTable("towersite_flanges");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteFlangePair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("Db")
                        .HasColumnType("numeric")
                        .HasColumnName("db_mm");

                    b.Property<decimal?>("Dbco")
                        .HasColumnType("numeric")
                        .HasColumnName("dbco_mm");

                    b.Property<decimal?>("Dbei")
                        .HasColumnType("numeric")
                        .HasColumnName("dbei_mm");

                    b.Property<decimal?>("Dbeo")
                        .HasColumnType("numeric")
                        .HasColumnName("dbeo_mm");

                    b.Property<decimal?>("Dcb")
                        .HasColumnType("numeric")
                        .HasColumnName("dcb_mm");

                    b.Property<decimal?>("Dfo")
                        .HasColumnType("numeric")
                        .HasColumnName("dfo_mm");

                    b.Property<decimal?>("Dh")
                        .HasColumnType("numeric")
                        .HasColumnName("dh_mm");

                    b.Property<decimal?>("Dso")
                        .HasColumnType("numeric")
                        .HasColumnName("dso_mm");

                    b.Property<decimal?>("FbPtNom")
                        .HasColumnType("numeric")
                        .HasColumnName("fb_pt_nom_kn");

                    b.Property<int>("FlangePairNrBottomToTop")
                        .HasColumnType("integer")
                        .HasColumnName("flange_pair_nr_bottom_to_top");

                    b.Property<int>("FlangePairNrTopToBottom")
                        .HasColumnType("integer")
                        .HasColumnName("flange_pair_nr_top_to_bottom");

                    b.Property<decimal?>("FlangeType")
                        .HasColumnType("numeric")
                        .HasColumnName("flange_type");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal?>("Lb")
                        .HasColumnType("numeric")
                        .HasColumnName("lb_mm");

                    b.Property<decimal?>("Lbe")
                        .HasColumnType("numeric")
                        .HasColumnName("lbe_mm");

                    b.Property<decimal?>("Mass")
                        .HasColumnType("numeric")
                        .HasColumnName("mass_kg");

                    b.Property<decimal?>("Nb")
                        .HasColumnType("numeric")
                        .HasColumnName("nb");

                    b.Property<decimal?>("Nh")
                        .HasColumnType("numeric")
                        .HasColumnName("nh_mm");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("PriceCurrency")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("price_currency");

                    b.Property<decimal?>("Rc")
                        .HasColumnType("numeric")
                        .HasColumnName("rc_mm");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("Tbp")
                        .HasColumnType("numeric")
                        .HasColumnName("tbp_mm");

                    b.Property<decimal?>("Tf")
                        .HasColumnType("numeric")
                        .HasColumnName("tf_mm");

                    b.Property<decimal?>("TfType")
                        .HasColumnType("numeric")
                        .HasColumnName("tf_type");

                    b.Property<decimal?>("Tfa")
                        .HasColumnType("numeric")
                        .HasColumnName("tfa_mm");

                    b.Property<decimal?>("Totalmass")
                        .HasColumnType("numeric")
                        .HasColumnName("totalmass_kg");

                    b.Property<decimal?>("TsLower")
                        .HasColumnType("numeric")
                        .HasColumnName("ts_lower_mm");

                    b.Property<decimal?>("TsUpper")
                        .HasColumnType("numeric")
                        .HasColumnName("ts_upper_mm");

                    b.Property<decimal?>("Wbp")
                        .HasColumnType("numeric")
                        .HasColumnName("wbp_mm");

                    b.Property<decimal?>("Wf")
                        .HasColumnType("numeric")
                        .HasColumnName("wf_mm");

                    b.Property<decimal?>("Wfa")
                        .HasColumnType("numeric")
                        .HasColumnName("wfa_mm");

                    b.Property<decimal?>("Z")
                        .HasColumnType("numeric")
                        .HasColumnName("z_mm");

                    b.HasKey("Id")
                        .HasName("pk_towersite_flange_pairs");

                    b.ToTable("towersite_flange_pairs");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteGeoDoor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("DistBottomToLowerDoorFrame")
                        .HasColumnType("numeric")
                        .HasColumnName("dist_bottom_to_lower_door_frame_mm");

                    b.Property<decimal?>("DistBottomToUpperDoorFrame")
                        .HasColumnType("numeric")
                        .HasColumnName("dist_bottom_to_upper_door_frame_mm");

                    b.Property<decimal?>("DistOuterShellToFrameAtTop")
                        .HasColumnType("numeric")
                        .HasColumnName("dist_outer_shell_to_frame_at_top_mm");

                    b.Property<string>("DoorFrameHolesScfFile")
                        .HasColumnType("text")
                        .HasColumnName("door_frame_holes_scf_file");

                    b.Property<decimal?>("DoorThicknessEffectExponent")
                        .HasColumnType("numeric")
                        .HasColumnName("door_thickness_effect_exponent");

                    b.Property<decimal?>("DoorWeldClass")
                        .HasColumnType("numeric")
                        .HasColumnName("door_weld_class");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal?>("ScfDoorBottomBending")
                        .HasColumnType("numeric")
                        .HasColumnName("scf_door_bottom_bending");

                    b.Property<decimal?>("ScfDoorTopBending")
                        .HasColumnType("numeric")
                        .HasColumnName("scf_door_top_bending");

                    b.Property<decimal?>("ScfDoorTorsion")
                        .HasColumnType("numeric")
                        .HasColumnName("scf_door_torsion");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("ThicknessOfDoorFrame")
                        .HasColumnType("numeric")
                        .HasColumnName("thickness_of_door_frame_mm");

                    b.Property<decimal?>("TotalWidthOfDoorWay")
                        .HasColumnType("numeric")
                        .HasColumnName("total_width_of_door_way_mm");

                    b.Property<decimal?>("WidthOfDoorFrame")
                        .HasColumnType("numeric")
                        .HasColumnName("width_of_door_frame_mm");

                    b.HasKey("Id")
                        .HasName("pk_towersite_geo_door");

                    b.ToTable("towersite_geo_door");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteGeoMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("Dbot")
                        .HasColumnType("numeric")
                        .HasColumnName("dbot_mm");

                    b.Property<decimal?>("Dtop")
                        .HasColumnType("numeric")
                        .HasColumnName("dtop_mm");

                    b.Property<decimal?>("H")
                        .HasColumnType("numeric")
                        .HasColumnName("h_mm");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<int?>("Matrid")
                        .HasColumnType("integer")
                        .HasColumnName("matrid");

                    b.Property<int?>("ObjectNr")
                        .HasColumnType("integer")
                        .HasColumnName("object_nr");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("object_type");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal?>("SCFtop")
                        .HasColumnType("numeric")
                        .HasColumnName("sc_ftop");

                    b.Property<int?>("SectionPartNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_part_nr");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("T")
                        .HasColumnType("numeric")
                        .HasColumnName("t_mm");

                    b.HasKey("Id")
                        .HasName("pk_towersite_geo_main");

                    b.ToTable("towersite_geo_main");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteListRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("region_name");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("units");

                    b.HasKey("Id")
                        .HasName("pk_towersite_list_regions");

                    b.ToTable("towersite_list_regions");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteListTower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("DefaulthubheightM")
                        .HasColumnType("numeric")
                        .HasColumnName("defaulthubheight_m");

                    b.Property<decimal?>("DefaultmaxsectiondiameterM")
                        .HasColumnType("numeric")
                        .HasColumnName("defaultmaxsectiondiameter_m");

                    b.Property<decimal?>("DefaultmaxsectionlengthM")
                        .HasColumnType("numeric")
                        .HasColumnName("defaultmaxsectionlength_m");

                    b.Property<int?>("Defaultmaxsectionnumber")
                        .HasColumnType("integer")
                        .HasColumnName("defaultmaxsectionnumber");

                    b.Property<decimal?>("DefaultmaxsectionweightKg")
                        .HasColumnType("numeric")
                        .HasColumnName("defaultmaxsectionweight_kg");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("description");

                    b.Property<string>("Gpcode")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("gpcode");

                    b.Property<decimal?>("HubheightM")
                        .HasColumnType("numeric")
                        .HasColumnName("hubheight_m");

                    b.Property<decimal?>("HubheightmaxM")
                        .HasColumnType("numeric")
                        .HasColumnName("hubheightmax_m");

                    b.Property<decimal?>("HubheightminM")
                        .HasColumnType("numeric")
                        .HasColumnName("hubheightmin_m");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("platform");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Technology")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("technology");

                    b.Property<decimal?>("TotaltowerweightKg")
                        .HasColumnType("numeric")
                        .HasColumnName("totaltowerweight_kg");

                    b.Property<string>("Tower")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("tower");

                    b.Property<string>("Wtgmachine")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("wtgmachine");

                    b.HasKey("Id")
                        .HasName("pk_towersite_list_towers");

                    b.ToTable("towersite_list_towers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteMasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("LcogMm")
                        .HasColumnType("numeric")
                        .HasColumnName("lcog_mm");

                    b.Property<decimal>("LengthMm")
                        .HasColumnType("numeric")
                        .HasColumnName("length_mm");

                    b.Property<decimal>("MassKg")
                        .HasColumnType("numeric")
                        .HasColumnName("mass_kg");

                    b.Property<decimal>("RaKg")
                        .HasColumnType("numeric")
                        .HasColumnName("ra_kg");

                    b.Property<decimal>("RbKg")
                        .HasColumnType("numeric")
                        .HasColumnName("rb_kg");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SectionNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_nr");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.HasKey("Id")
                        .HasName("pk_towersite_masses");

                    b.ToTable("towersite_masses");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersitePlate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("A")
                        .HasColumnType("numeric")
                        .HasColumnName("a");

                    b.Property<decimal?>("B")
                        .HasColumnType("numeric")
                        .HasColumnName("b");

                    b.Property<decimal?>("C")
                        .HasColumnType("numeric")
                        .HasColumnName("c");

                    b.Property<decimal?>("D")
                        .HasColumnType("numeric")
                        .HasColumnName("d");

                    b.Property<decimal?>("E")
                        .HasColumnType("numeric")
                        .HasColumnName("e");

                    b.Property<decimal?>("F")
                        .HasColumnType("numeric")
                        .HasColumnName("f");

                    b.Property<decimal?>("G")
                        .HasColumnType("numeric")
                        .HasColumnName("g");

                    b.Property<decimal?>("Gwght")
                        .HasColumnType("numeric")
                        .HasColumnName("gwght");

                    b.Property<decimal?>("H")
                        .HasColumnType("numeric")
                        .HasColumnName("h");

                    b.Property<decimal?>("I")
                        .HasColumnType("numeric")
                        .HasColumnName("i");

                    b.Property<decimal?>("J")
                        .HasColumnType("numeric")
                        .HasColumnName("j");

                    b.Property<decimal?>("K")
                        .HasColumnType("numeric")
                        .HasColumnName("k");

                    b.Property<decimal?>("L")
                        .HasColumnType("numeric")
                        .HasColumnName("l");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal?>("M")
                        .HasColumnType("numeric")
                        .HasColumnName("m");

                    b.Property<string>("Mat")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("mat");

                    b.Property<decimal?>("N")
                        .HasColumnType("numeric")
                        .HasColumnName("n");

                    b.Property<decimal?>("Nwght")
                        .HasColumnType("numeric")
                        .HasColumnName("nwght");

                    b.Property<decimal?>("O")
                        .HasColumnType("numeric")
                        .HasColumnName("o");

                    b.Property<string>("Pos")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("pos");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SectionNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_nr");

                    b.Property<string>("SectionType")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("section_type");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("Surf")
                        .HasColumnType("numeric")
                        .HasColumnName("surf");

                    b.HasKey("Id")
                        .HasName("pk_towersite_plates");

                    b.ToTable("towersite_plates");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersitePlatesSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("DTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("d_total");

                    b.Property<decimal?>("GwghtTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("gwght_total");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal?>("NwghtTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("nwght_total");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<int>("SectionNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_nr");

                    b.Property<string>("SectionType")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("section_type");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("SurfTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("surf_total");

                    b.HasKey("Id")
                        .HasName("pk_towersite_plates_summary");

                    b.ToTable("towersite_plates_summary");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersitePlatesTowerSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal?>("DGrandTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("d_grand_total");

                    b.Property<decimal?>("GwghtGrandTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("gwght_grand_total");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal?>("NwghtGrandTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("nwght_grand_total");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal?>("SurfGrandTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("surf_grand_total");

                    b.HasKey("Id")
                        .HasName("pk_towersite_plates_tower_summary");

                    b.ToTable("towersite_plates_tower_summary");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteReportDesignStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("error_message");

                    b.Property<bool>("IsError")
                        .HasColumnType("boolean")
                        .HasColumnName("is_error");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.HasKey("Id")
                        .HasName("pk_towersite_report_design_status");

                    b.ToTable("towersite_report_design_status");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteReportGeneralData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<decimal>("BottomExtremeLoadsKnm")
                        .HasColumnType("numeric")
                        .HasColumnName("bottom_extreme_loads_knm");

                    b.Property<decimal>("BottomExtremeLoadsVsNominalPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("bottom_extreme_loads_vs_nominal_percentage");

                    b.Property<decimal>("BottomFatigueLoadsKnm")
                        .HasColumnType("numeric")
                        .HasColumnName("bottom_fatigue_loads_knm");

                    b.Property<decimal>("BottomFatigueLoadsVsNominalPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("bottom_fatigue_loads_vs_nominal_percentage");

                    b.Property<string>("InitialTower")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("initial_tower");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("NominalTower")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("nominal_tower");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("region");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.HasKey("Id")
                        .HasName("pk_towersite_report_general_data");

                    b.ToTable("towersite_report_general_data");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteReportSectionsData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("LowerFlangeExternalDiameterM")
                        .HasColumnType("numeric")
                        .HasColumnName("lower_flange_external_diameter_m");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("SectionLengthM")
                        .HasColumnType("numeric")
                        .HasColumnName("section_length_m");

                    b.Property<int>("SectionNr")
                        .HasColumnType("integer")
                        .HasColumnName("section_nr");

                    b.Property<string>("SectionType")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("section_type");

                    b.Property<decimal>("SectionWeightKg")
                        .HasColumnType("numeric")
                        .HasColumnName("section_weight_kg");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal>("UpperFlangeExternalDiameterM")
                        .HasColumnType("numeric")
                        .HasColumnName("upper_flange_external_diameter_m");

                    b.HasKey("Id")
                        .HasName("pk_towersite_report_sections_data");

                    b.ToTable("towersite_report_sections_data");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteReportTotalSectionsData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<decimal>("LengthM")
                        .HasColumnType("numeric")
                        .HasColumnName("length_m");

                    b.Property<decimal>("LengthNominalPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("length_nominal_percentage");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal>("WeightKg")
                        .HasColumnType("numeric")
                        .HasColumnName("weight_kg");

                    b.Property<decimal>("weightNominalPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("weight_nominal_percentage");

                    b.HasKey("Id")
                        .HasName("pk_towersite_report_total_sections_data");

                    b.ToTable("towersite_report_total_sections_data");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteVivBolt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("FromSection")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("from_section");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<decimal>("TightenedBoltsPercentage")
                        .HasPrecision(10, 5)
                        .HasColumnType("numeric(10,5)")
                        .HasColumnName("tightened_bolts_percentage");

                    b.Property<string>("ToSection")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("to_section");

                    b.HasKey("Id")
                        .HasName("pk_towersite_viv_bolts");

                    b.ToTable("towersite_viv_bolts");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteVivWindspeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Critical10minTmeanWindMs")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("crit10min_tmean_wind_m_s");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Maxallowed10minMeanWindMs")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("maxallowed10min_mean_wind_m_s");

                    b.Property<string>("MaxallowedVivDuration")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("maxallowed_viv_duration");

                    b.Property<string>("PreventiveMeasure")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("preventive_measure");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<string>("StageDescription")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("stage_description");

                    b.Property<int>("StageNr")
                        .HasColumnType("integer")
                        .HasColumnName("stage_nr");

                    b.HasKey("Id")
                        .HasName("pk_towersite_viv_windspeed");

                    b.ToTable("towersite_viv_windspeed");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowersiteVmList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image_name");

                    b.Property<string>("JobStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("job_status");

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<JsonDocument>("Payload")
                        .HasColumnType("jsonb")
                        .HasColumnName("payload");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<Guid?>("SstUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("sst_uuid");

                    b.Property<string>("VmName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("vm_name");

                    b.Property<string>("VmPassword")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("vm_password");

                    b.Property<string>("VmStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("vm_status");

                    b.Property<string>("VmUsername")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("vm_username");

                    b.HasKey("Id")
                        .HasName("pk_towersite_vm_list");

                    b.ToTable("towersite_vm_list");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TransportMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_transport_modes");

                    b.ToTable("transport_modes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Road"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rail"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.WtgCatalogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<DateTimeOffset?>("LastModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date_time");

                    b.Property<string>("Platform")
                        .HasColumnType("text")
                        .HasColumnName("platform");

                    b.Property<DateTimeOffset?>("RecordInsertDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_insert_date_time");

                    b.Property<decimal>("WtgSizeMW")
                        .HasPrecision(10, 5)
                        .HasColumnType("numeric(10,5)")
                        .HasColumnName("wtg_size_mw");

                    b.Property<string>("WtgType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("wtg_type");

                    b.HasKey("Id")
                        .HasName("pk_wtg_catalogues");

                    b.ToTable("wtg_catalogues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Platform = "SG5.X",
                            WtgSizeMW = 6.2m,
                            WtgType = "SG 6.0-170"
                        },
                        new
                        {
                            Id = 2,
                            Platform = "SG5.X",
                            WtgSizeMW = 6.6m,
                            WtgType = "SG 6.0-155"
                        },
                        new
                        {
                            Id = 3,
                            Platform = "SG4.X",
                            WtgSizeMW = 5m,
                            WtgType = "SG 5.0-145"
                        },
                        new
                        {
                            Id = 4,
                            Platform = "SG4.X",
                            WtgSizeMW = 5m,
                            WtgType = "SG 5.0-132"
                        },
                        new
                        {
                            Id = 5,
                            Platform = "SG3.X",
                            WtgSizeMW = 3.6m,
                            WtgType = "SG 3.4-145"
                        },
                        new
                        {
                            Id = 6,
                            Platform = "SG3.X",
                            WtgSizeMW = 3.65m,
                            WtgType = "SG 3.4-132"
                        },
                        new
                        {
                            Id = 7,
                            Platform = "SG4.X",
                            WtgSizeMW = 5m,
                            WtgType = "SG 4.7-155"
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.WtgThreshold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityAlwaysColumn();

                    b.Property<int>("TurbineQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("turbine_quantity");

                    b.Property<decimal>("WindFarmSize")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("wind_farm_size");

                    b.HasKey("Id")
                        .HasName("pk_wtg_thresholds");

                    b.ToTable("wtg_thresholds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TurbineQuantity = 20,
                            WindFarmSize = 100m
                        });
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ApplicationMode", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany("ApplicationModes")
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_application_modes_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTower", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.LoadsCluster", "LoadsCluster")
                        .WithMany()
                        .HasForeignKey("LoadsClusterId")
                        .HasConstraintName("fk_base_tower_loads_clusters_loads_cluster_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId")
                        .HasConstraintName("fk_base_tower_quotes_quote_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.TowerType", "TowerType")
                        .WithMany()
                        .HasForeignKey("TowerTypeId")
                        .HasConstraintName("fk_base_tower_tower_types_tower_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany()
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_base_tower_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoadsCluster");

                    b.Navigation("Quote");

                    b.Navigation("TowerType");

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTowerAepHubheight", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.BaseTower", "BaseTower")
                        .WithOne("BaseTowerAepHubheight")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.BaseTowerAepHubheight", "BaseTowerId")
                        .HasConstraintName("fk_base_tower_aep_hubheight_base_tower_base_tower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseTower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTowerDesignDimension", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.BaseTower", "BaseTower")
                        .WithOne("BaseTowerDesignDimension")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.BaseTowerDesignDimension", "BaseTowerId")
                        .HasConstraintName("fk_base_tower_design_dimension_base_tower_base_tower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseTower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ConstructionConstraint", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.ProjectConstraint", "ProjectConstraint")
                        .WithOne("ConstructionConstraint")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.ConstructionConstraint", "ProjectConstraintId")
                        .HasConstraintName("fk_construction_constraints_project_constraints_project_constr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectConstraint");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostFeedback", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Scenario", "Scenario")
                        .WithMany()
                        .HasForeignKey("ScenarioId")
                        .HasConstraintName("fk_cost_feed_back_scenarios_scenario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTechnology", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostFeedback", "CostFeedback")
                        .WithOne("CostsTechnologies")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.CostsTechnology", "CostFeedbackId")
                        .HasConstraintName("fk_costs_technology_cost_feed_back_cost_feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostFeedback");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerConstruction", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostFeedback", "CostFeedback")
                        .WithOne("CostsTowerConstructions")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.CostsTowerConstruction", "CostFeedbackId")
                        .HasConstraintName("fk_costs_tower_construction_cost_feed_back_cost_feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerConstructionMeta", "CostsTowerConstructionMeta")
                        .WithMany()
                        .HasForeignKey("CostsTowerConstructionMetaId")
                        .HasConstraintName("fk_costs_tower_construction_costs_tower_construction_meta_cost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostFeedback");

                    b.Navigation("CostsTowerConstructionMeta");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustoms", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostFeedback", "CostFeedback")
                        .WithMany("CostsTowerCustoms")
                        .HasForeignKey("CostFeedbackId")
                        .HasConstraintName("fk_costs_tower_customs_cost_feed_back_cost_feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostFeedback");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsLineItem", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsMeta", "CostsTowerCustomsMeta")
                        .WithMany()
                        .HasForeignKey("CostsTowerCustomsMetaId")
                        .HasConstraintName("fk_costs_tower_customs_line_item_costs_tower_customs_meta_cost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsSupplier", "CostsTowerCustomsSupplier")
                        .WithMany("CostsTowerCustomsLineItems")
                        .HasForeignKey("CostsTowerCustomsSupplierId")
                        .HasConstraintName("fk_costs_tower_customs_line_item_costs_tower_customs_supplier_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerCustomsMeta");

                    b.Navigation("CostsTowerCustomsSupplier");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsSupplier", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerCustoms", "CostsTowerCustoms")
                        .WithMany("CostsTowerCustomsSuppliers")
                        .HasForeignKey("CostsTowerCustomsId")
                        .HasConstraintName("fk_costs_tower_customs_supplier_costs_tower_customs_costs_tower")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerCustoms");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerExWorks", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostFeedback", "CostFeedback")
                        .WithOne("CostsTowerExWorks")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.CostsTowerExWorks", "CostFeedbackId")
                        .HasConstraintName("fk_costs_tower_ex_works_cost_feed_back_cost_feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostFeedback");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerExWorksLineItem", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerExWorks", "CostsTowerExWorks")
                        .WithMany("CostsTowerExWorksLineItems")
                        .HasForeignKey("CostsTowerExWorksId")
                        .HasConstraintName("fk_costs_tower_ex_works_line_item_costs_tower_ex_works_costs_to")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerExWorksMeta", "CostsTowerExWorksMeta")
                        .WithMany()
                        .HasForeignKey("CostsTowerExWorksMetaId")
                        .HasConstraintName("fk_costs_tower_ex_works_line_item_costs_tower_ex_works_meta_co")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerExWorks");

                    b.Navigation("CostsTowerExWorksMeta");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogistics", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostFeedback", "CostFeedback")
                        .WithMany("CostsTowerLogistics")
                        .HasForeignKey("CostFeedbackId")
                        .HasConstraintName("fk_costs_tower_logistics_cost_feed_back_cost_feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostFeedback");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsLeadTimeLineitem", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsLeadTimeMeta", "CostsTowerLogisticsLeadTimeMeta")
                        .WithMany()
                        .HasForeignKey("CostsTowerLogisticsLeadTimeMetaId")
                        .HasConstraintName("fk_costs_tower_logistics_lead_time_costs_tower_logistics_lead_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsSupplier", "CostsTowerLogisticsSuppliers")
                        .WithMany("CostsTowerLogisticsLeadTimeLineitems")
                        .HasForeignKey("CostsTowerLogisticsSuppliersId")
                        .HasConstraintName("fk_costs_tower_logistics_lead_time_costs_tower_logistics_suppl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerLogisticsLeadTimeMeta");

                    b.Navigation("CostsTowerLogisticsSuppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsLineItem", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsMeta", "CostsTowerLogisticsMeta")
                        .WithMany()
                        .HasForeignKey("CostsTowerLogisticsMetaId")
                        .HasConstraintName("fk_costs_tower_logistics_line_item_costs_tower_logistics_meta_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsSupplier", "CostsTowerLogisticsSupplier")
                        .WithMany("CostsTowerLogisticsLineItems")
                        .HasForeignKey("CostsTowerLogisticsSupplierId")
                        .HasConstraintName("fk_costs_tower_logistics_line_item_costs_tower_logistics_suppl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerLogisticsMeta");

                    b.Navigation("CostsTowerLogisticsSupplier");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsSupplier", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerLogistics", "CostsTowerLogistics")
                        .WithMany("CostsTowerLogisticsSuppliers")
                        .HasForeignKey("CostsTowerLogisticsId")
                        .HasConstraintName("fk_costs_tower_logistics_supplier_costs_tower_logistics_costs_t")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerLogistics");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerSupplier", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostFeedback", "CostFeedback")
                        .WithMany("CostsTowerSuppliers")
                        .HasForeignKey("CostFeedbackId")
                        .HasConstraintName("fk_costs_tower_supplier_cost_feed_back_cost_feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostFeedback");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerSupplierLineItem", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerSupplierMeta", "CostsTowerSupplierMeta")
                        .WithMany()
                        .HasForeignKey("CostsTowerSupplierMetaId")
                        .HasConstraintName("fk_costs_tower_supplier_line_item_costs_tower_supplier_meta_co")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Suppliers", "Suppliers")
                        .WithMany("CostsTowerSupplierLineItems")
                        .HasForeignKey("SuppliersId")
                        .HasConstraintName("fk_costs_tower_supplier_line_item_suppliers_suppliers_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerSupplierMeta");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Country", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("fk_countries_currencies_currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_countries_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.GenericMarketBoundary", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .HasConstraintName("fk_generic_market_boundaries_countries_country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.TransportMode", "TransportMode")
                        .WithMany()
                        .HasForeignKey("TransportModeId")
                        .HasConstraintName("fk_generic_market_boundaries_transport_modes_transport_mode_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("TransportMode");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.InitialTower", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany("InitialTowers")
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_initial_towers_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LogisticConstraint", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.LogisticStatus", "LogisticStatus")
                        .WithMany()
                        .HasForeignKey("LogisticStatusId")
                        .HasConstraintName("fk_logistic_constraints_logistic_statuses_logistic_status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.ProjectConstraint", "ProjectConstraint")
                        .WithOne("LogisticConstraint")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.LogisticConstraint", "ProjectConstraintId")
                        .HasConstraintName("fk_logistic_constraints_project_constraints_project_constraint")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.TransportMode", "TransportMode")
                        .WithMany()
                        .HasForeignKey("TransportModeId")
                        .HasConstraintName("fk_logistic_constraints_transport_modes_transport_mode_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogisticStatus");

                    b.Navigation("ProjectConstraint");

                    b.Navigation("TransportMode");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LogisticProjectBoundary", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.LogisticConstraint", "LogisticConstraint")
                        .WithMany("logisticProjectBoundaries")
                        .HasForeignKey("LogisticConstraintId")
                        .HasConstraintName("fk_logistic_project_boundaries_logistic_constraints_logistic_co")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.TransportMode", "TransportMode")
                        .WithMany()
                        .HasForeignKey("TransportModeId")
                        .HasConstraintName("fk_logistic_project_boundaries_transport_modes_transport_mode_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogisticConstraint");

                    b.Navigation("TransportMode");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.NacelleDistance", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany("NacelleDistances")
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_nacelle_distances_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.NoiseMode", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.TowerType", "TowerType")
                        .WithMany("NoiseModes")
                        .HasForeignKey("TowerTypeId")
                        .HasConstraintName("fk_noise_modes_tower_types_tower_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TowerType");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Permission", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.ProjectModule", "ProjectModule")
                        .WithMany()
                        .HasForeignKey("ProjectModuleId")
                        .HasConstraintName("fk_permissions_project_modules_project_module_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_permissions_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectModule");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.PermitsSalesConstraint", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.ProjectConstraint", "ProjectConstraints")
                        .WithOne("PermitsSalesConstraint")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.PermitsSalesConstraint", "ProjectConstraintId")
                        .HasConstraintName("fk_permits_sales_constraints_project_constraints_project_const")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectConstraints");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.PresetRoles", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_preset_roles_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_preset_roles_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Project", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .HasConstraintName("fk_projects_countries_country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("fk_projects_currencies_currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectConstraint", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Project", "Project")
                        .WithMany("ProjectConstraints")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_project_constraints_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectMileStones", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.MileStone", "MileStone")
                        .WithMany()
                        .HasForeignKey("MileStoneId")
                        .HasConstraintName("fk_project_mile_stones_mile_stones_mile_stone_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Project", "Project")
                        .WithMany("ProjectMileStones")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_project_mile_stones_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MileStone");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectRoles", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Project", null)
                        .WithMany("ProjectRoles")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_project_roles_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_project_roles_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Proposal", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Certification", "Certification")
                        .WithMany()
                        .HasForeignKey("CertificationId")
                        .HasConstraintName("fk_proposals_certifications_certification_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Project", "Project")
                        .WithMany("Proposals")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_proposals_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certification");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProposalTasks", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Proposal", "Proposal")
                        .WithMany("ProposalTasks")
                        .HasForeignKey("ProposalId")
                        .HasConstraintName("fk_proposal_tasks_proposals_proposal_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .HasConstraintName("fk_proposal_tasks_tasks_task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposal");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Quote", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Proposal", "Proposal")
                        .WithMany("Quotes")
                        .HasForeignKey("ProposalId")
                        .HasConstraintName("fk_quotes_proposals_proposal_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.QuoteLine", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Quote", "Quote")
                        .WithMany("QuoteLines")
                        .HasForeignKey("QuoteId")
                        .HasConstraintName("fk_quote_lines_quotes_quote_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany()
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_quote_lines_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.RnaCost", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("fk_rna_costs_currencies_currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany()
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_rna_costs_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Scenario", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId")
                        .HasConstraintName("fk_scenarios_quotes_quote_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ScenarioCostsKpi", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Scenario", "Scenario")
                        .WithMany("ScenarioCostsKpis")
                        .HasForeignKey("ScenarioId")
                        .HasConstraintName("fk_scenario_costs_kpis_scenarios_scenario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ScenarioDesign", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Scenario", "Scenario")
                        .WithMany("ScenarioDesigns")
                        .HasForeignKey("ScenarioId")
                        .HasConstraintName("fk_scenario_designs_scenarios_scenario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ScenarioOverView", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.LoadsCluster", "loadsCluster")
                        .WithMany()
                        .HasForeignKey("LoadsClusterId")
                        .HasConstraintName("fk_scenario_over_view_loads_clusters_loads_cluster_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.ScenarioCostsKpi", "ScenarioCostKpi")
                        .WithMany()
                        .HasForeignKey("ScenarioCostKpiId")
                        .HasConstraintName("fk_scenario_over_view_scenario_costs_kpis_scenario_cost_kpi_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.ScenarioDesign", "ScenarioDesign")
                        .WithMany()
                        .HasForeignKey("ScenarioDesignId")
                        .HasConstraintName("fk_scenario_over_view_scenario_designs_scenario_design_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "wtgCatalogue")
                        .WithMany()
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_scenario_over_view_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("loadsCluster");

                    b.Navigation("ScenarioCostKpi");

                    b.Navigation("ScenarioDesign");

                    b.Navigation("wtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SpecialRequirementsSalesConstraint", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.ProjectConstraint", "ProjectConstraint")
                        .WithOne("SpecialRequirementsSalesConstraint")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.SpecialRequirementsSalesConstraint", "ProjectConstraintId")
                        .HasConstraintName("fk_special_requirements_sales_constraints_project_constraints_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectConstraint");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstDesignEvaluation", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.SstTower", "sstTower")
                        .WithMany()
                        .HasForeignKey("sstTowerId")
                        .HasConstraintName("fk_sst_design_evaluation_sst_tower_sst_tower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sstTower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstDesignSeismicAssessment", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.SstDesignEvaluation", "SstDesignEvaluation")
                        .WithOne("SstDesignSeismicAssessment")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.SstDesignSeismicAssessment", "SstDesignEvaluationId")
                        .HasConstraintName("fk_sst_design_seismic_assessment_sst_design_evaluation_sst_des")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SstDesignEvaluation");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstPredesignDimesions", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.SstTower", "SstTower")
                        .WithOne("SstPredesignDimesions")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.SstPredesignDimesions", "SstTowerId")
                        .HasConstraintName("fk_sst_predesign_dimesions_sst_tower_sst_tower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SstTower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstPredesignExistingHubHeight", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.SstTower", "SstTower")
                        .WithOne("SstPredesignExistingHubHeights")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.SstPredesignExistingHubHeight", "SstTowerId")
                        .HasConstraintName("fk_sst_predesign_existing_hub_heights_sst_tower_sst_tower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SstTower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstPredesignProposedHubHeight", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.SstTower", "SstTower")
                        .WithOne("SstPredesignProposedHubHeights")
                        .HasForeignKey("SGRE.TSA.DataStore.API.Models.SstPredesignProposedHubHeight", "SstTowerId")
                        .HasConstraintName("fk_sst_predesign_proposed_hub_heights_sst_tower_sst_tower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SstTower");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstTower", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.InitialTower", "InitialTower")
                        .WithMany()
                        .HasForeignKey("InitialTowerId")
                        .HasConstraintName("fk_sst_tower_initial_towers_initial_tower_id");

                    b.HasOne("SGRE.TSA.DataStore.API.Models.LoadsCluster", "LoadsCluster")
                        .WithMany()
                        .HasForeignKey("LoadsClusterId")
                        .HasConstraintName("fk_sst_tower_loads_clusters_loads_cluster_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId")
                        .HasConstraintName("fk_sst_tower_quotes_quote_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.TowerType", "TowerType")
                        .WithMany()
                        .HasForeignKey("TowerTypeId")
                        .HasConstraintName("fk_sst_tower_tower_types_tower_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany()
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_sst_tower_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InitialTower");

                    b.Navigation("LoadsCluster");

                    b.Navigation("Quote");

                    b.Navigation("TowerType");

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Suppliers", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.CostsTowerSupplier", "CostsTowerSupplier")
                        .WithMany("Suppliers")
                        .HasForeignKey("CostsTowerSupplierId")
                        .HasConstraintName("fk_suppliers_costs_tower_supplier_costs_tower_supplier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostsTowerSupplier");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerDesignCost", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("fk_tower_design_costs_currencies_currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSections", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.TowerType", "TowerType")
                        .WithMany("TowerSections")
                        .HasForeignKey("TowerTypeId")
                        .HasConstraintName("fk_tower_sections_tower_types_tower_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TowerType");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSupplierRegion", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.InterfaceTools", "InterfaceTools")
                        .WithMany()
                        .HasForeignKey("InterfaceToolsId")
                        .HasConstraintName("fk_tower_supplier_regions_interface_tools_interface_tools_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGRE.TSA.DataStore.API.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_tower_supplier_regions_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterfaceTools");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSupplierSource", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.TowerSupplierRegion", "TowerSupplierRegion")
                        .WithMany("TowerSupplierSource")
                        .HasForeignKey("TowerSupplierRegionId")
                        .HasConstraintName("fk_tower_supplier_sources_tower_supplier_regions_tower_supplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TowerSupplierRegion");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerType", b =>
                {
                    b.HasOne("SGRE.TSA.DataStore.API.Models.WtgCatalogue", "WtgCatalogue")
                        .WithMany("TowerTypes")
                        .HasForeignKey("WtgCatalogueId")
                        .HasConstraintName("fk_tower_types_wtg_catalogues_wtg_catalogue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WtgCatalogue");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.BaseTower", b =>
                {
                    b.Navigation("BaseTowerAepHubheight");

                    b.Navigation("BaseTowerDesignDimension");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostFeedback", b =>
                {
                    b.Navigation("CostsTechnologies");

                    b.Navigation("CostsTowerConstructions");

                    b.Navigation("CostsTowerCustoms");

                    b.Navigation("CostsTowerExWorks");

                    b.Navigation("CostsTowerLogistics");

                    b.Navigation("CostsTowerSuppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustoms", b =>
                {
                    b.Navigation("CostsTowerCustomsSuppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerCustomsSupplier", b =>
                {
                    b.Navigation("CostsTowerCustomsLineItems");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerExWorks", b =>
                {
                    b.Navigation("CostsTowerExWorksLineItems");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogistics", b =>
                {
                    b.Navigation("CostsTowerLogisticsSuppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerLogisticsSupplier", b =>
                {
                    b.Navigation("CostsTowerLogisticsLeadTimeLineitems");

                    b.Navigation("CostsTowerLogisticsLineItems");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.CostsTowerSupplier", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.LogisticConstraint", b =>
                {
                    b.Navigation("logisticProjectBoundaries");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Project", b =>
                {
                    b.Navigation("ProjectConstraints");

                    b.Navigation("ProjectMileStones");

                    b.Navigation("ProjectRoles");

                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.ProjectConstraint", b =>
                {
                    b.Navigation("ConstructionConstraint");

                    b.Navigation("LogisticConstraint");

                    b.Navigation("PermitsSalesConstraint");

                    b.Navigation("SpecialRequirementsSalesConstraint");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Proposal", b =>
                {
                    b.Navigation("ProposalTasks");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Quote", b =>
                {
                    b.Navigation("QuoteLines");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Scenario", b =>
                {
                    b.Navigation("ScenarioCostsKpis");

                    b.Navigation("ScenarioDesigns");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstDesignEvaluation", b =>
                {
                    b.Navigation("SstDesignSeismicAssessment");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.SstTower", b =>
                {
                    b.Navigation("SstPredesignDimesions");

                    b.Navigation("SstPredesignExistingHubHeights");

                    b.Navigation("SstPredesignProposedHubHeights");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.Suppliers", b =>
                {
                    b.Navigation("CostsTowerSupplierLineItems");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerSupplierRegion", b =>
                {
                    b.Navigation("TowerSupplierSource");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.TowerType", b =>
                {
                    b.Navigation("NoiseModes");

                    b.Navigation("TowerSections");
                });

            modelBuilder.Entity("SGRE.TSA.DataStore.API.Models.WtgCatalogue", b =>
                {
                    b.Navigation("ApplicationModes");

                    b.Navigation("InitialTowers");

                    b.Navigation("NacelleDistances");

                    b.Navigation("TowerTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
